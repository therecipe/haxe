package qt;

import qt.Core;
import qt.Gui;

class Widgets {
	private static var inited = false;

	public static function initModule() {
		if (inited) {
			return;
		}
		inited = true;
		Internal.constructorTable["widgets.QAbstractButton"] = NewQAbstractButtonFromPointer;
		Internal.constructorTable["widgets.QAbstractGraphicsShapeItem"] = NewQAbstractGraphicsShapeItemFromPointer;
		Internal.constructorTable["widgets.QAbstractItemDelegate"] = NewQAbstractItemDelegateFromPointer;
		Internal.constructorTable["widgets.QAbstractItemView"] = NewQAbstractItemViewFromPointer;
		Internal.constructorTable["widgets.QAbstractScrollArea"] = NewQAbstractScrollAreaFromPointer;
		Internal.constructorTable["widgets.QAbstractSlider"] = NewQAbstractSliderFromPointer;
		Internal.constructorTable["widgets.QAbstractSpinBox"] = NewQAbstractSpinBoxFromPointer;
		Internal.constructorTable["widgets.QAccessibleWidget"] = NewQAccessibleWidgetFromPointer;
		Internal.constructorTable["widgets.QAction"] = NewQActionFromPointer;
		Internal.constructorTable["widgets.QActionGroup"] = NewQActionGroupFromPointer;
		Internal.constructorTable["widgets.QApplication"] = NewQApplicationFromPointer;
		Internal.constructorTable["widgets.QBoxLayout"] = NewQBoxLayoutFromPointer;
		Internal.constructorTable["widgets.QButtonGroup"] = NewQButtonGroupFromPointer;
		Internal.constructorTable["widgets.QCalendarWidget"] = NewQCalendarWidgetFromPointer;
		Internal.constructorTable["widgets.QCheckBox"] = NewQCheckBoxFromPointer;
		Internal.constructorTable["widgets.QColorDialog"] = NewQColorDialogFromPointer;
		Internal.constructorTable["widgets.QColormap"] = NewQColormapFromPointer;
		Internal.constructorTable["widgets.QColumnView"] = NewQColumnViewFromPointer;
		Internal.constructorTable["widgets.QComboBox"] = NewQComboBoxFromPointer;
		Internal.constructorTable["widgets.QCommandLinkButton"] = NewQCommandLinkButtonFromPointer;
		Internal.constructorTable["widgets.QCommonStyle"] = NewQCommonStyleFromPointer;
		Internal.constructorTable["widgets.QCompleter"] = NewQCompleterFromPointer;
		Internal.constructorTable["widgets.QDataWidgetMapper"] = NewQDataWidgetMapperFromPointer;
		Internal.constructorTable["widgets.QDateEdit"] = NewQDateEditFromPointer;
		Internal.constructorTable["widgets.QDateTimeEdit"] = NewQDateTimeEditFromPointer;
		Internal.constructorTable["widgets.QDesktopWidget"] = NewQDesktopWidgetFromPointer;
		Internal.constructorTable["widgets.QDial"] = NewQDialFromPointer;
		Internal.constructorTable["widgets.QDialog"] = NewQDialogFromPointer;
		Internal.constructorTable["widgets.QDialogButtonBox"] = NewQDialogButtonBoxFromPointer;
		Internal.constructorTable["widgets.QDirModel"] = NewQDirModelFromPointer;
		Internal.constructorTable["widgets.QDockWidget"] = NewQDockWidgetFromPointer;
		Internal.constructorTable["widgets.QDoubleSpinBox"] = NewQDoubleSpinBoxFromPointer;
		Internal.constructorTable["widgets.QErrorMessage"] = NewQErrorMessageFromPointer;
		Internal.constructorTable["widgets.QFileDialog"] = NewQFileDialogFromPointer;
		Internal.constructorTable["widgets.QFileIconProvider"] = NewQFileIconProviderFromPointer;
		Internal.constructorTable["widgets.QFileSystemModel"] = NewQFileSystemModelFromPointer;
		Internal.constructorTable["widgets.QFocusFrame"] = NewQFocusFrameFromPointer;
		Internal.constructorTable["widgets.QFontComboBox"] = NewQFontComboBoxFromPointer;
		Internal.constructorTable["widgets.QFontDialog"] = NewQFontDialogFromPointer;
		Internal.constructorTable["widgets.QFormLayout"] = NewQFormLayoutFromPointer;
		Internal.constructorTable["widgets.QFrame"] = NewQFrameFromPointer;
		Internal.constructorTable["widgets.QGesture"] = NewQGestureFromPointer;
		Internal.constructorTable["widgets.QGestureEvent"] = NewQGestureEventFromPointer;
		Internal.constructorTable["widgets.QGestureRecognizer"] = NewQGestureRecognizerFromPointer;
		Internal.constructorTable["widgets.QGraphicsAnchor"] = NewQGraphicsAnchorFromPointer;
		Internal.constructorTable["widgets.QGraphicsAnchorLayout"] = NewQGraphicsAnchorLayoutFromPointer;
		Internal.constructorTable["widgets.QGraphicsBlurEffect"] = NewQGraphicsBlurEffectFromPointer;
		Internal.constructorTable["widgets.QGraphicsColorizeEffect"] = NewQGraphicsColorizeEffectFromPointer;
		Internal.constructorTable["widgets.QGraphicsDropShadowEffect"] = NewQGraphicsDropShadowEffectFromPointer;
		Internal.constructorTable["widgets.QGraphicsEffect"] = NewQGraphicsEffectFromPointer;
		Internal.constructorTable["widgets.QGraphicsEllipseItem"] = NewQGraphicsEllipseItemFromPointer;
		Internal.constructorTable["widgets.QGraphicsGridLayout"] = NewQGraphicsGridLayoutFromPointer;
		Internal.constructorTable["widgets.QGraphicsItem"] = NewQGraphicsItemFromPointer;
		Internal.constructorTable["widgets.QGraphicsItemAnimation"] = NewQGraphicsItemAnimationFromPointer;
		Internal.constructorTable["widgets.QGraphicsItemGroup"] = NewQGraphicsItemGroupFromPointer;
		Internal.constructorTable["widgets.QGraphicsLayout"] = NewQGraphicsLayoutFromPointer;
		Internal.constructorTable["widgets.QGraphicsLayoutItem"] = NewQGraphicsLayoutItemFromPointer;
		Internal.constructorTable["widgets.QGraphicsLineItem"] = NewQGraphicsLineItemFromPointer;
		Internal.constructorTable["widgets.QGraphicsLinearLayout"] = NewQGraphicsLinearLayoutFromPointer;
		Internal.constructorTable["widgets.QGraphicsObject"] = NewQGraphicsObjectFromPointer;
		Internal.constructorTable["widgets.QGraphicsOpacityEffect"] = NewQGraphicsOpacityEffectFromPointer;
		Internal.constructorTable["widgets.QGraphicsPathItem"] = NewQGraphicsPathItemFromPointer;
		Internal.constructorTable["widgets.QGraphicsPixmapItem"] = NewQGraphicsPixmapItemFromPointer;
		Internal.constructorTable["widgets.QGraphicsPolygonItem"] = NewQGraphicsPolygonItemFromPointer;
		Internal.constructorTable["widgets.QGraphicsProxyWidget"] = NewQGraphicsProxyWidgetFromPointer;
		Internal.constructorTable["widgets.QGraphicsRectItem"] = NewQGraphicsRectItemFromPointer;
		Internal.constructorTable["widgets.QGraphicsRotation"] = NewQGraphicsRotationFromPointer;
		Internal.constructorTable["widgets.QGraphicsScale"] = NewQGraphicsScaleFromPointer;
		Internal.constructorTable["widgets.QGraphicsScene"] = NewQGraphicsSceneFromPointer;
		Internal.constructorTable["widgets.QGraphicsSceneContextMenuEvent"] = NewQGraphicsSceneContextMenuEventFromPointer;
		Internal.constructorTable["widgets.QGraphicsSceneDragDropEvent"] = NewQGraphicsSceneDragDropEventFromPointer;
		Internal.constructorTable["widgets.QGraphicsSceneEvent"] = NewQGraphicsSceneEventFromPointer;
		Internal.constructorTable["widgets.QGraphicsSceneHelpEvent"] = NewQGraphicsSceneHelpEventFromPointer;
		Internal.constructorTable["widgets.QGraphicsSceneHoverEvent"] = NewQGraphicsSceneHoverEventFromPointer;
		Internal.constructorTable["widgets.QGraphicsSceneMouseEvent"] = NewQGraphicsSceneMouseEventFromPointer;
		Internal.constructorTable["widgets.QGraphicsSceneMoveEvent"] = NewQGraphicsSceneMoveEventFromPointer;
		Internal.constructorTable["widgets.QGraphicsSceneResizeEvent"] = NewQGraphicsSceneResizeEventFromPointer;
		Internal.constructorTable["widgets.QGraphicsSceneWheelEvent"] = NewQGraphicsSceneWheelEventFromPointer;
		Internal.constructorTable["widgets.QGraphicsSimpleTextItem"] = NewQGraphicsSimpleTextItemFromPointer;
		Internal.constructorTable["widgets.QGraphicsTextItem"] = NewQGraphicsTextItemFromPointer;
		Internal.constructorTable["widgets.QGraphicsTransform"] = NewQGraphicsTransformFromPointer;
		Internal.constructorTable["widgets.QGraphicsView"] = NewQGraphicsViewFromPointer;
		Internal.constructorTable["widgets.QGraphicsWidget"] = NewQGraphicsWidgetFromPointer;
		Internal.constructorTable["widgets.QGridLayout"] = NewQGridLayoutFromPointer;
		Internal.constructorTable["widgets.QGroupBox"] = NewQGroupBoxFromPointer;
		Internal.constructorTable["widgets.QHBoxLayout"] = NewQHBoxLayoutFromPointer;
		Internal.constructorTable["widgets.QHeaderView"] = NewQHeaderViewFromPointer;
		Internal.constructorTable["widgets.QInputDialog"] = NewQInputDialogFromPointer;
		Internal.constructorTable["widgets.QItemDelegate"] = NewQItemDelegateFromPointer;
		Internal.constructorTable["widgets.QItemEditorCreatorBase"] = NewQItemEditorCreatorBaseFromPointer;
		Internal.constructorTable["widgets.QItemEditorFactory"] = NewQItemEditorFactoryFromPointer;
		Internal.constructorTable["widgets.QKeyEventTransition"] = NewQKeyEventTransitionFromPointer;
		Internal.constructorTable["widgets.QKeySequenceEdit"] = NewQKeySequenceEditFromPointer;
		Internal.constructorTable["widgets.QLCDNumber"] = NewQLCDNumberFromPointer;
		Internal.constructorTable["widgets.QLabel"] = NewQLabelFromPointer;
		Internal.constructorTable["widgets.QLayout"] = NewQLayoutFromPointer;
		Internal.constructorTable["widgets.QLayoutItem"] = NewQLayoutItemFromPointer;
		Internal.constructorTable["widgets.QLineEdit"] = NewQLineEditFromPointer;
		Internal.constructorTable["widgets.QListView"] = NewQListViewFromPointer;
		Internal.constructorTable["widgets.QListWidget"] = NewQListWidgetFromPointer;
		Internal.constructorTable["widgets.QListWidgetItem"] = NewQListWidgetItemFromPointer;
		Internal.constructorTable["widgets.QMainWindow"] = NewQMainWindowFromPointer;
		Internal.constructorTable["widgets.QMdiArea"] = NewQMdiAreaFromPointer;
		Internal.constructorTable["widgets.QMdiSubWindow"] = NewQMdiSubWindowFromPointer;
		Internal.constructorTable["widgets.QMenu"] = NewQMenuFromPointer;
		Internal.constructorTable["widgets.QMenuBar"] = NewQMenuBarFromPointer;
		Internal.constructorTable["widgets.QMessageBox"] = NewQMessageBoxFromPointer;
		Internal.constructorTable["widgets.QMouseEventTransition"] = NewQMouseEventTransitionFromPointer;
		Internal.constructorTable["widgets.QOpenGLWidget"] = NewQOpenGLWidgetFromPointer;
		Internal.constructorTable["widgets.QPanGesture"] = NewQPanGestureFromPointer;
		Internal.constructorTable["widgets.QPinchGesture"] = NewQPinchGestureFromPointer;
		Internal.constructorTable["widgets.QPlainTextDocumentLayout"] = NewQPlainTextDocumentLayoutFromPointer;
		Internal.constructorTable["widgets.QPlainTextEdit"] = NewQPlainTextEditFromPointer;
		Internal.constructorTable["widgets.QProgressBar"] = NewQProgressBarFromPointer;
		Internal.constructorTable["widgets.QProgressDialog"] = NewQProgressDialogFromPointer;
		Internal.constructorTable["widgets.QProxyStyle"] = NewQProxyStyleFromPointer;
		Internal.constructorTable["widgets.QPushButton"] = NewQPushButtonFromPointer;
		Internal.constructorTable["widgets.QRadioButton"] = NewQRadioButtonFromPointer;
		Internal.constructorTable["widgets.QRubberBand"] = NewQRubberBandFromPointer;
		Internal.constructorTable["widgets.QScrollArea"] = NewQScrollAreaFromPointer;
		Internal.constructorTable["widgets.QScrollBar"] = NewQScrollBarFromPointer;
		Internal.constructorTable["widgets.QScroller"] = NewQScrollerFromPointer;
		Internal.constructorTable["widgets.QScrollerProperties"] = NewQScrollerPropertiesFromPointer;
		Internal.constructorTable["widgets.QShortcut"] = NewQShortcutFromPointer;
		Internal.constructorTable["widgets.QSizeGrip"] = NewQSizeGripFromPointer;
		Internal.constructorTable["widgets.QSizePolicy"] = NewQSizePolicyFromPointer;
		Internal.constructorTable["widgets.QSlider"] = NewQSliderFromPointer;
		Internal.constructorTable["widgets.QSpacerItem"] = NewQSpacerItemFromPointer;
		Internal.constructorTable["widgets.QSpinBox"] = NewQSpinBoxFromPointer;
		Internal.constructorTable["widgets.QSplashScreen"] = NewQSplashScreenFromPointer;
		Internal.constructorTable["widgets.QSplitter"] = NewQSplitterFromPointer;
		Internal.constructorTable["widgets.QSplitterHandle"] = NewQSplitterHandleFromPointer;
		Internal.constructorTable["widgets.QStackedLayout"] = NewQStackedLayoutFromPointer;
		Internal.constructorTable["widgets.QStackedWidget"] = NewQStackedWidgetFromPointer;
		Internal.constructorTable["widgets.QStatusBar"] = NewQStatusBarFromPointer;
		Internal.constructorTable["widgets.QStyle"] = NewQStyleFromPointer;
		Internal.constructorTable["widgets.QStyleFactory"] = NewQStyleFactoryFromPointer;
		Internal.constructorTable["widgets.QStyleHintReturn"] = NewQStyleHintReturnFromPointer;
		Internal.constructorTable["widgets.QStyleHintReturnMask"] = NewQStyleHintReturnMaskFromPointer;
		Internal.constructorTable["widgets.QStyleHintReturnVariant"] = NewQStyleHintReturnVariantFromPointer;
		Internal.constructorTable["widgets.QStyleOption"] = NewQStyleOptionFromPointer;
		Internal.constructorTable["widgets.QStyleOptionButton"] = NewQStyleOptionButtonFromPointer;
		Internal.constructorTable["widgets.QStyleOptionComboBox"] = NewQStyleOptionComboBoxFromPointer;
		Internal.constructorTable["widgets.QStyleOptionComplex"] = NewQStyleOptionComplexFromPointer;
		Internal.constructorTable["widgets.QStyleOptionDockWidget"] = NewQStyleOptionDockWidgetFromPointer;
		Internal.constructorTable["widgets.QStyleOptionFocusRect"] = NewQStyleOptionFocusRectFromPointer;
		Internal.constructorTable["widgets.QStyleOptionFrame"] = NewQStyleOptionFrameFromPointer;
		Internal.constructorTable["widgets.QStyleOptionGraphicsItem"] = NewQStyleOptionGraphicsItemFromPointer;
		Internal.constructorTable["widgets.QStyleOptionGroupBox"] = NewQStyleOptionGroupBoxFromPointer;
		Internal.constructorTable["widgets.QStyleOptionHeader"] = NewQStyleOptionHeaderFromPointer;
		Internal.constructorTable["widgets.QStyleOptionMenuItem"] = NewQStyleOptionMenuItemFromPointer;
		Internal.constructorTable["widgets.QStyleOptionProgressBar"] = NewQStyleOptionProgressBarFromPointer;
		Internal.constructorTable["widgets.QStyleOptionRubberBand"] = NewQStyleOptionRubberBandFromPointer;
		Internal.constructorTable["widgets.QStyleOptionSizeGrip"] = NewQStyleOptionSizeGripFromPointer;
		Internal.constructorTable["widgets.QStyleOptionSlider"] = NewQStyleOptionSliderFromPointer;
		Internal.constructorTable["widgets.QStyleOptionSpinBox"] = NewQStyleOptionSpinBoxFromPointer;
		Internal.constructorTable["widgets.QStyleOptionTab"] = NewQStyleOptionTabFromPointer;
		Internal.constructorTable["widgets.QStyleOptionTabBarBase"] = NewQStyleOptionTabBarBaseFromPointer;
		Internal.constructorTable["widgets.QStyleOptionTabWidgetFrame"] = NewQStyleOptionTabWidgetFrameFromPointer;
		Internal.constructorTable["widgets.QStyleOptionTitleBar"] = NewQStyleOptionTitleBarFromPointer;
		Internal.constructorTable["widgets.QStyleOptionToolBar"] = NewQStyleOptionToolBarFromPointer;
		Internal.constructorTable["widgets.QStyleOptionToolBox"] = NewQStyleOptionToolBoxFromPointer;
		Internal.constructorTable["widgets.QStyleOptionToolButton"] = NewQStyleOptionToolButtonFromPointer;
		Internal.constructorTable["widgets.QStyleOptionViewItem"] = NewQStyleOptionViewItemFromPointer;
		Internal.constructorTable["widgets.QStylePainter"] = NewQStylePainterFromPointer;
		Internal.constructorTable["widgets.QStylePlugin"] = NewQStylePluginFromPointer;
		Internal.constructorTable["widgets.QStyledItemDelegate"] = NewQStyledItemDelegateFromPointer;
		Internal.constructorTable["widgets.QSwipeGesture"] = NewQSwipeGestureFromPointer;
		Internal.constructorTable["widgets.QSystemTrayIcon"] = NewQSystemTrayIconFromPointer;
		Internal.constructorTable["widgets.QTabBar"] = NewQTabBarFromPointer;
		Internal.constructorTable["widgets.QTabWidget"] = NewQTabWidgetFromPointer;
		Internal.constructorTable["widgets.QTableView"] = NewQTableViewFromPointer;
		Internal.constructorTable["widgets.QTableWidget"] = NewQTableWidgetFromPointer;
		Internal.constructorTable["widgets.QTableWidgetItem"] = NewQTableWidgetItemFromPointer;
		Internal.constructorTable["widgets.QTableWidgetSelectionRange"] = NewQTableWidgetSelectionRangeFromPointer;
		Internal.constructorTable["widgets.QTapAndHoldGesture"] = NewQTapAndHoldGestureFromPointer;
		Internal.constructorTable["widgets.QTapGesture"] = NewQTapGestureFromPointer;
		Internal.constructorTable["widgets.QTextBrowser"] = NewQTextBrowserFromPointer;
		Internal.constructorTable["widgets.QTextEdit"] = NewQTextEditFromPointer;
		Internal.constructorTable["widgets.QTileRules"] = NewQTileRulesFromPointer;
		Internal.constructorTable["widgets.QTimeEdit"] = NewQTimeEditFromPointer;
		Internal.constructorTable["widgets.QToolBar"] = NewQToolBarFromPointer;
		Internal.constructorTable["widgets.QToolBox"] = NewQToolBoxFromPointer;
		Internal.constructorTable["widgets.QToolButton"] = NewQToolButtonFromPointer;
		Internal.constructorTable["widgets.QToolTip"] = NewQToolTipFromPointer;
		Internal.constructorTable["widgets.QTreeView"] = NewQTreeViewFromPointer;
		Internal.constructorTable["widgets.QTreeWidget"] = NewQTreeWidgetFromPointer;
		Internal.constructorTable["widgets.QTreeWidgetItem"] = NewQTreeWidgetItemFromPointer;
		Internal.constructorTable["widgets.QUndoCommand"] = NewQUndoCommandFromPointer;
		Internal.constructorTable["widgets.QUndoGroup"] = NewQUndoGroupFromPointer;
		Internal.constructorTable["widgets.QUndoStack"] = NewQUndoStackFromPointer;
		Internal.constructorTable["widgets.QUndoView"] = NewQUndoViewFromPointer;
		Internal.constructorTable["widgets.QVBoxLayout"] = NewQVBoxLayoutFromPointer;
		Internal.constructorTable["widgets.QWhatsThis"] = NewQWhatsThisFromPointer;
		Internal.constructorTable["widgets.QWidget"] = NewQWidgetFromPointer;
		Internal.constructorTable["widgets.QWidgetAction"] = NewQWidgetActionFromPointer;
		Internal.constructorTable["widgets.QWidgetItem"] = NewQWidgetItemFromPointer;
		Internal.constructorTable["widgets.QWizard"] = NewQWizardFromPointer;
		Internal.constructorTable["widgets.QWizardPage"] = NewQWizardPageFromPointer;

		Internal.init();
		Core.initModule();
		Gui.initModule();
	}
}

interface QAbstractButton_ITF extends QWidget_ITF {
	public function QAbstractButton_PTR():QAbstractButton;
}

class QAbstractButton extends QWidget implements QAbstractButton_ITF {
	public function new() {
		super();
	}

	public function QAbstractButton_PTR():QAbstractButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QAbstractButton_PTR"]);
	};

	public function ConnectAnimateClick(f:(msec:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAnimateClick", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAnimateClick() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAnimateClick"]);
	};

	public function AnimateClick(msec:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AnimateClick", msec]);
	};

	public function AnimateClickDefault(msec:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AnimateClickDefault", msec]);
	};

	public function AutoExclusive():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoExclusive"]);
	};

	public function AutoRepeat():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoRepeat"]);
	};

	public function AutoRepeatDelay():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoRepeatDelay"]);
	};

	public function AutoRepeatInterval():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoRepeatInterval"]);
	};

	public function ConnectCheckStateSet(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCheckStateSet", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCheckStateSet() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCheckStateSet"]);
	};

	public function CheckStateSet() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CheckStateSet"]);
	};

	public function CheckStateSetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CheckStateSetDefault"]);
	};

	public function ConnectClick(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClick", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClick() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClick"]);
	};

	public function Click() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Click"]);
	};

	public function ClickDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClickDefault"]);
	};

	public function ConnectClicked(f:(checked:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClicked"]);
	};

	public function Clicked(checked:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clicked", checked]);
	};

	public function Group():QButtonGroup {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Group"]);
	};

	public function ConnectHitButton(f:(pos:QPoint) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHitButton", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHitButton() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHitButton"]);
	};

	public function HitButton(pos:QPoint_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HitButton", pos]);
	};

	public function HitButtonDefault(pos:QPoint_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HitButtonDefault", pos]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function IsCheckable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsCheckable"]);
	};

	public function IsChecked():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsChecked"]);
	};

	public function IsDown():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsDown"]);
	};

	public function ConnectNextCheckState(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectNextCheckState", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectNextCheckState() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectNextCheckState"]);
	};

	public function NextCheckState() {
		Internal.callLocalFunction(["", Pointer(), ___className, "NextCheckState"]);
	};

	public function NextCheckStateDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "NextCheckStateDefault"]);
	};

	public override function ConnectPaintEvent(f:(e:QPaintEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaintEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintEvent"]);
	};

	public override function PaintEvent(e:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEvent", e]);
	};

	public function ConnectPressed(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPressed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPressed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPressed"]);
	};

	public function Pressed() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Pressed"]);
	};

	public function ConnectReleased(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectReleased", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectReleased() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectReleased"]);
	};

	public function Released() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Released"]);
	};

	public function SetAutoExclusive(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoExclusive", vbo]);
	};

	public function SetAutoRepeat(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoRepeat", vbo]);
	};

	public function SetAutoRepeatDelay(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoRepeatDelay", vi]);
	};

	public function SetAutoRepeatInterval(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoRepeatInterval", vi]);
	};

	public function SetCheckable(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckable", vbo]);
	};

	public function ConnectSetChecked(f:(vbo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetChecked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetChecked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetChecked"]);
	};

	public function SetChecked(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetChecked", vbo]);
	};

	public function SetCheckedDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckedDefault", vbo]);
	};

	public function SetDown(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDown", vbo]);
	};

	public function SetIcon(icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", icon]);
	};

	public function ConnectSetIconSize(f:(size:QSize) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetIconSize", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetIconSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetIconSize"]);
	};

	public function SetIconSize(size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", size]);
	};

	public function SetIconSizeDefault(size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSizeDefault", size]);
	};

	public function SetShortcut(key:QKeySequence_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShortcut", key]);
	};

	public function SetText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", text]);
	};

	public function Shortcut():QKeySequence {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Shortcut"]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function ConnectToggle(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectToggle", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectToggle() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToggle"]);
	};

	public function Toggle() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Toggle"]);
	};

	public function ToggleDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToggleDefault"]);
	};

	public function ConnectToggled(f:(checked:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectToggled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectToggled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToggled"]);
	};

	public function Toggled(checked:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Toggled", checked]);
	};

	public function ConnectDestroyQAbstractButton(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQAbstractButton",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQAbstractButton() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQAbstractButton"]);
	};

	public function DestroyQAbstractButton() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractButton"]);
	};

	public function DestroyQAbstractButtonDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractButtonDefault"]);
	};
}

function NewQAbstractButtonFromPointer(ptr:String):QAbstractButton {
	final r = new QAbstractButton();
	r.initFrom(ptr, "widgets.QAbstractButton");
	return r;
}

function NewQAbstractButton(parent:QWidget_ITF):QAbstractButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQAbstractButton", "", parent]);
}

interface QAbstractGraphicsShapeItem_ITF extends QGraphicsItem_ITF {
	public function QAbstractGraphicsShapeItem_PTR():QAbstractGraphicsShapeItem;
}

class QAbstractGraphicsShapeItem extends QGraphicsItem implements QAbstractGraphicsShapeItem_ITF {
	public function new() {
		super();
	}

	public function QAbstractGraphicsShapeItem_PTR():QAbstractGraphicsShapeItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QAbstractGraphicsShapeItem_PTR"]);
	};

	public function Brush():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Brush"]);
	};

	public function Pen():QPen {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pen"]);
	};

	public function SetBrush(brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBrush", brush]);
	};

	public function SetPen(pen:QPen_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPen", pen]);
	};

	public function ConnectDestroyQAbstractGraphicsShapeItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQAbstractGraphicsShapeItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQAbstractGraphicsShapeItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQAbstractGraphicsShapeItem"]);
	};

	public function DestroyQAbstractGraphicsShapeItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractGraphicsShapeItem"]);
	};

	public function DestroyQAbstractGraphicsShapeItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractGraphicsShapeItemDefault"]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};
}

function NewQAbstractGraphicsShapeItemFromPointer(ptr:String):QAbstractGraphicsShapeItem {
	final r = new QAbstractGraphicsShapeItem();
	r.initFrom(ptr, "widgets.QAbstractGraphicsShapeItem");
	return r;
}

function NewQAbstractGraphicsShapeItem(parent:QGraphicsItem_ITF):QAbstractGraphicsShapeItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQAbstractGraphicsShapeItem", "", parent]);
}

interface QAbstractItemDelegate_ITF extends QObject_ITF {
	public function QAbstractItemDelegate_PTR():QAbstractItemDelegate;
}

class QAbstractItemDelegate extends QObject implements QAbstractItemDelegate_ITF {
	public function new() {
		super();
	}

	public function QAbstractItemDelegate_PTR():QAbstractItemDelegate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QAbstractItemDelegate_PTR"]);
	};

	public function ConnectCloseEditor(f:(editor:QWidget, hint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCloseEditor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCloseEditor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCloseEditor"]);
	};

	public function CloseEditor(editor:QWidget_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseEditor", editor, hint]);
	};

	public function ConnectCommitData(f:(editor:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCommitData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCommitData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCommitData"]);
	};

	public function CommitData(editor:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CommitData", editor]);
	};

	public function ConnectCreateEditor(f:(parent:QWidget, option:QStyleOptionViewItem, index:QModelIndex) -> QWidget) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCreateEditor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCreateEditor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreateEditor"]);
	};

	public function CreateEditor(parent:QWidget_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateEditor", parent, option, index]);
	};

	public function CreateEditorDefault(parent:QWidget_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateEditorDefault", parent, option, index]);
	};

	public function ConnectDestroyEditor(f:(editor:QWidget, index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyEditor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyEditor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyEditor"]);
	};

	public function DestroyEditor(editor:QWidget_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyEditor", editor, index]);
	};

	public function DestroyEditorDefault(editor:QWidget_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyEditorDefault", editor, index]);
	};

	public function ConnectEditorEvent(f:(event:QEvent, model:QAbstractItemModel, option:QStyleOptionViewItem, index:QModelIndex) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEditorEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEditorEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEditorEvent"]);
	};

	public function EditorEvent(event:QEvent_ITF, model:QAbstractItemModel_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EditorEvent", event, model, option, index]);
	};

	public function EditorEventDefault(event:QEvent_ITF, model:QAbstractItemModel_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EditorEventDefault", event, model, option, index]);
	};

	public function ConnectHelpEvent(f:(event:QHelpEvent, view:QAbstractItemView, option:QStyleOptionViewItem, index:QModelIndex) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHelpEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHelpEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHelpEvent"]);
	};

	public function HelpEvent(event:QHelpEvent_ITF, view:QAbstractItemView_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HelpEvent", event, view, option, index]);
	};

	public function HelpEventDefault(event:QHelpEvent_ITF, view:QAbstractItemView_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HelpEventDefault", event, view, option, index]);
	};

	public function ConnectPaint(f:(painter:QPainter, option:QStyleOptionViewItem, index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public function Paint(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, index]);
	};

	public function ConnectSetEditorData(f:(editor:QWidget, index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetEditorData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetEditorData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetEditorData"]);
	};

	public function SetEditorData(editor:QWidget_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEditorData", editor, index]);
	};

	public function SetEditorDataDefault(editor:QWidget_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEditorDataDefault", editor, index]);
	};

	public function ConnectSetModelData(f:(editor:QWidget, model:QAbstractItemModel, index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetModelData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetModelData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetModelData"]);
	};

	public function SetModelData(editor:QWidget_ITF, model:QAbstractItemModel_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModelData", editor, model, index]);
	};

	public function SetModelDataDefault(editor:QWidget_ITF, model:QAbstractItemModel_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModelDataDefault", editor, model, index]);
	};

	public function ConnectSizeHint(f:(option:QStyleOptionViewItem, index:QModelIndex) -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public function SizeHint(option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint", option, index]);
	};

	public function ConnectSizeHintChanged(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHintChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSizeHintChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHintChanged"]);
	};

	public function SizeHintChanged(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintChanged", index]);
	};

	public function ConnectUpdateEditorGeometry(f:(editor:QWidget, option:QStyleOptionViewItem, index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectUpdateEditorGeometry",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectUpdateEditorGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateEditorGeometry"]);
	};

	public function UpdateEditorGeometry(editor:QWidget_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateEditorGeometry", editor, option, index]);
	};

	public function UpdateEditorGeometryDefault(editor:QWidget_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"UpdateEditorGeometryDefault",
			editor,
			option,
			index
		]);
	};

	public function ConnectDestroyQAbstractItemDelegate(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQAbstractItemDelegate",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQAbstractItemDelegate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQAbstractItemDelegate"]);
	};

	public function DestroyQAbstractItemDelegate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractItemDelegate"]);
	};

	public function DestroyQAbstractItemDelegateDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractItemDelegateDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQAbstractItemDelegateFromPointer(ptr:String):QAbstractItemDelegate {
	final r = new QAbstractItemDelegate();
	r.initFrom(ptr, "widgets.QAbstractItemDelegate");
	return r;
}

function NewQAbstractItemDelegate(parent:QObject_ITF):QAbstractItemDelegate {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQAbstractItemDelegate", "", parent]);
}

interface QAbstractItemView_ITF extends QAbstractScrollArea_ITF {
	public function QAbstractItemView_PTR():QAbstractItemView;
}

class QAbstractItemView extends QAbstractScrollArea implements QAbstractItemView_ITF {
	public function new() {
		super();
	}

	public function QAbstractItemView_PTR():QAbstractItemView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QAbstractItemView_PTR"]);
	};

	public function ConnectActivated(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivated"]);
	};

	public function Activated(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Activated", index]);
	};

	public function AlternatingRowColors():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AlternatingRowColors"]);
	};

	public function AutoScrollMargin():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoScrollMargin"]);
	};

	public function ConnectClearSelection(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClearSelection", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClearSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClearSelection"]);
	};

	public function ClearSelection() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearSelection"]);
	};

	public function ClearSelectionDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearSelectionDefault"]);
	};

	public function ConnectClicked(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClicked"]);
	};

	public function Clicked(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clicked", index]);
	};

	public function ConnectCloseEditor(f:(editor:QWidget, hint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCloseEditor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCloseEditor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCloseEditor"]);
	};

	public function CloseEditor(editor:QWidget_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseEditor", editor, hint]);
	};

	public function CloseEditorDefault(editor:QWidget_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseEditorDefault", editor, hint]);
	};

	public function ClosePersistentEditor(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClosePersistentEditor", index]);
	};

	public function ConnectCommitData(f:(editor:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCommitData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCommitData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCommitData"]);
	};

	public function CommitData(editor:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CommitData", editor]);
	};

	public function CommitDataDefault(editor:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CommitDataDefault", editor]);
	};

	public function ConnectCurrentChanged(f:(current:QModelIndex, previous:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public function CurrentChanged(current:QModelIndex_ITF, previous:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", current, previous]);
	};

	public function CurrentChangedDefault(current:QModelIndex_ITF, previous:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChangedDefault", current, previous]);
	};

	public function CurrentIndex():QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndex"]);
	};

	public function ConnectDataChanged(f:(topLeft:QModelIndex, bottomRight:QModelIndex, roles:Array<Int>) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDataChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDataChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDataChanged"]);
	};

	public function DataChanged(topLeft:QModelIndex_ITF, bottomRight:QModelIndex_ITF, roles:Array<Int>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DataChanged", topLeft, bottomRight, roles]);
	};

	public function DataChangedDefault(topLeft:QModelIndex_ITF, bottomRight:QModelIndex_ITF, roles:Array<Int>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DataChangedDefault", topLeft, bottomRight, roles]);
	};

	public function DefaultDropAction():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultDropAction"]);
	};

	public function DirtyRegionOffset():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DirtyRegionOffset"]);
	};

	public function ConnectDoubleClicked(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDoubleClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDoubleClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDoubleClicked"]);
	};

	public function DoubleClicked(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoubleClicked", index]);
	};

	public function DragDropMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DragDropMode"]);
	};

	public function DragDropOverwriteMode():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DragDropOverwriteMode"]);
	};

	public function DragEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DragEnabled"]);
	};

	public function DropIndicatorPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DropIndicatorPosition"]);
	};

	public function ConnectEdit(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEdit", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEdit() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEdit"]);
	};

	public function Edit(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Edit", index]);
	};

	public function EditDefault(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EditDefault", index]);
	};

	public function ConnectEdit2(f:(index:QModelIndex, trigger:Int, event:QEvent) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEdit2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEdit2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEdit2"]);
	};

	public function Edit2(index:QModelIndex_ITF, trigger:Int, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Edit2", index, trigger, event]);
	};

	public function Edit2Default(index:QModelIndex_ITF, trigger:Int, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Edit2Default", index, trigger, event]);
	};

	public function EditTriggers():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EditTriggers"]);
	};

	public function ConnectEditorDestroyed(f:(editor:QObject) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEditorDestroyed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEditorDestroyed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEditorDestroyed"]);
	};

	public function EditorDestroyed(editor:QObject_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EditorDestroyed", editor]);
	};

	public function EditorDestroyedDefault(editor:QObject_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EditorDestroyedDefault", editor]);
	};

	public function ConnectEntered(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEntered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEntered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEntered"]);
	};

	public function Entered(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Entered", index]);
	};

	public function ExecuteDelayedItemsLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ExecuteDelayedItemsLayout"]);
	};

	public function HasAutoScroll():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasAutoScroll"]);
	};

	public function ConnectHorizontalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHorizontalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHorizontalOffset"]);
	};

	public function HorizontalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffset"]);
	};

	public function HorizontalScrollMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalScrollMode"]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function ConnectIconSizeChanged(f:(size:QSize) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIconSizeChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIconSizeChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIconSizeChanged"]);
	};

	public function IconSizeChanged(size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "IconSizeChanged", size]);
	};

	public function ConnectIndexAt(f:(point:QPoint) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndexAt", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIndexAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndexAt"]);
	};

	public function IndexAt(point:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAt", point]);
	};

	public function IndexWidget(index:QModelIndex_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexWidget", index]);
	};

	public function ConnectIsIndexHidden(f:(index:QModelIndex) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsIndexHidden", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIsIndexHidden() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsIndexHidden"]);
	};

	public function IsIndexHidden(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHidden", index]);
	};

	public function IsPersistentEditorOpen(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsPersistentEditorOpen", index]);
	};

	public function ItemDelegate():QAbstractItemDelegate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemDelegate"]);
	};

	public function ItemDelegate2(index:QModelIndex_ITF):QAbstractItemDelegate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemDelegate2", index]);
	};

	public function ItemDelegateForColumn(column:Int):QAbstractItemDelegate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemDelegateForColumn", column]);
	};

	public function ItemDelegateForRow(row:Int):QAbstractItemDelegate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemDelegateForRow", row]);
	};

	public function ConnectKeyboardSearch(f:(search:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectKeyboardSearch", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectKeyboardSearch() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectKeyboardSearch"]);
	};

	public function KeyboardSearch(search:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyboardSearch", search]);
	};

	public function KeyboardSearchDefault(search:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyboardSearchDefault", search]);
	};

	public function Model():QAbstractItemModel {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Model"]);
	};

	public function ConnectMoveCursor(f:(cursorAction:Int, modifiers:Int) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMoveCursor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMoveCursor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMoveCursor"]);
	};

	public function MoveCursor(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursor", cursorAction, modifiers]);
	};

	public function OpenPersistentEditor(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OpenPersistentEditor", index]);
	};

	public function ConnectPressed(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPressed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPressed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPressed"]);
	};

	public function Pressed(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Pressed", index]);
	};

	public function ConnectReset(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectReset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectReset"]);
	};

	public function Reset() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Reset"]);
	};

	public function ResetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetDefault"]);
	};

	public function ResetHorizontalScrollMode() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetHorizontalScrollMode"]);
	};

	public function ResetVerticalScrollMode() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetVerticalScrollMode"]);
	};

	public function RootIndex():QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RootIndex"]);
	};

	public function ConnectRowsAboutToBeRemoved(f:(parent:QModelIndex, start:Int, end:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectRowsAboutToBeRemoved",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectRowsAboutToBeRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowsAboutToBeRemoved"]);
	};

	public function RowsAboutToBeRemoved(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsAboutToBeRemoved", parent, start, end]);
	};

	public function RowsAboutToBeRemovedDefault(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsAboutToBeRemovedDefault", parent, start, end]);
	};

	public function ConnectRowsInserted(f:(parent:QModelIndex, start:Int, end:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRowsInserted", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRowsInserted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowsInserted"]);
	};

	public function RowsInserted(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsInserted", parent, start, end]);
	};

	public function RowsInsertedDefault(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsInsertedDefault", parent, start, end]);
	};

	public function ScheduleDelayedItemsLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScheduleDelayedItemsLayout"]);
	};

	public function ScrollDirtyRegion(dx:Int, dy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollDirtyRegion", dx, dy]);
	};

	public function ConnectScrollTo(f:(index:QModelIndex, hint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollTo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScrollTo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollTo"]);
	};

	public function ScrollTo(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollTo", index, hint]);
	};

	public function ConnectScrollToBottom(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollToBottom", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScrollToBottom() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollToBottom"]);
	};

	public function ScrollToBottom() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToBottom"]);
	};

	public function ScrollToBottomDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToBottomDefault"]);
	};

	public function ConnectScrollToTop(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollToTop", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScrollToTop() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollToTop"]);
	};

	public function ScrollToTop() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToTop"]);
	};

	public function ScrollToTopDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToTopDefault"]);
	};

	public function ConnectSelectAll(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectAll() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectAll"]);
	};

	public function SelectAll() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAll"]);
	};

	public function SelectAllDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAllDefault"]);
	};

	public function ConnectSelectedIndexes(f:() -> Array<QModelIndex>) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectedIndexes", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectedIndexes() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectedIndexes"]);
	};

	public function SelectedIndexes():Array<QModelIndex> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedIndexes"]);
	};

	public function SelectedIndexesDefault():Array<QModelIndex> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedIndexesDefault"]);
	};

	public function SelectionBehavior():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionBehavior"]);
	};

	public function ConnectSelectionChanged(f:(selected:QItemSelection, deselected:QItemSelection) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectionChanged"]);
	};

	public function SelectionChanged(selected:QItemSelection_ITF, deselected:QItemSelection_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChanged", selected, deselected]);
	};

	public function SelectionChangedDefault(selected:QItemSelection_ITF, deselected:QItemSelection_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChangedDefault", selected, deselected]);
	};

	public function ConnectSelectionCommand(f:(index:QModelIndex, event:QEvent) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectionCommand", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectionCommand() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectionCommand"]);
	};

	public function SelectionCommand(index:QModelIndex_ITF, event:QEvent_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionCommand", index, event]);
	};

	public function SelectionCommandDefault(index:QModelIndex_ITF, event:QEvent_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionCommandDefault", index, event]);
	};

	public function SelectionMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionMode"]);
	};

	public function SelectionModel():QItemSelectionModel {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionModel"]);
	};

	public function SetAlternatingRowColors(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlternatingRowColors", enable]);
	};

	public function SetAutoScroll(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoScroll", enable]);
	};

	public function SetAutoScrollMargin(margi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoScrollMargin", margi]);
	};

	public function ConnectSetCurrentIndex(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentIndex"]);
	};

	public function SetCurrentIndex(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndex", index]);
	};

	public function SetCurrentIndexDefault(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndexDefault", index]);
	};

	public function SetDefaultDropAction(dropAction:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultDropAction", dropAction]);
	};

	public function SetDirtyRegion(region:QRegion_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDirtyRegion", region]);
	};

	public function SetDragDropMode(behavior:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDragDropMode", behavior]);
	};

	public function SetDragDropOverwriteMode(overwrite:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDragDropOverwriteMode", overwrite]);
	};

	public function SetDragEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDragEnabled", enable]);
	};

	public function SetDropIndicatorShown(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDropIndicatorShown", enable]);
	};

	public function SetEditTriggers(triggers:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEditTriggers", triggers]);
	};

	public function SetHorizontalScrollMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalScrollMode", mode]);
	};

	public function SetIconSize(size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", size]);
	};

	public function SetIndexWidget(index:QModelIndex_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIndexWidget", index, widget]);
	};

	public function SetItemDelegate(delegate:QAbstractItemDelegate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemDelegate", delegate]);
	};

	public function SetItemDelegateForColumn(column:Int, delegate:QAbstractItemDelegate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemDelegateForColumn", column, delegate]);
	};

	public function SetItemDelegateForRow(row:Int, delegate:QAbstractItemDelegate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemDelegateForRow", row, delegate]);
	};

	public function ConnectSetModel(f:(model:QAbstractItemModel) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetModel", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetModel() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetModel"]);
	};

	public function SetModel(model:QAbstractItemModel_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModel", model]);
	};

	public function SetModelDefault(model:QAbstractItemModel_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModelDefault", model]);
	};

	public function ConnectSetRootIndex(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetRootIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetRootIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetRootIndex"]);
	};

	public function SetRootIndex(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootIndex", index]);
	};

	public function SetRootIndexDefault(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootIndexDefault", index]);
	};

	public function ConnectSetSelection(f:(rect:QRect, flags:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetSelection"]);
	};

	public function SetSelection(rect:QRect_ITF, flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelection", rect, flags]);
	};

	public function SetSelectionBehavior(behavior:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionBehavior", behavior]);
	};

	public function SetSelectionMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionMode", mode]);
	};

	public function ConnectSetSelectionModel(f:(selectionModel:QItemSelectionModel) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetSelectionModel", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetSelectionModel() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetSelectionModel"]);
	};

	public function SetSelectionModel(selectionModel:QItemSelectionModel_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionModel", selectionModel]);
	};

	public function SetSelectionModelDefault(selectionModel:QItemSelectionModel_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionModelDefault", selectionModel]);
	};

	public function SetState(state:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetState", state]);
	};

	public function SetTabKeyNavigation(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabKeyNavigation", enable]);
	};

	public function SetTextElideMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextElideMode", mode]);
	};

	public function SetVerticalScrollMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalScrollMode", mode]);
	};

	public function ShowDropIndicator():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ShowDropIndicator"]);
	};

	public function ConnectSizeHintForColumn(f:(column:Int) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHintForColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSizeHintForColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHintForColumn"]);
	};

	public function SizeHintForColumn(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintForColumn", column]);
	};

	public function SizeHintForColumnDefault(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintForColumnDefault", column]);
	};

	public function SizeHintForIndex(index:QModelIndex_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintForIndex", index]);
	};

	public function ConnectSizeHintForRow(f:(row:Int) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHintForRow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSizeHintForRow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHintForRow"]);
	};

	public function SizeHintForRow(row:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintForRow", row]);
	};

	public function SizeHintForRowDefault(row:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintForRowDefault", row]);
	};

	public function ConnectStartDrag(f:(supportedActions:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStartDrag", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStartDrag() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStartDrag"]);
	};

	public function StartDrag(supportedActions:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "StartDrag", supportedActions]);
	};

	public function StartDragDefault(supportedActions:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "StartDragDefault", supportedActions]);
	};

	public function State():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "State"]);
	};

	public function TabKeyNavigation():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabKeyNavigation"]);
	};

	public function TextElideMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextElideMode"]);
	};

	public function ConnectUpdate_QFrame(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdate_QFrame() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdate"]);
	};

	public function Update_QFrame(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update", index]);
	};

	public function UpdateDefault_QFrame(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateDefault", index]);
	};

	public function ConnectUpdateGeometries(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdateGeometries", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdateGeometries() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateGeometries"]);
	};

	public function UpdateGeometries() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometries"]);
	};

	public function UpdateGeometriesDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometriesDefault"]);
	};

	public function ConnectVerticalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectVerticalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVerticalOffset"]);
	};

	public function VerticalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffset"]);
	};

	public function VerticalScrollMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalScrollMode"]);
	};

	public function ConnectViewOptions(f:() -> QStyleOptionViewItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectViewOptions", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectViewOptions() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectViewOptions"]);
	};

	public function ViewOptions():QStyleOptionViewItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewOptions"]);
	};

	public function ViewOptionsDefault():QStyleOptionViewItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewOptionsDefault"]);
	};

	public function ConnectViewportEntered(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectViewportEntered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectViewportEntered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectViewportEntered"]);
	};

	public function ViewportEntered() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ViewportEntered"]);
	};

	public function ConnectVisualRect(f:(index:QModelIndex) -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVisualRect", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectVisualRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisualRect"]);
	};

	public function VisualRect(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRect", index]);
	};

	public function ConnectVisualRegionForSelection(f:(selection:QItemSelection) -> QRegion) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectVisualRegionForSelection",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectVisualRegionForSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisualRegionForSelection"]);
	};

	public function VisualRegionForSelection(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelection", selection]);
	};

	public function ConnectDestroyQAbstractItemView(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQAbstractItemView",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQAbstractItemView() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQAbstractItemView"]);
	};

	public function DestroyQAbstractItemView() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractItemView"]);
	};

	public function DestroyQAbstractItemViewDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractItemViewDefault"]);
	};
}

function NewQAbstractItemViewFromPointer(ptr:String):QAbstractItemView {
	final r = new QAbstractItemView();
	r.initFrom(ptr, "widgets.QAbstractItemView");
	return r;
}

function NewQAbstractItemView(parent:QWidget_ITF):QAbstractItemView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQAbstractItemView", "", parent]);
}

interface QAbstractScrollArea_ITF extends QFrame_ITF {
	public function QAbstractScrollArea_PTR():QAbstractScrollArea;
}

class QAbstractScrollArea extends QFrame implements QAbstractScrollArea_ITF {
	public function new() {
		super();
	}

	public function QAbstractScrollArea_PTR():QAbstractScrollArea {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QAbstractScrollArea_PTR"]);
	};

	public function AddScrollBarWidget(widget:QWidget_ITF, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddScrollBarWidget", widget, alignment]);
	};

	public function CornerWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CornerWidget"]);
	};

	public function HorizontalScrollBar():QScrollBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalScrollBar"]);
	};

	public function HorizontalScrollBarPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalScrollBarPolicy"]);
	};

	public function MaximumViewportSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumViewportSize"]);
	};

	public function ScrollBarWidgets(alignment:Int):Array<QWidget> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScrollBarWidgets", alignment]);
	};

	public function ConnectScrollContentsBy(f:(dx:Int, dy:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollContentsBy", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScrollContentsBy() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollContentsBy"]);
	};

	public function ScrollContentsBy(dx:Int, dy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollContentsBy", dx, dy]);
	};

	public function ScrollContentsByDefault(dx:Int, dy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollContentsByDefault", dx, dy]);
	};

	public function SetCornerWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCornerWidget", widget]);
	};

	public function SetHorizontalScrollBar(scrollBar:QScrollBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalScrollBar", scrollBar]);
	};

	public function SetHorizontalScrollBarPolicy(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalScrollBarPolicy", vqt]);
	};

	public function SetSizeAdjustPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizeAdjustPolicy", policy]);
	};

	public function SetVerticalScrollBar(scrollBar:QScrollBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalScrollBar", scrollBar]);
	};

	public function SetVerticalScrollBarPolicy(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalScrollBarPolicy", vqt]);
	};

	public function SetViewport(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetViewport", widget]);
	};

	public function SetViewportMargins(left:Int, top:Int, right:Int, bottom:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetViewportMargins", left, top, right, bottom]);
	};

	public function SetViewportMargins2(margins:QMargins_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetViewportMargins2", margins]);
	};

	public function ConnectSetupViewport(f:(viewport:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetupViewport", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetupViewport() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetupViewport"]);
	};

	public function SetupViewport(viewport:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetupViewport", viewport]);
	};

	public function SetupViewportDefault(viewport:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetupViewportDefault", viewport]);
	};

	public function SizeAdjustPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeAdjustPolicy"]);
	};

	public function VerticalScrollBar():QScrollBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalScrollBar"]);
	};

	public function VerticalScrollBarPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalScrollBarPolicy"]);
	};

	public function Viewport():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Viewport"]);
	};

	public function ConnectViewportEvent(f:(event:QEvent) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectViewportEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectViewportEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectViewportEvent"]);
	};

	public function ViewportEvent(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewportEvent", event]);
	};

	public function ViewportEventDefault(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewportEventDefault", event]);
	};

	public function ViewportMargins():QMargins {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewportMargins"]);
	};

	public function ConnectViewportSizeHint(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectViewportSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectViewportSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectViewportSizeHint"]);
	};

	public function ViewportSizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewportSizeHint"]);
	};

	public function ViewportSizeHintDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewportSizeHintDefault"]);
	};

	public function ConnectDestroyQAbstractScrollArea(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQAbstractScrollArea",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQAbstractScrollArea() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQAbstractScrollArea"]);
	};

	public function DestroyQAbstractScrollArea() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractScrollArea"]);
	};

	public function DestroyQAbstractScrollAreaDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractScrollAreaDefault"]);
	};
}

function NewQAbstractScrollAreaFromPointer(ptr:String):QAbstractScrollArea {
	final r = new QAbstractScrollArea();
	r.initFrom(ptr, "widgets.QAbstractScrollArea");
	return r;
}

function NewQAbstractScrollArea(parent:QWidget_ITF):QAbstractScrollArea {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQAbstractScrollArea", "", parent]);
}

interface QAbstractSlider_ITF extends QWidget_ITF {
	public function QAbstractSlider_PTR():QAbstractSlider;
}

class QAbstractSlider extends QWidget implements QAbstractSlider_ITF {
	public function new() {
		super();
	}

	public function QAbstractSlider_PTR():QAbstractSlider {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QAbstractSlider_PTR"]);
	};

	public function ConnectActionTriggered(f:(action:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActionTriggered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActionTriggered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActionTriggered"]);
	};

	public function ActionTriggered(action:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActionTriggered", action]);
	};

	public function HasTracking():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasTracking"]);
	};

	public function InvertedAppearance():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InvertedAppearance"]);
	};

	public function InvertedControls():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InvertedControls"]);
	};

	public function IsSliderDown():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSliderDown"]);
	};

	public function Maximum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Maximum"]);
	};

	public function Minimum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Minimum"]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function PageStep():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PageStep"]);
	};

	public function ConnectRangeChanged(f:(mi:Int, max:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRangeChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRangeChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRangeChanged"]);
	};

	public function RangeChanged(mi:Int, max:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RangeChanged", mi, max]);
	};

	public function RepeatAction():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RepeatAction"]);
	};

	public function SetInvertedAppearance(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInvertedAppearance", vbo]);
	};

	public function SetInvertedControls(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInvertedControls", vbo]);
	};

	public function SetMaximum(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximum", vi]);
	};

	public function SetMinimum(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimum", vi]);
	};

	public function ConnectSetOrientation(f:(vqt:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetOrientation", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetOrientation() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOrientation"]);
	};

	public function SetOrientation(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientation", vqt]);
	};

	public function SetOrientationDefault(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientationDefault", vqt]);
	};

	public function SetPageStep(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPageStep", vi]);
	};

	public function ConnectSetRange(f:(mi:Int, max:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetRange", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetRange() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetRange"]);
	};

	public function SetRange(mi:Int, max:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRange", mi, max]);
	};

	public function SetRangeDefault(mi:Int, max:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRangeDefault", mi, max]);
	};

	public function SetRepeatAction(action:Int, thresholdTime:Int, repeatTime:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SetRepeatAction",
			action,
			thresholdTime,
			repeatTime
		]);
	};

	public function SetSingleStep(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSingleStep", vi]);
	};

	public function SetSliderDown(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSliderDown", vbo]);
	};

	public function SetSliderPosition(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSliderPosition", vi]);
	};

	public function SetTracking(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTracking", enable]);
	};

	public function ConnectSetValue(f:(vi:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetValue", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetValue() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetValue"]);
	};

	public function SetValue(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValue", vi]);
	};

	public function SetValueDefault(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValueDefault", vi]);
	};

	public function SingleStep():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SingleStep"]);
	};

	public function ConnectSliderChange(f:(change:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSliderChange", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSliderChange() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSliderChange"]);
	};

	public function SliderChange(change:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SliderChange", change]);
	};

	public function SliderChangeDefault(change:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SliderChangeDefault", change]);
	};

	public function ConnectSliderMoved(f:(value:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSliderMoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSliderMoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSliderMoved"]);
	};

	public function SliderMoved(value:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SliderMoved", value]);
	};

	public function SliderPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SliderPosition"]);
	};

	public function ConnectSliderPressed(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSliderPressed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSliderPressed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSliderPressed"]);
	};

	public function SliderPressed() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SliderPressed"]);
	};

	public function ConnectSliderReleased(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSliderReleased", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSliderReleased() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSliderReleased"]);
	};

	public function SliderReleased() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SliderReleased"]);
	};

	public function TriggerAction(action:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TriggerAction", action]);
	};

	public function Value():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Value"]);
	};

	public function ConnectValueChanged(f:(value:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValueChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValueChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValueChanged"]);
	};

	public function ValueChanged(value:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ValueChanged", value]);
	};

	public function ConnectDestroyQAbstractSlider(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQAbstractSlider",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQAbstractSlider() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQAbstractSlider"]);
	};

	public function DestroyQAbstractSlider() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractSlider"]);
	};

	public function DestroyQAbstractSliderDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractSliderDefault"]);
	};
}

function NewQAbstractSliderFromPointer(ptr:String):QAbstractSlider {
	final r = new QAbstractSlider();
	r.initFrom(ptr, "widgets.QAbstractSlider");
	return r;
}

function NewQAbstractSlider(parent:QWidget_ITF):QAbstractSlider {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQAbstractSlider", "", parent]);
}

interface QAbstractSpinBox_ITF extends QWidget_ITF {
	public function QAbstractSpinBox_PTR():QAbstractSpinBox;
}

class QAbstractSpinBox extends QWidget implements QAbstractSpinBox_ITF {
	public function new() {
		super();
	}

	public function QAbstractSpinBox_PTR():QAbstractSpinBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QAbstractSpinBox_PTR"]);
	};

	public function Alignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment"]);
	};

	public function ButtonSymbols():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ButtonSymbols"]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function CorrectionMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CorrectionMode"]);
	};

	public function ConnectEditingFinished(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEditingFinished", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEditingFinished() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEditingFinished"]);
	};

	public function EditingFinished() {
		Internal.callLocalFunction(["", Pointer(), ___className, "EditingFinished"]);
	};

	public function ConnectFixup(f:(input:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFixup", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFixup() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFixup"]);
	};

	public function Fixup(input:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Fixup", input]);
	};

	public function FixupDefault(input:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FixupDefault", input]);
	};

	public function HasAcceptableInput():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasAcceptableInput"]);
	};

	public function HasFrame():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasFrame"]);
	};

	public function InitStyleOption(option:QStyleOptionSpinBox_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function InterpretText() {
		Internal.callLocalFunction(["", Pointer(), ___className, "InterpretText"]);
	};

	public function IsAccelerated():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsAccelerated"]);
	};

	public function IsGroupSeparatorShown():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsGroupSeparatorShown"]);
	};

	public function IsReadOnly():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsReadOnly"]);
	};

	public function KeyboardTracking():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "KeyboardTracking"]);
	};

	public function LineEdit():QLineEdit {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LineEdit"]);
	};

	public function ConnectSelectAll(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectAll() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectAll"]);
	};

	public function SelectAll() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAll"]);
	};

	public function SelectAllDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAllDefault"]);
	};

	public function SetAccelerated(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAccelerated", on]);
	};

	public function SetAlignment(flag:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", flag]);
	};

	public function SetButtonSymbols(bs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetButtonSymbols", bs]);
	};

	public function SetCorrectionMode(cm:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCorrectionMode", cm]);
	};

	public function SetFrame(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFrame", vbo]);
	};

	public function SetGroupSeparatorShown(shown:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGroupSeparatorShown", shown]);
	};

	public function SetKeyboardTracking(kt:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetKeyboardTracking", kt]);
	};

	public function SetLineEdit(lineEdit:QLineEdit_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLineEdit", lineEdit]);
	};

	public function SetReadOnly(r:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetReadOnly", r]);
	};

	public function SetSpecialValueText(txt:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSpecialValueText", txt]);
	};

	public function SetWrapping(w:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWrapping", w]);
	};

	public function SpecialValueText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SpecialValueText"]);
	};

	public function ConnectStepBy(f:(steps:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStepBy", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStepBy() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStepBy"]);
	};

	public function StepBy(steps:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "StepBy", steps]);
	};

	public function StepByDefault(steps:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "StepByDefault", steps]);
	};

	public function ConnectStepDown(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStepDown", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStepDown() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStepDown"]);
	};

	public function StepDown() {
		Internal.callLocalFunction(["", Pointer(), ___className, "StepDown"]);
	};

	public function StepDownDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "StepDownDefault"]);
	};

	public function ConnectStepEnabled(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStepEnabled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStepEnabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStepEnabled"]);
	};

	public function StepEnabled():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StepEnabled"]);
	};

	public function StepEnabledDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StepEnabledDefault"]);
	};

	public function ConnectStepUp(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStepUp", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStepUp() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStepUp"]);
	};

	public function StepUp() {
		Internal.callLocalFunction(["", Pointer(), ___className, "StepUp"]);
	};

	public function StepUpDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "StepUpDefault"]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function ConnectValidate(f:(input:String, pos:Int) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValidate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValidate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValidate"]);
	};

	public function Validate(input:String, pos:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Validate", input, pos]);
	};

	public function ValidateDefault(input:String, pos:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValidateDefault", input, pos]);
	};

	public function Wrapping():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Wrapping"]);
	};

	public function ConnectDestroyQAbstractSpinBox(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQAbstractSpinBox",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQAbstractSpinBox() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQAbstractSpinBox"]);
	};

	public function DestroyQAbstractSpinBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractSpinBox"]);
	};

	public function DestroyQAbstractSpinBoxDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAbstractSpinBoxDefault"]);
	};
}

function NewQAbstractSpinBoxFromPointer(ptr:String):QAbstractSpinBox {
	final r = new QAbstractSpinBox();
	r.initFrom(ptr, "widgets.QAbstractSpinBox");
	return r;
}

function NewQAbstractSpinBox(parent:QWidget_ITF):QAbstractSpinBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQAbstractSpinBox", "", parent]);
}

interface QAccessibleWidget_ITF extends QAccessibleActionInterface_ITF {
	public function QAccessibleWidget_PTR():QAccessibleWidget;
	public function QAccessibleObject_PTR():QAccessibleObject;
}

class QAccessibleWidget extends QAccessibleActionInterface implements QAccessibleWidget_ITF {
	public function QAccessibleObject_PTR():QAccessibleObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QAccessibleObject_PTR"]);
	}

	public function new() {
		super();
	}

	public function QAccessibleWidget_PTR():QAccessibleWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QAccessibleWidget_PTR"]);
	};

	public override function ConnectActionNames(f:() -> Array<String>) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActionNames", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectActionNames() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActionNames"]);
	};

	public override function ActionNames():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActionNames"]);
	};

	public function ActionNamesDefault():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActionNamesDefault"]);
	};

	public function AddControllingSignal(sign:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddControllingSignal", sign]);
	};

	public function ConnectBackgroundColor(f:() -> QColor) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBackgroundColor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBackgroundColor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBackgroundColor"]);
	};

	public function BackgroundColor():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BackgroundColor"]);
	};

	public function BackgroundColorDefault():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BackgroundColorDefault"]);
	};

	public function ConnectChild(f:(index:Int) -> QAccessibleInterface) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectChild", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectChild() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectChild"]);
	};

	public function Child(index:Int):QAccessibleInterface {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Child", index]);
	};

	public function ChildDefault(index:Int):QAccessibleInterface {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildDefault", index]);
	};

	public function ConnectChildCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectChildCount", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectChildCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectChildCount"]);
	};

	public function ChildCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildCount"]);
	};

	public function ChildCountDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildCountDefault"]);
	};

	public override function ConnectDoAction(f:(actionName:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDoAction", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDoAction() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDoAction"]);
	};

	public override function DoAction(actionName:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoAction", actionName]);
	};

	public function DoActionDefault(actionName:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoActionDefault", actionName]);
	};

	public function ConnectFocusChild(f:() -> QAccessibleInterface) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFocusChild", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFocusChild() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusChild"]);
	};

	public function FocusChild():QAccessibleInterface {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusChild"]);
	};

	public function FocusChildDefault():QAccessibleInterface {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusChildDefault"]);
	};

	public function ConnectForegroundColor(f:() -> QColor) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectForegroundColor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectForegroundColor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectForegroundColor"]);
	};

	public function ForegroundColor():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ForegroundColor"]);
	};

	public function ForegroundColorDefault():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ForegroundColorDefault"]);
	};

	public function ConnectIndexOfChild(f:(child:QAccessibleInterface) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndexOfChild", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIndexOfChild() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndexOfChild"]);
	};

	public function IndexOfChild(child:QAccessibleInterface_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOfChild", child]);
	};

	public function IndexOfChildDefault(child:QAccessibleInterface_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOfChildDefault", child]);
	};

	public function ConnectInterface_cast(f:(t:Int) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInterface_cast", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInterface_cast() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInterface_cast"]);
	};

	public function Interface_cast(t:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Interface_cast", t]);
	};

	public function Interface_castDefault(t:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Interface_castDefault", t]);
	};

	public function ConnectIsValid(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsValid", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIsValid() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsValid"]);
	};

	public function IsValid():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsValid"]);
	};

	public function IsValidDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsValidDefault"]);
	};

	public override function ConnectKeyBindingsForAction(f:(actionName:String) -> Array<String>) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectKeyBindingsForAction",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectKeyBindingsForAction() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectKeyBindingsForAction"]);
	};

	public override function KeyBindingsForAction(actionName:String):Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "KeyBindingsForAction", actionName]);
	};

	public function KeyBindingsForActionDefault(actionName:String):Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "KeyBindingsForActionDefault", actionName]);
	};

	public function ConnectParent(f:() -> QAccessibleInterface) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectParent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectParent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectParent"]);
	};

	public function Parent():QAccessibleInterface {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Parent"]);
	};

	public function ParentDefault():QAccessibleInterface {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentDefault"]);
	};

	public function ParentObject():QObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentObject"]);
	};

	public function ConnectRect(f:() -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRect", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRect"]);
	};

	public function Rect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Rect"]);
	};

	public function RectDefault():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RectDefault"]);
	};

	public function ConnectRole(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRole", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRole() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRole"]);
	};

	public function Role():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Role"]);
	};

	public function RoleDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RoleDefault"]);
	};

	public function ConnectText(f:(t:Int) -> String) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectText"]);
	};

	public function Text(t:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text", t]);
	};

	public function TextDefault(t:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextDefault", t]);
	};

	public function Widget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget"]);
	};

	public function ConnectWindow(f:() -> QWindow) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWindow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWindow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWindow"]);
	};

	public function Window():QWindow {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Window"]);
	};

	public function WindowDefault():QWindow {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowDefault"]);
	};

	public function ConnectDestroyQAccessibleWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQAccessibleWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQAccessibleWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQAccessibleWidget"]);
	};

	public function DestroyQAccessibleWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAccessibleWidget"]);
	};

	public function DestroyQAccessibleWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAccessibleWidgetDefault"]);
	};

	public function ChildAt(x:Int, y:Int):QAccessibleInterface {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildAt", x, y]);
	};

	public function ChildAtDefault(x:Int, y:Int):QAccessibleInterface {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildAtDefault", x, y]);
	};

	public function Object():QObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Object"]);
	};

	public function ObjectDefault():QObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ObjectDefault"]);
	};

	public function SetText(t:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", t, text]);
	};

	public function SetTextDefault(t:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextDefault", t, text]);
	};

	public override function LocalizedActionDescription(actionName:String):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LocalizedActionDescription", actionName]);
	};

	public override function LocalizedActionDescriptionDefault(actionName:String):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LocalizedActionDescriptionDefault", actionName]);
	};

	public override function LocalizedActionName(actionName:String):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LocalizedActionName", actionName]);
	};

	public override function LocalizedActionNameDefault(actionName:String):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LocalizedActionNameDefault", actionName]);
	};
}

function NewQAccessibleWidgetFromPointer(ptr:String):QAccessibleWidget {
	final r = new QAccessibleWidget();
	r.initFrom(ptr, "widgets.QAccessibleWidget");
	return r;
}

interface QAction_ITF extends QObject_ITF {
	public function QAction_PTR():QAction;
}

class QAction extends QObject implements QAction_ITF {
	public function new() {
		super();
	}

	public function QAction_PTR():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QAction_PTR"]);
	};

	public function ActionGroup():QActionGroup {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActionGroup"]);
	};

	public function Activate(event:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Activate", event]);
	};

	public function AssociatedGraphicsWidgets():Array<QGraphicsWidget> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AssociatedGraphicsWidgets"]);
	};

	public function AssociatedWidgets():Array<QWidget> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AssociatedWidgets"]);
	};

	public function AutoRepeat():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoRepeat"]);
	};

	public function ConnectChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectChanged"]);
	};

	public function Changed() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Changed"]);
	};

	public function Data():QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Data"]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function ConnectHover(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHover", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHover() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHover"]);
	};

	public function Hover() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Hover"]);
	};

	public function HoverDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HoverDefault"]);
	};

	public function ConnectHovered(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHovered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHovered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHovered"]);
	};

	public function Hovered() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Hovered"]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function IconText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconText"]);
	};

	public function IsCheckable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsCheckable"]);
	};

	public function IsChecked():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsChecked"]);
	};

	public function IsEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEnabled"]);
	};

	public function IsIconVisibleInMenu():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIconVisibleInMenu"]);
	};

	public function IsSeparator():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSeparator"]);
	};

	public function IsShortcutVisibleInContextMenu():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsShortcutVisibleInContextMenu"]);
	};

	public function IsVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsVisible"]);
	};

	public function Menu():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Menu"]);
	};

	public function MenuRole():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MenuRole"]);
	};

	public function ParentWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentWidget"]);
	};

	public function Priority():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Priority"]);
	};

	public function SetActionGroup(group:QActionGroup_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActionGroup", group]);
	};

	public function SetAutoRepeat(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoRepeat", vbo]);
	};

	public function SetCheckable(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckable", vbo]);
	};

	public function ConnectSetChecked(f:(vbo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetChecked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetChecked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetChecked"]);
	};

	public function SetChecked(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetChecked", vbo]);
	};

	public function SetCheckedDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckedDefault", vbo]);
	};

	public function SetData(userData:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetData", userData]);
	};

	public function ConnectSetDisabled(f:(b:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetDisabled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetDisabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetDisabled"]);
	};

	public function SetDisabled(b:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDisabled", b]);
	};

	public function SetDisabledDefault(b:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDisabledDefault", b]);
	};

	public function ConnectSetEnabled(f:(vbo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetEnabled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetEnabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetEnabled"]);
	};

	public function SetEnabled(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabled", vbo]);
	};

	public function SetEnabledDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabledDefault", vbo]);
	};

	public function SetFont(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", font]);
	};

	public function SetIcon(icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", icon]);
	};

	public function SetIconText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconText", text]);
	};

	public function SetIconVisibleInMenu(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconVisibleInMenu", visible]);
	};

	public function SetMenu(menu:QMenu_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMenu", menu]);
	};

	public function SetMenuRole(menuRole:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMenuRole", menuRole]);
	};

	public function SetPriority(priority:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPriority", priority]);
	};

	public function SetSeparator(b:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSeparator", b]);
	};

	public function SetShortcut(shortcut:QKeySequence_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShortcut", shortcut]);
	};

	public function SetShortcutContext(context:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShortcutContext", context]);
	};

	public function SetShortcutVisibleInContextMenu(show:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShortcutVisibleInContextMenu", show]);
	};

	public function SetShortcuts(shortcuts:Array<QKeySequence>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShortcuts", shortcuts]);
	};

	public function SetShortcuts2(key:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShortcuts2", key]);
	};

	public function SetStatusTip(statusTip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStatusTip", statusTip]);
	};

	public function SetText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", text]);
	};

	public function SetToolTip(tip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolTip", tip]);
	};

	public function ConnectSetVisible(f:(vbo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetVisible"]);
	};

	public function SetVisible(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisible", vbo]);
	};

	public function SetVisibleDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisibleDefault", vbo]);
	};

	public function SetWhatsThis(what:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWhatsThis", what]);
	};

	public function Shortcut():QKeySequence {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Shortcut"]);
	};

	public function ShortcutContext():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ShortcutContext"]);
	};

	public function Shortcuts():Array<QKeySequence> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Shortcuts"]);
	};

	public function ShowStatusText(widget:QWidget_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ShowStatusText", widget]);
	};

	public function StatusTip():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StatusTip"]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function ConnectToggle(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectToggle", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectToggle() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToggle"]);
	};

	public function Toggle() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Toggle"]);
	};

	public function ToggleDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToggleDefault"]);
	};

	public function ConnectToggled(f:(checked:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectToggled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectToggled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToggled"]);
	};

	public function Toggled(checked:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Toggled", checked]);
	};

	public function ToolTip():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolTip"]);
	};

	public function ConnectTrigger(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTrigger", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTrigger() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTrigger"]);
	};

	public function Trigger() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Trigger"]);
	};

	public function TriggerDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "TriggerDefault"]);
	};

	public function ConnectTriggered(f:(checked:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTriggered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTriggered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTriggered"]);
	};

	public function Triggered(checked:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Triggered", checked]);
	};

	public function WhatsThis():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WhatsThis"]);
	};

	public function ConnectDestroyQAction(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQAction", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQAction() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQAction"]);
	};

	public function DestroyQAction() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQAction"]);
	};

	public function DestroyQActionDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQActionDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQActionFromPointer(ptr:String):QAction {
	final r = new QAction();
	r.initFrom(ptr, "widgets.QAction");
	return r;
}

function NewQAction(parent:QObject_ITF):QAction {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQAction", "", parent]);
}

function NewQAction2(text:String, parent:QObject_ITF):QAction {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQAction2", "", text, parent]);
}

function NewQAction3(icon:QIcon_ITF, text:String, parent:QObject_ITF):QAction {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQAction3", "", icon, text, parent]);
}

interface QActionGroup_ITF extends QObject_ITF {
	public function QActionGroup_PTR():QActionGroup;
}

class QActionGroup extends QObject implements QActionGroup_ITF {
	public function new() {
		super();
	}

	public function QActionGroup_PTR():QActionGroup {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QActionGroup_PTR"]);
	};

	public function Actions():Array<QAction> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Actions"]);
	};

	public function AddAction(action:QAction_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction", action]);
	};

	public function AddAction2(text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction2", text]);
	};

	public function AddAction3(icon:QIcon_ITF, text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction3", icon, text]);
	};

	public function CheckedAction():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckedAction"]);
	};

	public function ConnectHovered(f:(action:QAction) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHovered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHovered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHovered"]);
	};

	public function Hovered(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Hovered", action]);
	};

	public function IsEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEnabled"]);
	};

	public function IsExclusive():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsExclusive"]);
	};

	public function IsVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsVisible"]);
	};

	public function RemoveAction(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveAction", action]);
	};

	public function ConnectSetDisabled(f:(b:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetDisabled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetDisabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetDisabled"]);
	};

	public function SetDisabled(b:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDisabled", b]);
	};

	public function SetDisabledDefault(b:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDisabledDefault", b]);
	};

	public function ConnectSetEnabled(f:(vbo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetEnabled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetEnabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetEnabled"]);
	};

	public function SetEnabled(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabled", vbo]);
	};

	public function SetEnabledDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabledDefault", vbo]);
	};

	public function ConnectSetExclusive(f:(vbo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetExclusive", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetExclusive() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetExclusive"]);
	};

	public function SetExclusive(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetExclusive", vbo]);
	};

	public function SetExclusiveDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetExclusiveDefault", vbo]);
	};

	public function ConnectSetVisible(f:(vbo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetVisible"]);
	};

	public function SetVisible(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisible", vbo]);
	};

	public function SetVisibleDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisibleDefault", vbo]);
	};

	public function ConnectTriggered(f:(action:QAction) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTriggered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTriggered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTriggered"]);
	};

	public function Triggered(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Triggered", action]);
	};

	public function ConnectDestroyQActionGroup(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQActionGroup",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQActionGroup() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQActionGroup"]);
	};

	public function DestroyQActionGroup() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQActionGroup"]);
	};

	public function DestroyQActionGroupDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQActionGroupDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQActionGroupFromPointer(ptr:String):QActionGroup {
	final r = new QActionGroup();
	r.initFrom(ptr, "widgets.QActionGroup");
	return r;
}

function NewQActionGroup(parent:QObject_ITF):QActionGroup {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQActionGroup", "", parent]);
}

interface QApplication_ITF extends QGuiApplication_ITF {
	public function QApplication_PTR():QApplication;
}

class QApplication extends QGuiApplication implements QApplication_ITF {
	public function new() {
		super();
	}

	public function QApplication_PTR():QApplication {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QApplication_PTR"]);
	};

	public function ConnectAboutQt(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAboutQt", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAboutQt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAboutQt"]);
	};

	public function AboutQt() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AboutQt"]);
	};

	public function AboutQtDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AboutQtDefault"]);
	};

	public function ActiveModalWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActiveModalWidget"]);
	};

	public function ActivePopupWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActivePopupWidget"]);
	};

	public function ActiveWindow():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActiveWindow"]);
	};

	public function Alert(widget:QWidget_ITF, msec:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Alert", widget, msec]);
	};

	public function AllWidgets():Array<QWidget> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AllWidgets"]);
	};

	public function ConnectAutoSipEnabled(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAutoSipEnabled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAutoSipEnabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAutoSipEnabled"]);
	};

	public function AutoSipEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoSipEnabled"]);
	};

	public function AutoSipEnabledDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoSipEnabledDefault"]);
	};

	public function Beep() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Beep"]);
	};

	public function ConnectCloseAllWindows(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCloseAllWindows", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCloseAllWindows() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCloseAllWindows"]);
	};

	public function CloseAllWindows() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseAllWindows"]);
	};

	public function CloseAllWindowsDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseAllWindowsDefault"]);
	};

	public function CursorFlashTime():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorFlashTime"]);
	};

	public function Desktop():QDesktopWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Desktop"]);
	};

	public function DoubleClickInterval():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DoubleClickInterval"]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function Exec():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Exec"]);
	};

	public function ConnectFocusChanged(f:(old:QWidget, now:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFocusChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFocusChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusChanged"]);
	};

	public function FocusChanged(old:QWidget_ITF, now:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusChanged", old, now]);
	};

	public function FocusWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusWidget"]);
	};

	public override function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function Font2(widget:QWidget_ITF):QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font2", widget]);
	};

	public function Font3(className:String):QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font3", className]);
	};

	public function FontMetrics():QFontMetrics {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FontMetrics"]);
	};

	public function GlobalStrut():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GlobalStrut"]);
	};

	public function IsEffectEnabled(effect:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEffectEnabled", effect]);
	};

	public function KeyboardInputInterval():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "KeyboardInputInterval"]);
	};

	public function NavigationMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NavigationMode"]);
	};

	public function Palette_QApplication(widget:QWidget_ITF):QPalette {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Palette", widget]);
	};

	public function Palette2(className:String):QPalette {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Palette2", className]);
	};

	public function SetActiveWindow(active:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActiveWindow", active]);
	};

	public function ConnectSetAutoSipEnabled(f:(enabled:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetAutoSipEnabled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetAutoSipEnabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetAutoSipEnabled"]);
	};

	public function SetAutoSipEnabled(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoSipEnabled", enabled]);
	};

	public function SetAutoSipEnabledDefault(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoSipEnabledDefault", enabled]);
	};

	public function SetCursorFlashTime(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCursorFlashTime", vi]);
	};

	public function SetDoubleClickInterval(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDoubleClickInterval", vi]);
	};

	public function SetEffectEnabled(effect:Int, enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEffectEnabled", effect, enable]);
	};

	public function SetFont_QApplication(font:QFont_ITF, className:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", font, className]);
	};

	public function SetGlobalStrut(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGlobalStrut", vqs]);
	};

	public function SetKeyboardInputInterval(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetKeyboardInputInterval", vi]);
	};

	public function SetNavigationMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNavigationMode", mode]);
	};

	public function SetPalette_QApplication(palette:QPalette_ITF, className:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPalette", palette, className]);
	};

	public function SetStartDragDistance(l:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStartDragDistance", l]);
	};

	public function SetStartDragTime(ms:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStartDragTime", ms]);
	};

	public function SetStyle(style:QStyle_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStyle", style]);
	};

	public function SetStyle2(style:String):QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetStyle2", style]);
	};

	public function ConnectSetStyleSheet(f:(sheet:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetStyleSheet", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetStyleSheet() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetStyleSheet"]);
	};

	public function SetStyleSheet(sheet:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStyleSheet", sheet]);
	};

	public function SetStyleSheetDefault(sheet:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStyleSheetDefault", sheet]);
	};

	public function SetWheelScrollLines(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWheelScrollLines", vi]);
	};

	public override function SetWindowIcon(icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowIcon", icon]);
	};

	public function StartDragDistance():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StartDragDistance"]);
	};

	public function StartDragTime():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StartDragTime"]);
	};

	public function Style():QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Style"]);
	};

	public function StyleSheet():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StyleSheet"]);
	};

	public function TopLevelAt_QApplication(point:QPoint_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TopLevelAt", point]);
	};

	public function TopLevelAt2(x:Int, y:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TopLevelAt2", x, y]);
	};

	public function TopLevelWidgets():Array<QWidget> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TopLevelWidgets"]);
	};

	public function WheelScrollLines():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WheelScrollLines"]);
	};

	public function WidgetAt(point:QPoint_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WidgetAt", point]);
	};

	public function WidgetAt2(x:Int, y:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WidgetAt2", x, y]);
	};

	public override function WindowIcon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowIcon"]);
	};

	public function ConnectDestroyQApplication(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQApplication",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQApplication() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQApplication"]);
	};

	public function DestroyQApplication() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQApplication"]);
	};

	public function DestroyQApplicationDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQApplicationDefault"]);
	};

	public override function QuitDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "QuitDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQApplicationFromPointer(ptr:String):QApplication {
	final r = new QApplication();
	r.initFrom(ptr, "widgets.QApplication");
	return r;
}

function NewQApplication(argc:Int, argv:Array<String>):QApplication {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQApplication", "", argc, argv]);
}

function QApplication_ActiveModalWidget():QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_ActiveModalWidget", ""]);
}

function QApplication_ActivePopupWidget():QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_ActivePopupWidget", ""]);
}

function QApplication_ActiveWindow():QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_ActiveWindow", ""]);
}

function QApplication_Alert(widget:QWidget_ITF, msec:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_Alert", "", widget, msec]);
}

function QApplication_AllWidgets():Array<QWidget> {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_AllWidgets", ""]);
}

function QApplication_Beep() {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_Beep", ""]);
}

function QApplication_CursorFlashTime():Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_CursorFlashTime", ""]);
}

function QApplication_Desktop():QDesktopWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_Desktop", ""]);
}

function QApplication_DoubleClickInterval():Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_DoubleClickInterval", ""]);
}

function QApplication_Exec():Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_Exec", ""]);
}

function QApplication_FocusWidget():QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_FocusWidget", ""]);
}

function QApplication_Font():QFont {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_Font", ""]);
}

function QApplication_Font2(widget:QWidget_ITF):QFont {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_Font2", "", widget]);
}

function QApplication_Font3(className:String):QFont {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_Font3", "", className]);
}

function QApplication_FontMetrics():QFontMetrics {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_FontMetrics", ""]);
}

function QApplication_GlobalStrut():QSize {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_GlobalStrut", ""]);
}

function QApplication_IsEffectEnabled(effect:Int):Bool {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_IsEffectEnabled", "", effect]);
}

function QApplication_KeyboardInputInterval():Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_KeyboardInputInterval", ""]);
}

function QApplication_NavigationMode():Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_NavigationMode", ""]);
}

function QApplication_Palette(widget:QWidget_ITF):QPalette {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_Palette", "", widget]);
}

function QApplication_Palette2(className:String):QPalette {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_Palette2", "", className]);
}

function QApplication_SetActiveWindow(active:QWidget_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetActiveWindow", "", active]);
}

function QApplication_SetCursorFlashTime(vi:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetCursorFlashTime", "", vi]);
}

function QApplication_SetDoubleClickInterval(vi:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetDoubleClickInterval", "", vi]);
}

function QApplication_SetEffectEnabled(effect:Int, enable:Bool) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetEffectEnabled", "", effect, enable]);
}

function QApplication_SetFont(font:QFont_ITF, className:String) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetFont", "", font, className]);
}

function QApplication_SetGlobalStrut(vqs:QSize_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetGlobalStrut", "", vqs]);
}

function QApplication_SetKeyboardInputInterval(vi:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetKeyboardInputInterval", "", vi]);
}

function QApplication_SetNavigationMode(mode:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetNavigationMode", "", mode]);
}

function QApplication_SetPalette(palette:QPalette_ITF, className:String) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetPalette", "", palette, className]);
}

function QApplication_SetStartDragDistance(l:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetStartDragDistance", "", l]);
}

function QApplication_SetStartDragTime(ms:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetStartDragTime", "", ms]);
}

function QApplication_SetStyle(style:QStyle_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetStyle", "", style]);
}

function QApplication_SetStyle2(style:String):QStyle {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_SetStyle2", "", style]);
}

function QApplication_SetWheelScrollLines(vi:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetWheelScrollLines", "", vi]);
}

function QApplication_SetWindowIcon(icon:QIcon_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QApplication_SetWindowIcon", "", icon]);
}

function QApplication_StartDragDistance():Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_StartDragDistance", ""]);
}

function QApplication_StartDragTime():Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_StartDragTime", ""]);
}

function QApplication_Style():QStyle {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_Style", ""]);
}

function QApplication_TopLevelAt(point:QPoint_ITF):QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_TopLevelAt", "", point]);
}

function QApplication_TopLevelAt2(x:Int, y:Int):QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_TopLevelAt2", "", x, y]);
}

function QApplication_TopLevelWidgets():Array<QWidget> {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_TopLevelWidgets", ""]);
}

function QApplication_WheelScrollLines():Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_WheelScrollLines", ""]);
}

function QApplication_WidgetAt(point:QPoint_ITF):QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_WidgetAt", "", point]);
}

function QApplication_WidgetAt2(x:Int, y:Int):QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_WidgetAt2", "", x, y]);
}

function QApplication_WindowIcon():QIcon {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QApplication_WindowIcon", ""]);
}

interface QBoxLayout_ITF extends QLayout_ITF {
	public function QBoxLayout_PTR():QBoxLayout;
}

class QBoxLayout extends QLayout implements QBoxLayout_ITF {
	public function new() {
		super();
	}

	public function QBoxLayout_PTR():QBoxLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QBoxLayout_PTR"]);
	};

	public override function ConnectAddItem(f:(item:QLayoutItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAddItem", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectAddItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAddItem"]);
	};

	public override function AddItem(item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem", item]);
	};

	public function AddItemDefault(item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItemDefault", item]);
	};

	public function AddLayout(layout:QLayout_ITF, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddLayout", layout, stretch]);
	};

	public function AddSpacerItem(spacerItem:QSpacerItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddSpacerItem", spacerItem]);
	};

	public function AddSpacing(size:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddSpacing", size]);
	};

	public function AddStretch(stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddStretch", stretch]);
	};

	public function AddStrut(size:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddStrut", size]);
	};

	public function AddWidget_QBoxLayout(widget:QWidget_ITF, stretch:Int, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddWidget", widget, stretch, alignment]);
	};

	public override function ConnectCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCount"]);
	};

	public override function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function CountDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CountDefault"]);
	};

	public function Direction():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Direction"]);
	};

	public function InsertItem(index:Int, item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertItem", index, item]);
	};

	public function InsertLayout(index:Int, layout:QLayout_ITF, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertLayout", index, layout, stretch]);
	};

	public function InsertSpacerItem(index:Int, spacerItem:QSpacerItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertSpacerItem", index, spacerItem]);
	};

	public function InsertSpacing(index:Int, size:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertSpacing", index, size]);
	};

	public function InsertStretch(index:Int, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertStretch", index, stretch]);
	};

	public function InsertWidget(index:Int, widget:QWidget_ITF, stretch:Int, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertWidget", index, widget, stretch, alignment]);
	};

	public override function ConnectItemAt(f:(index:Int) -> QLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectItemAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemAt"]);
	};

	public override function ItemAt(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", index]);
	};

	public function ItemAtDefault(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAtDefault", index]);
	};

	public function SetDirection(direction:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDirection", direction]);
	};

	public function SetStretch(index:Int, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStretch", index, stretch]);
	};

	public function SetStretchFactor(widget:QWidget_ITF, stretch:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetStretchFactor", widget, stretch]);
	};

	public function SetStretchFactor2(layout:QLayout_ITF, stretch:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetStretchFactor2", layout, stretch]);
	};

	public override function ConnectSizeHint(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public override function SizeHintDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault"]);
	};

	public function Stretch(index:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Stretch", index]);
	};

	public override function ConnectTakeAt(f:(index:Int) -> QLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTakeAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectTakeAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTakeAt"]);
	};

	public override function TakeAt(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeAt", index]);
	};

	public function TakeAtDefault(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeAtDefault", index]);
	};

	public function ConnectDestroyQBoxLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQBoxLayout", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQBoxLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQBoxLayout"]);
	};

	public function DestroyQBoxLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQBoxLayout"]);
	};

	public function DestroyQBoxLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQBoxLayoutDefault"]);
	};
}

function NewQBoxLayoutFromPointer(ptr:String):QBoxLayout {
	final r = new QBoxLayout();
	r.initFrom(ptr, "widgets.QBoxLayout");
	return r;
}

function NewQBoxLayout(dir:Int, parent:QWidget_ITF):QBoxLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQBoxLayout", "", dir, parent]);
}

interface QButtonGroup_ITF extends QObject_ITF {
	public function QButtonGroup_PTR():QButtonGroup;
}

class QButtonGroup extends QObject implements QButtonGroup_ITF {
	public function new() {
		super();
	}

	public function QButtonGroup_PTR():QButtonGroup {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QButtonGroup_PTR"]);
	};

	public function AddButton(button:QAbstractButton_ITF, id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddButton", button, id]);
	};

	public function Button(id:Int):QAbstractButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Button", id]);
	};

	public function ConnectButtonClicked(f:(button:QAbstractButton) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectButtonClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectButtonClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectButtonClicked"]);
	};

	public function ButtonClicked(button:QAbstractButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ButtonClicked", button]);
	};

	public function ConnectButtonClicked2(f:(id:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectButtonClicked2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectButtonClicked2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectButtonClicked2"]);
	};

	public function ButtonClicked2(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ButtonClicked2", id]);
	};

	public function ConnectButtonPressed(f:(button:QAbstractButton) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectButtonPressed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectButtonPressed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectButtonPressed"]);
	};

	public function ButtonPressed(button:QAbstractButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ButtonPressed", button]);
	};

	public function ConnectButtonPressed2(f:(id:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectButtonPressed2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectButtonPressed2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectButtonPressed2"]);
	};

	public function ButtonPressed2(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ButtonPressed2", id]);
	};

	public function ConnectButtonReleased(f:(button:QAbstractButton) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectButtonReleased", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectButtonReleased() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectButtonReleased"]);
	};

	public function ButtonReleased(button:QAbstractButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ButtonReleased", button]);
	};

	public function ConnectButtonReleased2(f:(id:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectButtonReleased2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectButtonReleased2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectButtonReleased2"]);
	};

	public function ButtonReleased2(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ButtonReleased2", id]);
	};

	public function ConnectButtonToggled(f:(button:QAbstractButton, checked:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectButtonToggled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectButtonToggled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectButtonToggled"]);
	};

	public function ButtonToggled(button:QAbstractButton_ITF, checked:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ButtonToggled", button, checked]);
	};

	public function ConnectButtonToggled2(f:(id:Int, checked:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectButtonToggled2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectButtonToggled2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectButtonToggled2"]);
	};

	public function ButtonToggled2(id:Int, checked:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ButtonToggled2", id, checked]);
	};

	public function Buttons():Array<QAbstractButton> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Buttons"]);
	};

	public function CheckedButton():QAbstractButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckedButton"]);
	};

	public function CheckedId():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckedId"]);
	};

	public function Exclusive():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Exclusive"]);
	};

	public function Id(button:QAbstractButton_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Id", button]);
	};

	public function RemoveButton(button:QAbstractButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveButton", button]);
	};

	public function SetExclusive(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetExclusive", vbo]);
	};

	public function SetId(button:QAbstractButton_ITF, id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetId", button, id]);
	};

	public function ConnectDestroyQButtonGroup(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQButtonGroup",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQButtonGroup() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQButtonGroup"]);
	};

	public function DestroyQButtonGroup() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQButtonGroup"]);
	};

	public function DestroyQButtonGroupDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQButtonGroupDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQButtonGroupFromPointer(ptr:String):QButtonGroup {
	final r = new QButtonGroup();
	r.initFrom(ptr, "widgets.QButtonGroup");
	return r;
}

function NewQButtonGroup(parent:QObject_ITF):QButtonGroup {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQButtonGroup", "", parent]);
}

interface QCalendarWidget_ITF extends QWidget_ITF {
	public function QCalendarWidget_PTR():QCalendarWidget;
}

class QCalendarWidget extends QWidget implements QCalendarWidget_ITF {
	public function new() {
		super();
	}

	public function QCalendarWidget_PTR():QCalendarWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QCalendarWidget_PTR"]);
	};

	public function ConnectActivated(f:(date:QDate) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivated"]);
	};

	public function Activated(date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Activated", date]);
	};

	public function ConnectClicked(f:(date:QDate) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClicked"]);
	};

	public function Clicked(date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clicked", date]);
	};

	public function ConnectCurrentPageChanged(f:(year:Int, month:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentPageChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentPageChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentPageChanged"]);
	};

	public function CurrentPageChanged(year:Int, month:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentPageChanged", year, month]);
	};

	public function DateEditAcceptDelay():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DateEditAcceptDelay"]);
	};

	public function DateTextFormat():Map<QDate, QTextCharFormat> {
		final _tmpValue:Map<String, Dynamic> = Internal.callLocalFunction(["", Pointer(), ___className, "DateTextFormat"]);
		return [for (k => v in _tmpValue) NewQDateFromPointer(k) => v];
	};

	public function DateTextFormat2(date:QDate_ITF):QTextCharFormat {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DateTextFormat2", date]);
	};

	public function FirstDayOfWeek():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FirstDayOfWeek"]);
	};

	public function HeaderTextFormat():QTextCharFormat {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HeaderTextFormat"]);
	};

	public function HorizontalHeaderFormat():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalHeaderFormat"]);
	};

	public function IsDateEditEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsDateEditEnabled"]);
	};

	public function IsGridVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsGridVisible"]);
	};

	public function IsNavigationBarVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsNavigationBarVisible"]);
	};

	public function MaximumDate():QDate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumDate"]);
	};

	public function MinimumDate():QDate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumDate"]);
	};

	public function MonthShown():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MonthShown"]);
	};

	public function ConnectPaintCell(f:(painter:QPainter, rect:QRect, date:QDate) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintCell", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaintCell() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintCell"]);
	};

	public function PaintCell(painter:QPainter_ITF, rect:QRect_ITF, date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintCell", painter, rect, date]);
	};

	public function PaintCellDefault(painter:QPainter_ITF, rect:QRect_ITF, date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintCellDefault", painter, rect, date]);
	};

	public function SelectedDate():QDate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedDate"]);
	};

	public function ConnectSelectionChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectionChanged"]);
	};

	public function SelectionChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChanged"]);
	};

	public function SelectionMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionMode"]);
	};

	public function ConnectSetCurrentPage(f:(year:Int, month:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentPage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentPage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentPage"]);
	};

	public function SetCurrentPage(year:Int, month:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentPage", year, month]);
	};

	public function SetCurrentPageDefault(year:Int, month:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentPageDefault", year, month]);
	};

	public function SetDateEditAcceptDelay(delay:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDateEditAcceptDelay", delay]);
	};

	public function SetDateEditEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDateEditEnabled", enable]);
	};

	public function ConnectSetDateRange(f:(mi:QDate, max:QDate) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetDateRange", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetDateRange() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetDateRange"]);
	};

	public function SetDateRange(mi:QDate_ITF, max:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDateRange", mi, max]);
	};

	public function SetDateRangeDefault(mi:QDate_ITF, max:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDateRangeDefault", mi, max]);
	};

	public function SetDateTextFormat(date:QDate_ITF, format:QTextCharFormat_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDateTextFormat", date, format]);
	};

	public function SetFirstDayOfWeek(dayOfWeek:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFirstDayOfWeek", dayOfWeek]);
	};

	public function ConnectSetGridVisible(f:(show:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetGridVisible", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetGridVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetGridVisible"]);
	};

	public function SetGridVisible(show:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGridVisible", show]);
	};

	public function SetGridVisibleDefault(show:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGridVisibleDefault", show]);
	};

	public function SetHeaderTextFormat(format:QTextCharFormat_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHeaderTextFormat", format]);
	};

	public function SetHorizontalHeaderFormat(format:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalHeaderFormat", format]);
	};

	public function SetMaximumDate(date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumDate", date]);
	};

	public function SetMinimumDate(date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumDate", date]);
	};

	public function ConnectSetNavigationBarVisible(f:(visible:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetNavigationBarVisible",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetNavigationBarVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetNavigationBarVisible"]);
	};

	public function SetNavigationBarVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNavigationBarVisible", visible]);
	};

	public function SetNavigationBarVisibleDefault(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNavigationBarVisibleDefault", visible]);
	};

	public function ConnectSetSelectedDate(f:(date:QDate) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetSelectedDate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetSelectedDate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetSelectedDate"]);
	};

	public function SetSelectedDate(date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectedDate", date]);
	};

	public function SetSelectedDateDefault(date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectedDateDefault", date]);
	};

	public function SetSelectionMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionMode", mode]);
	};

	public function SetVerticalHeaderFormat(format:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalHeaderFormat", format]);
	};

	public function SetWeekdayTextFormat(dayOfWeek:Int, format:QTextCharFormat_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWeekdayTextFormat", dayOfWeek, format]);
	};

	public function ConnectShowNextMonth(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowNextMonth", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowNextMonth() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowNextMonth"]);
	};

	public function ShowNextMonth() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowNextMonth"]);
	};

	public function ShowNextMonthDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowNextMonthDefault"]);
	};

	public function ConnectShowNextYear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowNextYear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowNextYear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowNextYear"]);
	};

	public function ShowNextYear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowNextYear"]);
	};

	public function ShowNextYearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowNextYearDefault"]);
	};

	public function ConnectShowPreviousMonth(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowPreviousMonth", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowPreviousMonth() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowPreviousMonth"]);
	};

	public function ShowPreviousMonth() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowPreviousMonth"]);
	};

	public function ShowPreviousMonthDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowPreviousMonthDefault"]);
	};

	public function ConnectShowPreviousYear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowPreviousYear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowPreviousYear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowPreviousYear"]);
	};

	public function ShowPreviousYear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowPreviousYear"]);
	};

	public function ShowPreviousYearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowPreviousYearDefault"]);
	};

	public function ConnectShowSelectedDate(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowSelectedDate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowSelectedDate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowSelectedDate"]);
	};

	public function ShowSelectedDate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowSelectedDate"]);
	};

	public function ShowSelectedDateDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowSelectedDateDefault"]);
	};

	public function ConnectShowToday(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowToday", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowToday() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowToday"]);
	};

	public function ShowToday() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowToday"]);
	};

	public function ShowTodayDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowTodayDefault"]);
	};

	public function UpdateCell(date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateCell", date]);
	};

	public function UpdateCells() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateCells"]);
	};

	public function VerticalHeaderFormat():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalHeaderFormat"]);
	};

	public function WeekdayTextFormat(dayOfWeek:Int):QTextCharFormat {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WeekdayTextFormat", dayOfWeek]);
	};

	public function YearShown():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "YearShown"]);
	};

	public function ConnectDestroyQCalendarWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQCalendarWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQCalendarWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQCalendarWidget"]);
	};

	public function DestroyQCalendarWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQCalendarWidget"]);
	};

	public function DestroyQCalendarWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQCalendarWidgetDefault"]);
	};
}

function NewQCalendarWidgetFromPointer(ptr:String):QCalendarWidget {
	final r = new QCalendarWidget();
	r.initFrom(ptr, "widgets.QCalendarWidget");
	return r;
}

function NewQCalendarWidget(parent:QWidget_ITF):QCalendarWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQCalendarWidget", "", parent]);
}

interface QCheckBox_ITF extends QAbstractButton_ITF {
	public function QCheckBox_PTR():QCheckBox;
}

class QCheckBox extends QAbstractButton implements QCheckBox_ITF {
	public function new() {
		super();
	}

	public function QCheckBox_PTR():QCheckBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QCheckBox_PTR"]);
	};

	public function CheckState():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckState"]);
	};

	public function InitStyleOption(option:QStyleOptionButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function IsTristate():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsTristate"]);
	};

	public override function ConnectPaintEvent(f:(vqp:QPaintEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaintEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintEvent"]);
	};

	public override function PaintEvent(vqp:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEvent", vqp]);
	};

	public override function PaintEventDefault(vqp:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEventDefault", vqp]);
	};

	public function SetCheckState(state:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckState", state]);
	};

	public function SetTristate(y:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTristate", y]);
	};

	public function ConnectStateChanged(f:(state:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStateChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStateChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStateChanged"]);
	};

	public function StateChanged(state:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "StateChanged", state]);
	};

	public function ConnectDestroyQCheckBox(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQCheckBox", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQCheckBox() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQCheckBox"]);
	};

	public function DestroyQCheckBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQCheckBox"]);
	};

	public function DestroyQCheckBoxDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQCheckBoxDefault"]);
	};
}

function NewQCheckBoxFromPointer(ptr:String):QCheckBox {
	final r = new QCheckBox();
	r.initFrom(ptr, "widgets.QCheckBox");
	return r;
}

function NewQCheckBox(parent:QWidget_ITF):QCheckBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQCheckBox", "", parent]);
}

function NewQCheckBox2(text:String, parent:QWidget_ITF):QCheckBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQCheckBox2", "", text, parent]);
}

interface QColorDialog_ITF extends QDialog_ITF {
	public function QColorDialog_PTR():QColorDialog;
}

class QColorDialog extends QDialog implements QColorDialog_ITF {
	public function new() {
		super();
	}

	public function QColorDialog_PTR():QColorDialog {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QColorDialog_PTR"]);
	};

	public function ConnectColorSelected(f:(color:QColor) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectColorSelected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectColorSelected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColorSelected"]);
	};

	public function ColorSelected(color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColorSelected", color]);
	};

	public function CurrentColor():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentColor"]);
	};

	public function ConnectCurrentColorChanged(f:(color:QColor) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentColorChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentColorChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentColorChanged"]);
	};

	public function CurrentColorChanged(color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentColorChanged", color]);
	};

	public function CustomColor(index:Int):QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CustomColor", index]);
	};

	public function CustomCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CustomCount"]);
	};

	public override function ConnectDone(f:(result:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDone() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDone"]);
	};

	public override function Done(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Done", result]);
	};

	public override function DoneDefault(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoneDefault", result]);
	};

	public function GetColor(initial:QColor_ITF, parent:QWidget_ITF, title:String, options:Int):QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GetColor", initial, parent, title, options]);
	};

	public function Open_QColorDialog(receiver:QObject_ITF, member:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Open", receiver, member]);
	};

	public function Options():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Options"]);
	};

	public function SelectedColor():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedColor"]);
	};

	public function SetCurrentColor(color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentColor", color]);
	};

	public function SetCustomColor(index:Int, color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCustomColor", index, color]);
	};

	public function SetOption(option:Int, on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOption", option, on]);
	};

	public function SetOptions(options:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOptions", options]);
	};

	public function SetStandardColor(index:Int, color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStandardColor", index, color]);
	};

	public function StandardColor(index:Int):QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardColor", index]);
	};

	public function TestOption(option:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TestOption", option]);
	};

	public function ConnectDestroyQColorDialog(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQColorDialog",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQColorDialog() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQColorDialog"]);
	};

	public function DestroyQColorDialog() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQColorDialog"]);
	};

	public function DestroyQColorDialogDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQColorDialogDefault"]);
	};
}

function NewQColorDialogFromPointer(ptr:String):QColorDialog {
	final r = new QColorDialog();
	r.initFrom(ptr, "widgets.QColorDialog");
	return r;
}

function NewQColorDialog(parent:QWidget_ITF):QColorDialog {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQColorDialog", "", parent]);
}

function NewQColorDialog2(initial:QColor_ITF, parent:QWidget_ITF):QColorDialog {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQColorDialog2", "", initial, parent]);
}

function QColorDialog_CustomColor(index:Int):QColor {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QColorDialog_CustomColor", "", index]);
}

function QColorDialog_CustomCount():Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QColorDialog_CustomCount", ""]);
}

function QColorDialog_GetColor(initial:QColor_ITF, parent:QWidget_ITF, title:String, options:Int):QColor {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QColorDialog_GetColor", "", initial, parent, title, options]);
}

function QColorDialog_SetCustomColor(index:Int, color:QColor_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QColorDialog_SetCustomColor", "", index, color]);
}

function QColorDialog_SetStandardColor(index:Int, color:QColor_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QColorDialog_SetStandardColor", "", index, color]);
}

function QColorDialog_StandardColor(index:Int):QColor {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QColorDialog_StandardColor", "", index]);
}

interface QColormap_ITF {
	public function QColormap_PTR():QColormap;
}

class QColormap extends Internal implements QColormap_ITF {
	public function new() {
		super();
	}

	public function QColormap_PTR():QColormap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QColormap_PTR"]);
	};

	public function ColorAt(pixel:Int):QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColorAt", pixel]);
	};

	public function Colormap():Array<QColor> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Colormap"]);
	};

	public function Depth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Depth"]);
	};

	public function Instance(screen:Int):QColormap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Instance", screen]);
	};

	public function Mode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Mode"]);
	};

	public function Pixel(color:QColor_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pixel", color]);
	};

	public function Size():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Size"]);
	};

	public function DestroyQColormap() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQColormap"]);
	};
}

function NewQColormapFromPointer(ptr:String):QColormap {
	final r = new QColormap();
	r.initFrom(ptr, "widgets.QColormap");
	return r;
}

function NewQColormap(colormap:QColormap_ITF):QColormap {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQColormap", "", colormap]);
}

function QColormap_Instance(screen:Int):QColormap {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QColormap_Instance", "", screen]);
}

interface QColumnView_ITF extends QAbstractItemView_ITF {
	public function QColumnView_PTR():QColumnView;
}

class QColumnView extends QAbstractItemView implements QColumnView_ITF {
	public function new() {
		super();
	}

	public function QColumnView_PTR():QColumnView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QColumnView_PTR"]);
	};

	public function ColumnWidths():Array<Int> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnWidths"]);
	};

	public function ConnectCreateColumn(f:(index:QModelIndex) -> QAbstractItemView) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCreateColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCreateColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreateColumn"]);
	};

	public function CreateColumn(index:QModelIndex_ITF):QAbstractItemView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateColumn", index]);
	};

	public function CreateColumnDefault(index:QModelIndex_ITF):QAbstractItemView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateColumnDefault", index]);
	};

	public override function ConnectCurrentChanged(f:(current:QModelIndex, previous:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public override function CurrentChanged(current:QModelIndex_ITF, previous:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", current, previous]);
	};

	public override function CurrentChangedDefault(current:QModelIndex_ITF, previous:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChangedDefault", current, previous]);
	};

	public override function ConnectHorizontalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectHorizontalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHorizontalOffset"]);
	};

	public override function HorizontalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffset"]);
	};

	public function HorizontalOffsetDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffsetDefault"]);
	};

	public override function ConnectIndexAt(f:(point:QPoint) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndexAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIndexAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndexAt"]);
	};

	public override function IndexAt(point:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAt", point]);
	};

	public function IndexAtDefault(point:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAtDefault", point]);
	};

	public function InitializeColumn(column:QAbstractItemView_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitializeColumn", column]);
	};

	public override function ConnectIsIndexHidden(f:(index:QModelIndex) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsIndexHidden", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIsIndexHidden() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsIndexHidden"]);
	};

	public override function IsIndexHidden(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHidden", index]);
	};

	public function IsIndexHiddenDefault(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHiddenDefault", index]);
	};

	public override function ConnectMoveCursor(f:(cursorAction:Int, modifiers:Int) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMoveCursor", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMoveCursor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMoveCursor"]);
	};

	public override function MoveCursor(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursor", cursorAction, modifiers]);
	};

	public function MoveCursorDefault(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursorDefault", cursorAction, modifiers]);
	};

	public function PreviewWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PreviewWidget"]);
	};

	public function ResizeGripsVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ResizeGripsVisible"]);
	};

	public override function ConnectRowsInserted(f:(parent:QModelIndex, start:Int, end:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRowsInserted", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectRowsInserted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowsInserted"]);
	};

	public override function RowsInserted(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsInserted", parent, start, end]);
	};

	public override function RowsInsertedDefault(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsInsertedDefault", parent, start, end]);
	};

	public override function ConnectScrollTo(f:(index:QModelIndex, hint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollTo", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectScrollTo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollTo"]);
	};

	public override function ScrollTo(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollTo", index, hint]);
	};

	public function ScrollToDefault(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToDefault", index, hint]);
	};

	public override function ConnectSelectAll(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSelectAll() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectAll"]);
	};

	public override function SelectAll() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAll"]);
	};

	public override function SelectAllDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAllDefault"]);
	};

	public function SetColumnWidths(list:Array<Int>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnWidths", list]);
	};

	public function SetPreviewWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPreviewWidget", widget]);
	};

	public function SetResizeGripsVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetResizeGripsVisible", visible]);
	};

	public override function ConnectSetRootIndex(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetRootIndex", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetRootIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetRootIndex"]);
	};

	public override function SetRootIndex(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootIndex", index]);
	};

	public override function SetRootIndexDefault(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootIndexDefault", index]);
	};

	public override function ConnectSetSelection(f:(rect:QRect, command:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetSelection"]);
	};

	public override function SetSelection(rect:QRect_ITF, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelection", rect, command]);
	};

	public function SetSelectionDefault(rect:QRect_ITF, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionDefault", rect, command]);
	};

	public function ConnectUpdatePreviewWidget(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectUpdatePreviewWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectUpdatePreviewWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdatePreviewWidget"]);
	};

	public function UpdatePreviewWidget(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdatePreviewWidget", index]);
	};

	public override function ConnectVerticalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectVerticalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVerticalOffset"]);
	};

	public override function VerticalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffset"]);
	};

	public function VerticalOffsetDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffsetDefault"]);
	};

	public override function ConnectVisualRect(f:(index:QModelIndex) -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVisualRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectVisualRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisualRect"]);
	};

	public override function VisualRect(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRect", index]);
	};

	public function VisualRectDefault(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRectDefault", index]);
	};

	public override function ConnectVisualRegionForSelection(f:(selection:QItemSelection) -> QRegion) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectVisualRegionForSelection",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectVisualRegionForSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisualRegionForSelection"]);
	};

	public override function VisualRegionForSelection(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelection", selection]);
	};

	public function VisualRegionForSelectionDefault(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelectionDefault", selection]);
	};

	public function ConnectDestroyQColumnView(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQColumnView",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQColumnView() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQColumnView"]);
	};

	public function DestroyQColumnView() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQColumnView"]);
	};

	public function DestroyQColumnViewDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQColumnViewDefault"]);
	};
}

function NewQColumnViewFromPointer(ptr:String):QColumnView {
	final r = new QColumnView();
	r.initFrom(ptr, "widgets.QColumnView");
	return r;
}

function NewQColumnView(parent:QWidget_ITF):QColumnView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQColumnView", "", parent]);
}

interface QComboBox_ITF extends QWidget_ITF {
	public function QComboBox_PTR():QComboBox;
}

class QComboBox extends QWidget implements QComboBox_ITF {
	public function new() {
		super();
	}

	public function QComboBox_PTR():QComboBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QComboBox_PTR"]);
	};

	public function ConnectActivated(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivated"]);
	};

	public function Activated(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Activated", index]);
	};

	public function ConnectActivated2(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActivated2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActivated2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivated2"]);
	};

	public function Activated2(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Activated2", text]);
	};

	public function AddItem(text:String, userData:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem", text, userData]);
	};

	public function AddItem2(icon:QIcon_ITF, text:String, userData:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem2", icon, text, userData]);
	};

	public function AddItems(texts:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItems", texts]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function ConnectClearEditText(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClearEditText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClearEditText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClearEditText"]);
	};

	public function ClearEditText() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearEditText"]);
	};

	public function ClearEditTextDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearEditTextDefault"]);
	};

	public function Completer():QCompleter {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Completer"]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function CurrentData(role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentData", role]);
	};

	public function CurrentIndex():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndex"]);
	};

	public function ConnectCurrentIndexChanged(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentIndexChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentIndexChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentIndexChanged"]);
	};

	public function CurrentIndexChanged(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndexChanged", index]);
	};

	public function CurrentText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentText"]);
	};

	public function ConnectCurrentTextChanged(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentTextChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentTextChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentTextChanged"]);
	};

	public function CurrentTextChanged(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentTextChanged", text]);
	};

	public function DuplicatesEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DuplicatesEnabled"]);
	};

	public function ConnectEditTextChanged(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEditTextChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEditTextChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEditTextChanged"]);
	};

	public function EditTextChanged(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EditTextChanged", text]);
	};

	public function FindData(data:QVariant_ITF, role:Int, flags:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FindData", data, role, flags]);
	};

	public function FindText(text:String, flags:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FindText", text, flags]);
	};

	public function HasFrame():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasFrame"]);
	};

	public function ConnectHidePopup(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHidePopup", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHidePopup() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHidePopup"]);
	};

	public function HidePopup() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HidePopup"]);
	};

	public function HidePopupDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HidePopupDefault"]);
	};

	public function ConnectHighlighted(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHighlighted", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHighlighted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHighlighted"]);
	};

	public function Highlighted(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Highlighted", index]);
	};

	public function ConnectHighlighted2(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHighlighted2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHighlighted2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHighlighted2"]);
	};

	public function Highlighted2(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Highlighted2", text]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function InitStyleOption(option:QStyleOptionComboBox_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function InsertItem(index:Int, text:String, userData:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertItem", index, text, userData]);
	};

	public function InsertItem2(index:Int, icon:QIcon_ITF, text:String, userData:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertItem2", index, icon, text, userData]);
	};

	public function InsertItems(index:Int, list:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertItems", index, list]);
	};

	public function InsertPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertPolicy"]);
	};

	public function InsertSeparator(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertSeparator", index]);
	};

	public function IsEditable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEditable"]);
	};

	public function ItemData(index:Int, role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemData", index, role]);
	};

	public function ItemDelegate():QAbstractItemDelegate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemDelegate"]);
	};

	public function ItemIcon(index:Int):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemIcon", index]);
	};

	public function ItemText(index:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemText", index]);
	};

	public function LineEdit():QLineEdit {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LineEdit"]);
	};

	public function MaxCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaxCount"]);
	};

	public function MaxVisibleItems():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaxVisibleItems"]);
	};

	public function MinimumContentsLength():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumContentsLength"]);
	};

	public function Model():QAbstractItemModel {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Model"]);
	};

	public function ModelColumn():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ModelColumn"]);
	};

	public function RemoveItem(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveItem", index]);
	};

	public function RootModelIndex():QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RootModelIndex"]);
	};

	public function SetCompleter(completer:QCompleter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCompleter", completer]);
	};

	public function ConnectSetCurrentIndex(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentIndex"]);
	};

	public function SetCurrentIndex(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndex", index]);
	};

	public function SetCurrentIndexDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndexDefault", index]);
	};

	public function ConnectSetCurrentText(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentText"]);
	};

	public function SetCurrentText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentText", text]);
	};

	public function SetCurrentTextDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentTextDefault", text]);
	};

	public function SetDuplicatesEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDuplicatesEnabled", enable]);
	};

	public function ConnectSetEditText(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetEditText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetEditText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetEditText"]);
	};

	public function SetEditText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEditText", text]);
	};

	public function SetEditTextDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEditTextDefault", text]);
	};

	public function SetEditable(editable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEditable", editable]);
	};

	public function SetFrame(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFrame", vbo]);
	};

	public function SetIconSize(size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", size]);
	};

	public function SetInsertPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInsertPolicy", policy]);
	};

	public function SetItemData(index:Int, value:QVariant_ITF, role:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemData", index, value, role]);
	};

	public function SetItemDelegate(delegate:QAbstractItemDelegate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemDelegate", delegate]);
	};

	public function SetItemIcon(index:Int, icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemIcon", index, icon]);
	};

	public function SetItemText(index:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemText", index, text]);
	};

	public function SetLineEdit(edit:QLineEdit_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLineEdit", edit]);
	};

	public function SetMaxCount(max:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaxCount", max]);
	};

	public function SetMaxVisibleItems(maxItems:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaxVisibleItems", maxItems]);
	};

	public function SetMinimumContentsLength(characters:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumContentsLength", characters]);
	};

	public function SetModel(model:QAbstractItemModel_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModel", model]);
	};

	public function SetModelColumn(visibleColumn:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModelColumn", visibleColumn]);
	};

	public function SetRootModelIndex(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootModelIndex", index]);
	};

	public function SetSizeAdjustPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizeAdjustPolicy", policy]);
	};

	public function SetValidator(validator:QValidator_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValidator", validator]);
	};

	public function SetView(itemView:QAbstractItemView_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetView", itemView]);
	};

	public function ConnectShowPopup(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowPopup", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowPopup() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowPopup"]);
	};

	public function ShowPopup() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowPopup"]);
	};

	public function ShowPopupDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowPopupDefault"]);
	};

	public function SizeAdjustPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeAdjustPolicy"]);
	};

	public function Validator():QValidator {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Validator"]);
	};

	public function View():QAbstractItemView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "View"]);
	};

	public function ConnectDestroyQComboBox(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQComboBox", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQComboBox() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQComboBox"]);
	};

	public function DestroyQComboBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQComboBox"]);
	};

	public function DestroyQComboBoxDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQComboBoxDefault"]);
	};
}

function NewQComboBoxFromPointer(ptr:String):QComboBox {
	final r = new QComboBox();
	r.initFrom(ptr, "widgets.QComboBox");
	return r;
}

function NewQComboBox(parent:QWidget_ITF):QComboBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQComboBox", "", parent]);
}

interface QCommandLinkButton_ITF extends QPushButton_ITF {
	public function QCommandLinkButton_PTR():QCommandLinkButton;
}

class QCommandLinkButton extends QPushButton implements QCommandLinkButton_ITF {
	public function new() {
		super();
	}

	public function QCommandLinkButton_PTR():QCommandLinkButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QCommandLinkButton_PTR"]);
	};

	public function Description():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Description"]);
	};

	public function SetDescription(description:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDescription", description]);
	};

	public function ConnectDestroyQCommandLinkButton(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQCommandLinkButton",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQCommandLinkButton() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQCommandLinkButton"]);
	};

	public function DestroyQCommandLinkButton() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQCommandLinkButton"]);
	};

	public function DestroyQCommandLinkButtonDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQCommandLinkButtonDefault"]);
	};
}

function NewQCommandLinkButtonFromPointer(ptr:String):QCommandLinkButton {
	final r = new QCommandLinkButton();
	r.initFrom(ptr, "widgets.QCommandLinkButton");
	return r;
}

function NewQCommandLinkButton(parent:QWidget_ITF):QCommandLinkButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQCommandLinkButton", "", parent]);
}

function NewQCommandLinkButton2(text:String, parent:QWidget_ITF):QCommandLinkButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQCommandLinkButton2", "", text, parent]);
}

function NewQCommandLinkButton3(text:String, description:String, parent:QWidget_ITF):QCommandLinkButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQCommandLinkButton3", "", text, description, parent]);
}

interface QCommonStyle_ITF extends QStyle_ITF {
	public function QCommonStyle_PTR():QCommonStyle;
}

class QCommonStyle extends QStyle implements QCommonStyle_ITF {
	public function new() {
		super();
	}

	public function QCommonStyle_PTR():QCommonStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QCommonStyle_PTR"]);
	};

	public override function ConnectDrawComplexControl(f:(cc:Int, opt:QStyleOptionComplex, p:QPainter, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDrawComplexControl",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectDrawComplexControl() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawComplexControl"]);
	};

	public override function DrawComplexControl(cc:Int, opt:QStyleOptionComplex_ITF, p:QPainter_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawComplexControl", cc, opt, p, widget]);
	};

	public function DrawComplexControlDefault(cc:Int, opt:QStyleOptionComplex_ITF, p:QPainter_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawComplexControlDefault", cc, opt, p, widget]);
	};

	public override function ConnectDrawControl(f:(element:Int, opt:QStyleOption, p:QPainter, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawControl", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDrawControl() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawControl"]);
	};

	public override function DrawControl(element:Int, opt:QStyleOption_ITF, p:QPainter_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawControl", element, opt, p, widget]);
	};

	public function DrawControlDefault(element:Int, opt:QStyleOption_ITF, p:QPainter_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawControlDefault", element, opt, p, widget]);
	};

	public override function ConnectDrawPrimitive(f:(pe:Int, opt:QStyleOption, p:QPainter, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawPrimitive", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDrawPrimitive() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawPrimitive"]);
	};

	public override function DrawPrimitive(pe:Int, opt:QStyleOption_ITF, p:QPainter_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawPrimitive", pe, opt, p, widget]);
	};

	public function DrawPrimitiveDefault(pe:Int, opt:QStyleOption_ITF, p:QPainter_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawPrimitiveDefault", pe, opt, p, widget]);
	};

	public override function ConnectGeneratedIconPixmap(f:(iconMode:Int, pixmap:QPixmap, opt:QStyleOption) -> QPixmap) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectGeneratedIconPixmap",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectGeneratedIconPixmap() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGeneratedIconPixmap"]);
	};

	public override function GeneratedIconPixmap(iconMode:Int, pixmap:QPixmap_ITF, opt:QStyleOption_ITF):QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GeneratedIconPixmap", iconMode, pixmap, opt]);
	};

	public function GeneratedIconPixmapDefault(iconMode:Int, pixmap:QPixmap_ITF, opt:QStyleOption_ITF):QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GeneratedIconPixmapDefault", iconMode, pixmap, opt]);
	};

	public override function ConnectHitTestComplexControl(f:(cc:Int, opt:QStyleOptionComplex, pt:QPoint, widget:QWidget) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectHitTestComplexControl",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectHitTestComplexControl() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHitTestComplexControl"]);
	};

	public override function HitTestComplexControl(cc:Int, opt:QStyleOptionComplex_ITF, pt:QPoint_ITF, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HitTestComplexControl", cc, opt, pt, widget]);
	};

	public function HitTestComplexControlDefault(cc:Int, opt:QStyleOptionComplex_ITF, pt:QPoint_ITF, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HitTestComplexControlDefault", cc, opt, pt, widget]);
	};

	public override function ConnectLayoutSpacing(f:(control1:Int, control2:Int, orientation:Int, option:QStyleOption, widget:QWidget) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLayoutSpacing", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectLayoutSpacing() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLayoutSpacing"]);
	};

	public override function LayoutSpacing(control1:Int, control2:Int, orientation:Int, option:QStyleOption_ITF, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"LayoutSpacing",
			control1,
			control2,
			orientation,
			option,
			widget
		]);
	};

	public function LayoutSpacingDefault(control1:Int, control2:Int, orientation:Int, option:QStyleOption_ITF, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"LayoutSpacingDefault",
			control1,
			control2,
			orientation,
			option,
			widget
		]);
	};

	public override function ConnectPixelMetric(f:(m:Int, opt:QStyleOption, widget:QWidget) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPixelMetric", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPixelMetric() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPixelMetric"]);
	};

	public override function PixelMetric(m:Int, opt:QStyleOption_ITF, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PixelMetric", m, opt, widget]);
	};

	public function PixelMetricDefault(m:Int, opt:QStyleOption_ITF, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PixelMetricDefault", m, opt, widget]);
	};

	public override function ConnectSizeFromContents(f:(ct:Int, opt:QStyleOption, csz:QSize, widget:QWidget) -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeFromContents", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeFromContents() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeFromContents"]);
	};

	public override function SizeFromContents(ct:Int, opt:QStyleOption_ITF, csz:QSize_ITF, widget:QWidget_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeFromContents", ct, opt, csz, widget]);
	};

	public function SizeFromContentsDefault(ct:Int, opt:QStyleOption_ITF, csz:QSize_ITF, widget:QWidget_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeFromContentsDefault", ct, opt, csz, widget]);
	};

	public override function ConnectStandardPixmap(f:(sp:Int, option:QStyleOption, widget:QWidget) -> QPixmap) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStandardPixmap", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectStandardPixmap() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStandardPixmap"]);
	};

	public override function StandardPixmap(sp:Int, option:QStyleOption_ITF, widget:QWidget_ITF):QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardPixmap", sp, option, widget]);
	};

	public function StandardPixmapDefault(sp:Int, option:QStyleOption_ITF, widget:QWidget_ITF):QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardPixmapDefault", sp, option, widget]);
	};

	public override function ConnectStyleHint(f:(sh:Int, opt:QStyleOption, widget:QWidget, hret:QStyleHintReturn) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStyleHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectStyleHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStyleHint"]);
	};

	public override function StyleHint(sh:Int, opt:QStyleOption_ITF, widget:QWidget_ITF, hret:QStyleHintReturn_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StyleHint", sh, opt, widget, hret]);
	};

	public function StyleHintDefault(sh:Int, opt:QStyleOption_ITF, widget:QWidget_ITF, hret:QStyleHintReturn_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StyleHintDefault", sh, opt, widget, hret]);
	};

	public override function ConnectSubControlRect(f:(cc:Int, opt:QStyleOptionComplex, sc:Int, widget:QWidget) -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSubControlRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSubControlRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSubControlRect"]);
	};

	public override function SubControlRect(cc:Int, opt:QStyleOptionComplex_ITF, sc:Int, widget:QWidget_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubControlRect", cc, opt, sc, widget]);
	};

	public function SubControlRectDefault(cc:Int, opt:QStyleOptionComplex_ITF, sc:Int, widget:QWidget_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubControlRectDefault", cc, opt, sc, widget]);
	};

	public override function ConnectSubElementRect(f:(sr:Int, opt:QStyleOption, widget:QWidget) -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSubElementRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSubElementRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSubElementRect"]);
	};

	public override function SubElementRect(sr:Int, opt:QStyleOption_ITF, widget:QWidget_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubElementRect", sr, opt, widget]);
	};

	public function SubElementRectDefault(sr:Int, opt:QStyleOption_ITF, widget:QWidget_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubElementRectDefault", sr, opt, widget]);
	};

	public function ConnectDestroyQCommonStyle(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQCommonStyle",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQCommonStyle() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQCommonStyle"]);
	};

	public function DestroyQCommonStyle() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQCommonStyle"]);
	};

	public function DestroyQCommonStyleDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQCommonStyleDefault"]);
	};

	public override function StandardIcon(standardIcon:Int, option:QStyleOption_ITF, widget:QWidget_ITF):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardIcon", standardIcon, option, widget]);
	};

	public function StandardIconDefault(standardIcon:Int, option:QStyleOption_ITF, widget:QWidget_ITF):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardIconDefault", standardIcon, option, widget]);
	};
}

function NewQCommonStyleFromPointer(ptr:String):QCommonStyle {
	final r = new QCommonStyle();
	r.initFrom(ptr, "widgets.QCommonStyle");
	return r;
}

function NewQCommonStyle():QCommonStyle {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQCommonStyle", ""]);
}

interface QCompleter_ITF extends QObject_ITF {
	public function QCompleter_PTR():QCompleter;
}

class QCompleter extends QObject implements QCompleter_ITF {
	public function new() {
		super();
	}

	public function QCompleter_PTR():QCompleter {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QCompleter_PTR"]);
	};

	public function ConnectActivated(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivated"]);
	};

	public function Activated(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Activated", text]);
	};

	public function ConnectActivated2(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActivated2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActivated2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivated2"]);
	};

	public function Activated2(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Activated2", index]);
	};

	public function CaseSensitivity():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CaseSensitivity"]);
	};

	public function ConnectComplete(f:(rect:QRect) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectComplete", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectComplete() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectComplete"]);
	};

	public function Complete(rect:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Complete", rect]);
	};

	public function CompleteDefault(rect:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CompleteDefault", rect]);
	};

	public function CompletionColumn():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CompletionColumn"]);
	};

	public function CompletionCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CompletionCount"]);
	};

	public function CompletionMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CompletionMode"]);
	};

	public function CompletionModel():QAbstractItemModel {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CompletionModel"]);
	};

	public function CompletionPrefix():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CompletionPrefix"]);
	};

	public function CompletionRole():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CompletionRole"]);
	};

	public function CurrentCompletion():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentCompletion"]);
	};

	public function CurrentIndex():QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndex"]);
	};

	public function CurrentRow():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentRow"]);
	};

	public override function EventDefault(ev:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", ev]);
	};

	public override function EventFilterDefault(o:QObject_ITF, e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", o, e]);
	};

	public function FilterMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FilterMode"]);
	};

	public function ConnectHighlighted(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHighlighted", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHighlighted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHighlighted"]);
	};

	public function Highlighted(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Highlighted", text]);
	};

	public function ConnectHighlighted2(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHighlighted2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHighlighted2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHighlighted2"]);
	};

	public function Highlighted2(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Highlighted2", index]);
	};

	public function MaxVisibleItems():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaxVisibleItems"]);
	};

	public function Model():QAbstractItemModel {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Model"]);
	};

	public function ModelSorting():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ModelSorting"]);
	};

	public function ConnectPathFromIndex(f:(index:QModelIndex) -> String) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPathFromIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPathFromIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPathFromIndex"]);
	};

	public function PathFromIndex(index:QModelIndex_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PathFromIndex", index]);
	};

	public function PathFromIndexDefault(index:QModelIndex_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PathFromIndexDefault", index]);
	};

	public function Popup():QAbstractItemView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Popup"]);
	};

	public function SetCaseSensitivity(caseSensitivity:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCaseSensitivity", caseSensitivity]);
	};

	public function SetCompletionColumn(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCompletionColumn", column]);
	};

	public function SetCompletionMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCompletionMode", mode]);
	};

	public function ConnectSetCompletionPrefix(f:(prefix:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetCompletionPrefix",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetCompletionPrefix() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCompletionPrefix"]);
	};

	public function SetCompletionPrefix(prefix:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCompletionPrefix", prefix]);
	};

	public function SetCompletionPrefixDefault(prefix:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCompletionPrefixDefault", prefix]);
	};

	public function SetCompletionRole(role:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCompletionRole", role]);
	};

	public function SetCurrentRow(row:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentRow", row]);
	};

	public function SetFilterMode(filterMode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFilterMode", filterMode]);
	};

	public function SetMaxVisibleItems(maxItems:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaxVisibleItems", maxItems]);
	};

	public function SetModel(model:QAbstractItemModel_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModel", model]);
	};

	public function SetModelSorting(sorting:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModelSorting", sorting]);
	};

	public function SetPopup(popup:QAbstractItemView_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPopup", popup]);
	};

	public function SetWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWidget", widget]);
	};

	public function ConnectSetWrapAround(f:(wrap:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetWrapAround", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetWrapAround() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetWrapAround"]);
	};

	public function SetWrapAround(wrap:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWrapAround", wrap]);
	};

	public function SetWrapAroundDefault(wrap:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWrapAroundDefault", wrap]);
	};

	public function ConnectSplitPath(f:(path:String) -> Array<String>) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSplitPath", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSplitPath() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSplitPath"]);
	};

	public function SplitPath(path:String):Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SplitPath", path]);
	};

	public function SplitPathDefault(path:String):Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SplitPathDefault", path]);
	};

	public function Widget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget"]);
	};

	public function WrapAround():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WrapAround"]);
	};

	public function ConnectDestroyQCompleter(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQCompleter", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQCompleter() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQCompleter"]);
	};

	public function DestroyQCompleter() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQCompleter"]);
	};

	public function DestroyQCompleterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQCompleterDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQCompleterFromPointer(ptr:String):QCompleter {
	final r = new QCompleter();
	r.initFrom(ptr, "widgets.QCompleter");
	return r;
}

function NewQCompleter(parent:QObject_ITF):QCompleter {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQCompleter", "", parent]);
}

function NewQCompleter2(model:QAbstractItemModel_ITF, parent:QObject_ITF):QCompleter {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQCompleter2", "", model, parent]);
}

function NewQCompleter3(list:Array<String>, parent:QObject_ITF):QCompleter {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQCompleter3", "", list, parent]);
}

interface QDataWidgetMapper_ITF extends QObject_ITF {
	public function QDataWidgetMapper_PTR():QDataWidgetMapper;
}

class QDataWidgetMapper extends QObject implements QDataWidgetMapper_ITF {
	public function new() {
		super();
	}

	public function QDataWidgetMapper_PTR():QDataWidgetMapper {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QDataWidgetMapper_PTR"]);
	};

	public function AddMapping(widget:QWidget_ITF, section:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddMapping", widget, section]);
	};

	public function AddMapping2(widget:QWidget_ITF, section:Int, propertyName:QByteArray_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddMapping2", widget, section, propertyName]);
	};

	public function ClearMapping() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMapping"]);
	};

	public function CurrentIndex():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndex"]);
	};

	public function ConnectCurrentIndexChanged(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentIndexChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentIndexChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentIndexChanged"]);
	};

	public function CurrentIndexChanged(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndexChanged", index]);
	};

	public function ItemDelegate():QAbstractItemDelegate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemDelegate"]);
	};

	public function MappedPropertyName(widget:QWidget_ITF):QByteArray {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MappedPropertyName", widget]);
	};

	public function MappedSection(widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MappedSection", widget]);
	};

	public function MappedWidgetAt(section:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MappedWidgetAt", section]);
	};

	public function Model():QAbstractItemModel {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Model"]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function RemoveMapping(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveMapping", widget]);
	};

	public function ConnectRevert(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRevert", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRevert() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRevert"]);
	};

	public function Revert() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Revert"]);
	};

	public function RevertDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RevertDefault"]);
	};

	public function RootIndex():QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RootIndex"]);
	};

	public function ConnectSetCurrentIndex(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentIndex"]);
	};

	public function SetCurrentIndex(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndex", index]);
	};

	public function SetCurrentIndexDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndexDefault", index]);
	};

	public function ConnectSetCurrentModelIndex(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetCurrentModelIndex",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetCurrentModelIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentModelIndex"]);
	};

	public function SetCurrentModelIndex(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentModelIndex", index]);
	};

	public function SetCurrentModelIndexDefault(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentModelIndexDefault", index]);
	};

	public function SetItemDelegate(delegate:QAbstractItemDelegate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemDelegate", delegate]);
	};

	public function SetModel(model:QAbstractItemModel_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModel", model]);
	};

	public function SetOrientation(aOrientation:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientation", aOrientation]);
	};

	public function SetRootIndex(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootIndex", index]);
	};

	public function SetSubmitPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSubmitPolicy", policy]);
	};

	public function ConnectSubmit(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSubmit", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSubmit() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSubmit"]);
	};

	public function Submit():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Submit"]);
	};

	public function SubmitDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubmitDefault"]);
	};

	public function SubmitPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubmitPolicy"]);
	};

	public function ConnectToFirst(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectToFirst", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectToFirst() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToFirst"]);
	};

	public function ToFirst() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToFirst"]);
	};

	public function ToFirstDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToFirstDefault"]);
	};

	public function ConnectToLast(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectToLast", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectToLast() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToLast"]);
	};

	public function ToLast() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToLast"]);
	};

	public function ToLastDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToLastDefault"]);
	};

	public function ConnectToNext(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectToNext", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectToNext() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToNext"]);
	};

	public function ToNext() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToNext"]);
	};

	public function ToNextDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToNextDefault"]);
	};

	public function ConnectToPrevious(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectToPrevious", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectToPrevious() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToPrevious"]);
	};

	public function ToPrevious() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToPrevious"]);
	};

	public function ToPreviousDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToPreviousDefault"]);
	};

	public function ConnectDestroyQDataWidgetMapper(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQDataWidgetMapper",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQDataWidgetMapper() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQDataWidgetMapper"]);
	};

	public function DestroyQDataWidgetMapper() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDataWidgetMapper"]);
	};

	public function DestroyQDataWidgetMapperDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDataWidgetMapperDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQDataWidgetMapperFromPointer(ptr:String):QDataWidgetMapper {
	final r = new QDataWidgetMapper();
	r.initFrom(ptr, "widgets.QDataWidgetMapper");
	return r;
}

function NewQDataWidgetMapper(parent:QObject_ITF):QDataWidgetMapper {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDataWidgetMapper", "", parent]);
}

interface QDateEdit_ITF extends QDateTimeEdit_ITF {
	public function QDateEdit_PTR():QDateEdit;
}

class QDateEdit extends QDateTimeEdit implements QDateEdit_ITF {
	public function new() {
		super();
	}

	public function QDateEdit_PTR():QDateEdit {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QDateEdit_PTR"]);
	};

	public function ConnectDestroyQDateEdit(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQDateEdit", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQDateEdit() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQDateEdit"]);
	};

	public function DestroyQDateEdit() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDateEdit"]);
	};

	public function DestroyQDateEditDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDateEditDefault"]);
	};
}

function NewQDateEditFromPointer(ptr:String):QDateEdit {
	final r = new QDateEdit();
	r.initFrom(ptr, "widgets.QDateEdit");
	return r;
}

function NewQDateEdit(parent:QWidget_ITF):QDateEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDateEdit", "", parent]);
}

function NewQDateEdit2(date:QDate_ITF, parent:QWidget_ITF):QDateEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDateEdit2", "", date, parent]);
}

interface QDateTimeEdit_ITF extends QAbstractSpinBox_ITF {
	public function QDateTimeEdit_PTR():QDateTimeEdit;
}

class QDateTimeEdit extends QAbstractSpinBox implements QDateTimeEdit_ITF {
	public function new() {
		super();
	}

	public function QDateTimeEdit_PTR():QDateTimeEdit {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QDateTimeEdit_PTR"]);
	};

	public function CalendarPopup():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CalendarPopup"]);
	};

	public function CalendarWidget():QCalendarWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CalendarWidget"]);
	};

	public override function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public override function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public override function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function ClearMaximumDate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMaximumDate"]);
	};

	public function ClearMaximumDateTime() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMaximumDateTime"]);
	};

	public function ClearMaximumTime() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMaximumTime"]);
	};

	public function ClearMinimumDate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMinimumDate"]);
	};

	public function ClearMinimumDateTime() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMinimumDateTime"]);
	};

	public function ClearMinimumTime() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMinimumTime"]);
	};

	public function CurrentSection():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentSection"]);
	};

	public function CurrentSectionIndex():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentSectionIndex"]);
	};

	public function Date():QDate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Date"]);
	};

	public function ConnectDateChanged(f:(date:QDate) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDateChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDateChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDateChanged"]);
	};

	public function DateChanged(date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DateChanged", date]);
	};

	public function DateTime():QDateTime {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DateTime"]);
	};

	public function ConnectDateTimeChanged(f:(datetime:QDateTime) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDateTimeChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDateTimeChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDateTimeChanged"]);
	};

	public function DateTimeChanged(datetime:QDateTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DateTimeChanged", datetime]);
	};

	public function ConnectDateTimeFromText(f:(text:String) -> QDateTime) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDateTimeFromText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDateTimeFromText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDateTimeFromText"]);
	};

	public function DateTimeFromText(text:String):QDateTime {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DateTimeFromText", text]);
	};

	public function DateTimeFromTextDefault(text:String):QDateTime {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DateTimeFromTextDefault", text]);
	};

	public function DisplayFormat():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DisplayFormat"]);
	};

	public function DisplayedSections():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DisplayedSections"]);
	};

	public function MaximumDate():QDate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumDate"]);
	};

	public function MaximumDateTime():QDateTime {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumDateTime"]);
	};

	public function MaximumTime():QTime {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumTime"]);
	};

	public function MinimumDate():QDate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumDate"]);
	};

	public function MinimumDateTime():QDateTime {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumDateTime"]);
	};

	public function MinimumTime():QTime {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumTime"]);
	};

	public function SectionAt(index:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionAt", index]);
	};

	public function SectionCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionCount"]);
	};

	public function SectionText(section:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionText", section]);
	};

	public function SetCalendarPopup(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCalendarPopup", enable]);
	};

	public function SetCalendarWidget(calendarWidget:QCalendarWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCalendarWidget", calendarWidget]);
	};

	public function SetCurrentSection(section:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentSection", section]);
	};

	public function SetCurrentSectionIndex(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentSectionIndex", index]);
	};

	public function ConnectSetDate(f:(date:QDate) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetDate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetDate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetDate"]);
	};

	public function SetDate(date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDate", date]);
	};

	public function SetDateDefault(date:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDateDefault", date]);
	};

	public function SetDateRange(mi:QDate_ITF, max:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDateRange", mi, max]);
	};

	public function ConnectSetDateTime(f:(dateTime:QDateTime) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetDateTime", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetDateTime() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetDateTime"]);
	};

	public function SetDateTime(dateTime:QDateTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDateTime", dateTime]);
	};

	public function SetDateTimeDefault(dateTime:QDateTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDateTimeDefault", dateTime]);
	};

	public function SetDateTimeRange(mi:QDateTime_ITF, max:QDateTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDateTimeRange", mi, max]);
	};

	public function SetDisplayFormat(format:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDisplayFormat", format]);
	};

	public function SetMaximumDate(max:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumDate", max]);
	};

	public function SetMaximumDateTime(dt:QDateTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumDateTime", dt]);
	};

	public function SetMaximumTime(max:QTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumTime", max]);
	};

	public function SetMinimumDate(mi:QDate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumDate", mi]);
	};

	public function SetMinimumDateTime(dt:QDateTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumDateTime", dt]);
	};

	public function SetMinimumTime(mi:QTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumTime", mi]);
	};

	public function SetSelectedSection(section:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectedSection", section]);
	};

	public function ConnectSetTime(f:(ti:QTime) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetTime", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetTime() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetTime"]);
	};

	public function SetTime(ti:QTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTime", ti]);
	};

	public function SetTimeDefault(ti:QTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTimeDefault", ti]);
	};

	public function SetTimeRange(mi:QTime_ITF, max:QTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTimeRange", mi, max]);
	};

	public function SetTimeSpec(spec:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTimeSpec", spec]);
	};

	public function ConnectTextFromDateTime(f:(dateTime:QDateTime) -> String) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTextFromDateTime", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTextFromDateTime() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTextFromDateTime"]);
	};

	public function TextFromDateTime(dateTime:QDateTime_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextFromDateTime", dateTime]);
	};

	public function TextFromDateTimeDefault(dateTime:QDateTime_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextFromDateTimeDefault", dateTime]);
	};

	public function Time():QTime {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Time"]);
	};

	public function ConnectTimeChanged(f:(ti:QTime) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTimeChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTimeChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTimeChanged"]);
	};

	public function TimeChanged(ti:QTime_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimeChanged", ti]);
	};

	public function TimeSpec():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TimeSpec"]);
	};

	public function ConnectDestroyQDateTimeEdit(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQDateTimeEdit",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQDateTimeEdit() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQDateTimeEdit"]);
	};

	public function DestroyQDateTimeEdit() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDateTimeEdit"]);
	};

	public function DestroyQDateTimeEditDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDateTimeEditDefault"]);
	};
}

function NewQDateTimeEditFromPointer(ptr:String):QDateTimeEdit {
	final r = new QDateTimeEdit();
	r.initFrom(ptr, "widgets.QDateTimeEdit");
	return r;
}

function NewQDateTimeEdit(parent:QWidget_ITF):QDateTimeEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDateTimeEdit", "", parent]);
}

function NewQDateTimeEdit2(datetime:QDateTime_ITF, parent:QWidget_ITF):QDateTimeEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDateTimeEdit2", "", datetime, parent]);
}

function NewQDateTimeEdit3(date:QDate_ITF, parent:QWidget_ITF):QDateTimeEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDateTimeEdit3", "", date, parent]);
}

function NewQDateTimeEdit4(ti:QTime_ITF, parent:QWidget_ITF):QDateTimeEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDateTimeEdit4", "", ti, parent]);
}

interface QDesktopWidget_ITF extends QWidget_ITF {
	public function QDesktopWidget_PTR():QDesktopWidget;
}

class QDesktopWidget extends QWidget implements QDesktopWidget_ITF {
	public function new() {
		super();
	}

	public function QDesktopWidget_PTR():QDesktopWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QDesktopWidget_PTR"]);
	};

	public function AvailableGeometry(screen:Int):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AvailableGeometry", screen]);
	};

	public function AvailableGeometry2(widget:QWidget_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AvailableGeometry2", widget]);
	};

	public function IsVirtualDesktop():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsVirtualDesktop"]);
	};

	public function NumScreens():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NumScreens"]);
	};

	public function PrimaryScreen():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PrimaryScreen"]);
	};

	public function ConnectPrimaryScreenChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectPrimaryScreenChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectPrimaryScreenChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPrimaryScreenChanged"]);
	};

	public function PrimaryScreenChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "PrimaryScreenChanged"]);
	};

	public function ConnectResized(f:(screen:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectResized", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectResized() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResized"]);
	};

	public function Resized(screen:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Resized", screen]);
	};

	public function Screen(screen:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Screen", screen]);
	};

	public function ScreenCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenCount"]);
	};

	public function ConnectScreenCountChanged(f:(newCount:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectScreenCountChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectScreenCountChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScreenCountChanged"]);
	};

	public function ScreenCountChanged(newCount:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScreenCountChanged", newCount]);
	};

	public function ScreenGeometry(screen:Int):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenGeometry", screen]);
	};

	public function ScreenGeometry2(widget:QWidget_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenGeometry2", widget]);
	};

	public function ScreenNumber(widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenNumber", widget]);
	};

	public function ScreenNumber2(point:QPoint_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenNumber2", point]);
	};

	public function ConnectWorkAreaResized(f:(screen:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWorkAreaResized", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWorkAreaResized() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWorkAreaResized"]);
	};

	public function WorkAreaResized(screen:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WorkAreaResized", screen]);
	};

	public function ConnectDestroyQDesktopWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQDesktopWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQDesktopWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQDesktopWidget"]);
	};

	public function DestroyQDesktopWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDesktopWidget"]);
	};

	public function DestroyQDesktopWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDesktopWidgetDefault"]);
	};
}

function NewQDesktopWidgetFromPointer(ptr:String):QDesktopWidget {
	final r = new QDesktopWidget();
	r.initFrom(ptr, "widgets.QDesktopWidget");
	return r;
}

function NewQDesktopWidget():QDesktopWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDesktopWidget", ""]);
}

interface QDial_ITF extends QAbstractSlider_ITF {
	public function QDial_PTR():QDial;
}

class QDial extends QAbstractSlider implements QDial_ITF {
	public function new() {
		super();
	}

	public function QDial_PTR():QDial {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QDial_PTR"]);
	};

	public function InitStyleOption(option:QStyleOptionSlider_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function NotchSize():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NotchSize"]);
	};

	public function NotchTarget():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NotchTarget"]);
	};

	public function NotchesVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NotchesVisible"]);
	};

	public function SetNotchTarget(target:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNotchTarget", target]);
	};

	public function ConnectSetNotchesVisible(f:(visible:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetNotchesVisible", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetNotchesVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetNotchesVisible"]);
	};

	public function SetNotchesVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNotchesVisible", visible]);
	};

	public function SetNotchesVisibleDefault(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNotchesVisibleDefault", visible]);
	};

	public function ConnectSetWrapping(f:(on:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetWrapping", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetWrapping() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetWrapping"]);
	};

	public function SetWrapping(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWrapping", on]);
	};

	public function SetWrappingDefault(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWrappingDefault", on]);
	};

	public function Wrapping():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Wrapping"]);
	};

	public function ConnectDestroyQDial(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQDial", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQDial() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQDial"]);
	};

	public function DestroyQDial() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDial"]);
	};

	public function DestroyQDialDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDialDefault"]);
	};
}

function NewQDialFromPointer(ptr:String):QDial {
	final r = new QDial();
	r.initFrom(ptr, "widgets.QDial");
	return r;
}

function NewQDial(parent:QWidget_ITF):QDial {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDial", "", parent]);
}

interface QDialog_ITF extends QWidget_ITF {
	public function QDialog_PTR():QDialog;
}

class QDialog extends QWidget implements QDialog_ITF {
	public function new() {
		super();
	}

	public function QDialog_PTR():QDialog {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QDialog_PTR"]);
	};

	public function ConnectAccept(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAccept", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAccept() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAccept"]);
	};

	public function Accept() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Accept"]);
	};

	public function AcceptDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AcceptDefault"]);
	};

	public function ConnectAccepted(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAccepted", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAccepted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAccepted"]);
	};

	public function Accepted() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Accepted"]);
	};

	public function ConnectDone(f:(r:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDone() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDone"]);
	};

	public function Done(r:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Done", r]);
	};

	public function DoneDefault(r:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoneDefault", r]);
	};

	public function ConnectExec(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectExec", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectExec() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExec"]);
	};

	public function Exec():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Exec"]);
	};

	public function ExecDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExecDefault"]);
	};

	public function ConnectFinished(f:(result:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFinished", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFinished() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFinished"]);
	};

	public function Finished(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Finished", result]);
	};

	public function IsSizeGripEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSizeGripEnabled"]);
	};

	public function ConnectOpen(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectOpen", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectOpen() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectOpen"]);
	};

	public function Open() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Open"]);
	};

	public function OpenDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "OpenDefault"]);
	};

	public function ConnectReject(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectReject", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectReject() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectReject"]);
	};

	public function Reject() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Reject"]);
	};

	public function RejectDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RejectDefault"]);
	};

	public function ConnectRejected(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRejected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRejected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRejected"]);
	};

	public function Rejected() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Rejected"]);
	};

	public function Result():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Result"]);
	};

	public function SetModal(modal:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModal", modal]);
	};

	public function SetResult(i:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetResult", i]);
	};

	public function SetSizeGripEnabled(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizeGripEnabled", vbo]);
	};

	public override function ConnectSetVisible(f:(visible:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetVisible"]);
	};

	public override function SetVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisible", visible]);
	};

	public override function SetVisibleDefault(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisibleDefault", visible]);
	};

	public function ConnectDestroyQDialog(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQDialog", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQDialog() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQDialog"]);
	};

	public function DestroyQDialog() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDialog"]);
	};

	public function DestroyQDialogDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDialogDefault"]);
	};
}

function NewQDialogFromPointer(ptr:String):QDialog {
	final r = new QDialog();
	r.initFrom(ptr, "widgets.QDialog");
	return r;
}

function NewQDialog(parent:QWidget_ITF, ff:Int):QDialog {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDialog", "", parent, ff]);
}

interface QDialogButtonBox_ITF extends QWidget_ITF {
	public function QDialogButtonBox_PTR():QDialogButtonBox;
}

class QDialogButtonBox extends QWidget implements QDialogButtonBox_ITF {
	public function new() {
		super();
	}

	public function QDialogButtonBox_PTR():QDialogButtonBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QDialogButtonBox_PTR"]);
	};

	public function ConnectAccepted(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAccepted", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAccepted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAccepted"]);
	};

	public function Accepted() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Accepted"]);
	};

	public function AddButton(button:QAbstractButton_ITF, role:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddButton", button, role]);
	};

	public function AddButton2(text:String, role:Int):QPushButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddButton2", text, role]);
	};

	public function AddButton3(button:Int):QPushButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddButton3", button]);
	};

	public function Button(which:Int):QPushButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Button", which]);
	};

	public function ButtonRole(button:QAbstractButton_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ButtonRole", button]);
	};

	public function Buttons():Array<QAbstractButton> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Buttons"]);
	};

	public function CenterButtons():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CenterButtons"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ConnectClicked(f:(button:QAbstractButton) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClicked"]);
	};

	public function Clicked(button:QAbstractButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clicked", button]);
	};

	public function ConnectHelpRequested(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHelpRequested", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHelpRequested() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHelpRequested"]);
	};

	public function HelpRequested() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HelpRequested"]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function ConnectRejected(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRejected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRejected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRejected"]);
	};

	public function Rejected() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Rejected"]);
	};

	public function RemoveButton(button:QAbstractButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveButton", button]);
	};

	public function SetCenterButtons(center:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCenterButtons", center]);
	};

	public function SetOrientation(orientation:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientation", orientation]);
	};

	public function SetStandardButtons(buttons:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStandardButtons", buttons]);
	};

	public function StandardButton(button:QAbstractButton_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardButton", button]);
	};

	public function StandardButtons():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardButtons"]);
	};

	public function ConnectDestroyQDialogButtonBox(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQDialogButtonBox",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQDialogButtonBox() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQDialogButtonBox"]);
	};

	public function DestroyQDialogButtonBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDialogButtonBox"]);
	};

	public function DestroyQDialogButtonBoxDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDialogButtonBoxDefault"]);
	};
}

function NewQDialogButtonBoxFromPointer(ptr:String):QDialogButtonBox {
	final r = new QDialogButtonBox();
	r.initFrom(ptr, "widgets.QDialogButtonBox");
	return r;
}

function NewQDialogButtonBox(parent:QWidget_ITF):QDialogButtonBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDialogButtonBox", "", parent]);
}

function NewQDialogButtonBox2(orientation:Int, parent:QWidget_ITF):QDialogButtonBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDialogButtonBox2", "", orientation, parent]);
}

function NewQDialogButtonBox3(buttons:Int, parent:QWidget_ITF):QDialogButtonBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDialogButtonBox3", "", buttons, parent]);
}

function NewQDialogButtonBox4(buttons:Int, orientation:Int, parent:QWidget_ITF):QDialogButtonBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDialogButtonBox4", "", buttons, orientation, parent]);
}

interface QDirModel_ITF extends QAbstractItemModel_ITF {
	public function QDirModel_PTR():QDirModel;
}

class QDirModel extends QAbstractItemModel implements QDirModel_ITF {
	public function new() {
		super();
	}

	public function QDirModel_PTR():QDirModel {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QDirModel_PTR"]);
	};

	public override function ConnectColumnCount(f:(parent:QModelIndex) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectColumnCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectColumnCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColumnCount"]);
	};

	public override function ColumnCount(parent:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCount", parent]);
	};

	public function ColumnCountDefault(parent:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCountDefault", parent]);
	};

	public override function ConnectData(f:(index:QModelIndex, role:Int) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectData", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectData"]);
	};

	public override function Data(index:QModelIndex_ITF, role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Data", index, role]);
	};

	public function DataDefault(index:QModelIndex_ITF, role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DataDefault", index, role]);
	};

	public override function DropMimeDataDefault(data:QMimeData_ITF, action:Int, row:Int, column:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"DropMimeDataDefault",
			data,
			action,
			row,
			column,
			parent
		]);
	};

	public function FileIcon(index:QModelIndex_ITF):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FileIcon", index]);
	};

	public function FileInfo(index:QModelIndex_ITF):QFileInfo {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FileInfo", index]);
	};

	public function FileName(index:QModelIndex_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FileName", index]);
	};

	public function FilePath(index:QModelIndex_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FilePath", index]);
	};

	public function Filter():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Filter"]);
	};

	public override function FlagsDefault(index:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FlagsDefault", index]);
	};

	public override function HasChildrenDefault(parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasChildrenDefault", parent]);
	};

	public override function HeaderDataDefault(section:Int, orientation:Int, role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HeaderDataDefault", section, orientation, role]);
	};

	public function IconProvider():QFileIconProvider {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconProvider"]);
	};

	public override function ConnectIndex(f:(row:Int, column:Int, parent:QModelIndex) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndex", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndex"]);
	};

	public override function Index(row:Int, column:Int, parent:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Index", row, column, parent]);
	};

	public function IndexDefault(row:Int, column:Int, parent:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexDefault", row, column, parent]);
	};

	public function Index2(path:String, column:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Index2", path, column]);
	};

	public function IsDir(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsDir", index]);
	};

	public function IsReadOnly():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsReadOnly"]);
	};

	public function LazyChildCount():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LazyChildCount"]);
	};

	public override function MimeDataDefault(indexes:Array<QModelIndex>):QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeDataDefault", indexes]);
	};

	public override function MimeTypesDefault():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeTypesDefault"]);
	};

	public function Mkdir(parent:QModelIndex_ITF, name:String):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Mkdir", parent, name]);
	};

	public function NameFilters():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NameFilters"]);
	};

	public override function ConnectParent_QAbstractItemModel(f:(child:QModelIndex) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectParent", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectParent_QAbstractItemModel() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectParent"]);
	};

	public override function Parent_QAbstractItemModel(child:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Parent", child]);
	};

	public function ParentDefault_QAbstractItemModel(child:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentDefault", child]);
	};

	public function ConnectRefresh(f:(parent:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRefresh", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRefresh() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRefresh"]);
	};

	public function Refresh(parent:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Refresh", parent]);
	};

	public function RefreshDefault(parent:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RefreshDefault", parent]);
	};

	public function Remove(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Remove", index]);
	};

	public function ResolveSymlinks():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ResolveSymlinks"]);
	};

	public function Rmdir(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Rmdir", index]);
	};

	public override function ConnectRowCount(f:(parent:QModelIndex) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRowCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectRowCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowCount"]);
	};

	public override function RowCount(parent:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowCount", parent]);
	};

	public function RowCountDefault(parent:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowCountDefault", parent]);
	};

	public override function SetDataDefault(index:QModelIndex_ITF, value:QVariant_ITF, role:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetDataDefault", index, value, role]);
	};

	public function SetFilter(filters:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFilter", filters]);
	};

	public function SetIconProvider(provider:QFileIconProvider_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconProvider", provider]);
	};

	public function SetLazyChildCount(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLazyChildCount", enable]);
	};

	public function SetNameFilters(filters:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNameFilters", filters]);
	};

	public function SetReadOnly(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetReadOnly", enable]);
	};

	public function SetResolveSymlinks(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetResolveSymlinks", enable]);
	};

	public function SetSorting(sort:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSorting", sort]);
	};

	public override function SortDefault(column:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortDefault", column, order]);
	};

	public function Sorting():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Sorting"]);
	};

	public override function SupportedDropActionsDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedDropActionsDefault"]);
	};

	public function ConnectDestroyQDirModel(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQDirModel", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQDirModel() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQDirModel"]);
	};

	public function DestroyQDirModel() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDirModel"]);
	};

	public function DestroyQDirModelDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDirModelDefault"]);
	};

	public override function BuddyDefault(index:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BuddyDefault", index]);
	};

	public override function CanDropMimeDataDefault(data:QMimeData_ITF, action:Int, row:Int, column:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"CanDropMimeDataDefault",
			data,
			action,
			row,
			column,
			parent
		]);
	};

	public override function CanFetchMoreDefault(parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanFetchMoreDefault", parent]);
	};

	public override function FetchMoreDefault(parent:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FetchMoreDefault", parent]);
	};

	public override function InsertColumnsDefault(column:Int, count:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertColumnsDefault", column, count, parent]);
	};

	public override function InsertRowsDefault(row:Int, count:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertRowsDefault", row, count, parent]);
	};

	public override function ItemDataDefault(index:QModelIndex_ITF):Map<Int, QVariant> {
		final _tmpValue:Map<String, Dynamic> = Internal.callLocalFunction(["", Pointer(), ___className, "ItemDataDefault", index]);
		return [for (k => v in _tmpValue) Std.parseInt(k) => v];
	};

	public override function MatchDefault(start:QModelIndex_ITF, role:Int, value:QVariant_ITF, hits:Int, flags:Int):Array<QModelIndex> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MatchDefault", start, role, value, hits, flags]);
	};

	public override function MoveColumnsDefault(sourceParent:QModelIndex_ITF, sourceColumn:Int, count:Int, destinationParent:QModelIndex_ITF,
			destinationChild:Int):Bool {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"MoveColumnsDefault",
			sourceParent,
			sourceColumn,
			count,
			destinationParent,
			destinationChild
		]);
	};

	public override function MoveRowsDefault(sourceParent:QModelIndex_ITF, sourceRow:Int, count:Int, destinationParent:QModelIndex_ITF,
			destinationChild:Int):Bool {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"MoveRowsDefault",
			sourceParent,
			sourceRow,
			count,
			destinationParent,
			destinationChild
		]);
	};

	public override function RemoveColumnsDefault(column:Int, count:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RemoveColumnsDefault", column, count, parent]);
	};

	public override function RemoveRowsDefault(row:Int, count:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RemoveRowsDefault", row, count, parent]);
	};

	public override function ResetInternalDataDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetInternalDataDefault"]);
	};

	public override function RevertDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RevertDefault"]);
	};

	public override function RoleNamesDefault():Map<Int, QByteArray> {
		final _tmpValue:Map<String, Dynamic> = Internal.callLocalFunction(["", Pointer(), ___className, "RoleNamesDefault"]);
		return [for (k => v in _tmpValue) Std.parseInt(k) => v];
	};

	public override function SetHeaderDataDefault(section:Int, orientation:Int, value:QVariant_ITF, role:Int):Bool {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SetHeaderDataDefault",
			section,
			orientation,
			value,
			role
		]);
	};

	public override function SetItemDataDefault(index:QModelIndex_ITF, roles:Map<Int, QVariant>):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetItemDataDefault", index, roles]);
	};

	public override function SiblingDefault(row:Int, column:Int, index:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SiblingDefault", row, column, index]);
	};

	public override function SpanDefault(index:QModelIndex_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SpanDefault", index]);
	};

	public override function SubmitDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubmitDefault"]);
	};

	public override function SupportedDragActionsDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedDragActionsDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQDirModelFromPointer(ptr:String):QDirModel {
	final r = new QDirModel();
	r.initFrom(ptr, "widgets.QDirModel");
	return r;
}

function NewQDirModel(nameFilters:Array<String>, filters:Int, sort:Int, parent:QObject_ITF):QDirModel {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDirModel", "", nameFilters, filters, sort, parent]);
}

function NewQDirModel2(parent:QObject_ITF):QDirModel {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDirModel2", "", parent]);
}

interface QDockWidget_ITF extends QWidget_ITF {
	public function QDockWidget_PTR():QDockWidget;
}

class QDockWidget extends QWidget implements QDockWidget_ITF {
	public function new() {
		super();
	}

	public function QDockWidget_PTR():QDockWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QDockWidget_PTR"]);
	};

	public function AllowedAreas():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AllowedAreas"]);
	};

	public function ConnectAllowedAreasChanged(f:(allowedAreas:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectAllowedAreasChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectAllowedAreasChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAllowedAreasChanged"]);
	};

	public function AllowedAreasChanged(allowedAreas:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AllowedAreasChanged", allowedAreas]);
	};

	public function ConnectDockLocationChanged(f:(area:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDockLocationChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDockLocationChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDockLocationChanged"]);
	};

	public function DockLocationChanged(area:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DockLocationChanged", area]);
	};

	public function Features():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Features"]);
	};

	public function ConnectFeaturesChanged(f:(features:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFeaturesChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFeaturesChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFeaturesChanged"]);
	};

	public function FeaturesChanged(features:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FeaturesChanged", features]);
	};

	public function InitStyleOption(option:QStyleOptionDockWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function IsAreaAllowed(area:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsAreaAllowed", area]);
	};

	public function IsFloating():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsFloating"]);
	};

	public function SetAllowedAreas(areas:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAllowedAreas", areas]);
	};

	public function SetFeatures(features:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFeatures", features]);
	};

	public function SetFloating(floating:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFloating", floating]);
	};

	public function SetTitleBarWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTitleBarWidget", widget]);
	};

	public function SetWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWidget", widget]);
	};

	public function TitleBarWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TitleBarWidget"]);
	};

	public function ToggleViewAction():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToggleViewAction"]);
	};

	public function ConnectTopLevelChanged(f:(topLevel:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTopLevelChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTopLevelChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTopLevelChanged"]);
	};

	public function TopLevelChanged(topLevel:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TopLevelChanged", topLevel]);
	};

	public function ConnectVisibilityChanged(f:(visible:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVisibilityChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectVisibilityChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisibilityChanged"]);
	};

	public function VisibilityChanged(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "VisibilityChanged", visible]);
	};

	public function Widget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget"]);
	};

	public function ConnectDestroyQDockWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQDockWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQDockWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQDockWidget"]);
	};

	public function DestroyQDockWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDockWidget"]);
	};

	public function DestroyQDockWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDockWidgetDefault"]);
	};
}

function NewQDockWidgetFromPointer(ptr:String):QDockWidget {
	final r = new QDockWidget();
	r.initFrom(ptr, "widgets.QDockWidget");
	return r;
}

function NewQDockWidget(title:String, parent:QWidget_ITF, flags:Int):QDockWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDockWidget", "", title, parent, flags]);
}

function NewQDockWidget2(parent:QWidget_ITF, flags:Int):QDockWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDockWidget2", "", parent, flags]);
}

interface QDoubleSpinBox_ITF extends QAbstractSpinBox_ITF {
	public function QDoubleSpinBox_PTR():QDoubleSpinBox;
}

class QDoubleSpinBox extends QAbstractSpinBox implements QDoubleSpinBox_ITF {
	public function new() {
		super();
	}

	public function QDoubleSpinBox_PTR():QDoubleSpinBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QDoubleSpinBox_PTR"]);
	};

	public function CleanText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CleanText"]);
	};

	public function Decimals():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Decimals"]);
	};

	public function Maximum():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Maximum"]);
	};

	public function Minimum():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Minimum"]);
	};

	public function Prefix():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Prefix"]);
	};

	public function SetDecimals(prec:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDecimals", prec]);
	};

	public function SetMaximum(max:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximum", max]);
	};

	public function SetMinimum(mi:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimum", mi]);
	};

	public function SetPrefix(prefix:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPrefix", prefix]);
	};

	public function SetRange(minimum:Float, maximum:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRange", minimum, maximum]);
	};

	public function SetSingleStep(val:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSingleStep", val]);
	};

	public function SetStepType(stepType:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStepType", stepType]);
	};

	public function SetSuffix(suffix:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSuffix", suffix]);
	};

	public function ConnectSetValue(f:(val:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetValue", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetValue() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetValue"]);
	};

	public function SetValue(val:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValue", val]);
	};

	public function SetValueDefault(val:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValueDefault", val]);
	};

	public function SingleStep():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SingleStep"]);
	};

	public function StepType():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StepType"]);
	};

	public function Suffix():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Suffix"]);
	};

	public function ConnectTextFromValue(f:(value:Float) -> String) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTextFromValue", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTextFromValue() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTextFromValue"]);
	};

	public function TextFromValue(value:Float):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextFromValue", value]);
	};

	public function TextFromValueDefault(value:Float):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextFromValueDefault", value]);
	};

	public function Value():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Value"]);
	};

	public function ConnectValueChanged(f:(d:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValueChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValueChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValueChanged"]);
	};

	public function ValueChanged(d:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ValueChanged", d]);
	};

	public function ConnectValueChanged2(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValueChanged2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValueChanged2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValueChanged2"]);
	};

	public function ValueChanged2(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ValueChanged2", text]);
	};

	public function ConnectValueFromText(f:(text:String) -> Float) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValueFromText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValueFromText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValueFromText"]);
	};

	public function ValueFromText(text:String):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValueFromText", text]);
	};

	public function ValueFromTextDefault(text:String):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValueFromTextDefault", text]);
	};

	public function ConnectDestroyQDoubleSpinBox(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQDoubleSpinBox",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQDoubleSpinBox() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQDoubleSpinBox"]);
	};

	public function DestroyQDoubleSpinBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDoubleSpinBox"]);
	};

	public function DestroyQDoubleSpinBoxDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQDoubleSpinBoxDefault"]);
	};
}

function NewQDoubleSpinBoxFromPointer(ptr:String):QDoubleSpinBox {
	final r = new QDoubleSpinBox();
	r.initFrom(ptr, "widgets.QDoubleSpinBox");
	return r;
}

function NewQDoubleSpinBox(parent:QWidget_ITF):QDoubleSpinBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQDoubleSpinBox", "", parent]);
}

interface QErrorMessage_ITF extends QDialog_ITF {
	public function QErrorMessage_PTR():QErrorMessage;
}

class QErrorMessage extends QDialog implements QErrorMessage_ITF {
	public function new() {
		super();
	}

	public function QErrorMessage_PTR():QErrorMessage {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QErrorMessage_PTR"]);
	};

	public override function ConnectDone(f:(a:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDone() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDone"]);
	};

	public override function Done(a:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Done", a]);
	};

	public override function DoneDefault(a:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoneDefault", a]);
	};

	public function QtHandler():QErrorMessage {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QtHandler"]);
	};

	public function ConnectShowMessage(f:(message:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowMessage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowMessage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowMessage"]);
	};

	public function ShowMessage(message:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMessage", message]);
	};

	public function ShowMessageDefault(message:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMessageDefault", message]);
	};

	public function ConnectShowMessage2(f:(message:String, ty:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowMessage2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowMessage2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowMessage2"]);
	};

	public function ShowMessage2(message:String, ty:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMessage2", message, ty]);
	};

	public function ShowMessage2Default(message:String, ty:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMessage2Default", message, ty]);
	};

	public function ConnectDestroyQErrorMessage(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQErrorMessage",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQErrorMessage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQErrorMessage"]);
	};

	public function DestroyQErrorMessage() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQErrorMessage"]);
	};

	public function DestroyQErrorMessageDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQErrorMessageDefault"]);
	};
}

function NewQErrorMessageFromPointer(ptr:String):QErrorMessage {
	final r = new QErrorMessage();
	r.initFrom(ptr, "widgets.QErrorMessage");
	return r;
}

function NewQErrorMessage(parent:QWidget_ITF):QErrorMessage {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQErrorMessage", "", parent]);
}

function QErrorMessage_QtHandler():QErrorMessage {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QErrorMessage_QtHandler", ""]);
}

interface QFileDialog_ITF extends QDialog_ITF {
	public function QFileDialog_PTR():QFileDialog;
}

class QFileDialog extends QDialog implements QFileDialog_ITF {
	public function new() {
		super();
	}

	public function QFileDialog_PTR():QFileDialog {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QFileDialog_PTR"]);
	};

	public override function ConnectAccept(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAccept", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectAccept() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAccept"]);
	};

	public override function Accept() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Accept"]);
	};

	public override function AcceptDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AcceptDefault"]);
	};

	public function AcceptMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AcceptMode"]);
	};

	public function ConfirmOverwrite():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ConfirmOverwrite"]);
	};

	public function ConnectCurrentChanged(f:(path:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public function CurrentChanged(path:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", path]);
	};

	public function ConnectCurrentUrlChanged(f:(url:QUrl) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentUrlChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCurrentUrlChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentUrlChanged"]);
	};

	public function CurrentUrlChanged(url:QUrl_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentUrlChanged", url]);
	};

	public function DefaultSuffix():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultSuffix"]);
	};

	public function Directory():QDir {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Directory"]);
	};

	public function ConnectDirectoryEntered(f:(directory:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDirectoryEntered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDirectoryEntered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDirectoryEntered"]);
	};

	public function DirectoryEntered(directory:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DirectoryEntered", directory]);
	};

	public function DirectoryUrl():QUrl {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DirectoryUrl"]);
	};

	public function ConnectDirectoryUrlEntered(f:(directory:QUrl) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDirectoryUrlEntered",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDirectoryUrlEntered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDirectoryUrlEntered"]);
	};

	public function DirectoryUrlEntered(directory:QUrl_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DirectoryUrlEntered", directory]);
	};

	public override function ConnectDone(f:(result:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDone() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDone"]);
	};

	public override function Done(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Done", result]);
	};

	public override function DoneDefault(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoneDefault", result]);
	};

	public function FileMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FileMode"]);
	};

	public function ConnectFileSelected(f:(file:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFileSelected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFileSelected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFileSelected"]);
	};

	public function FileSelected(file:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FileSelected", file]);
	};

	public function ConnectFilesSelected(f:(selected:Array<String>) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFilesSelected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFilesSelected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFilesSelected"]);
	};

	public function FilesSelected(selected:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FilesSelected", selected]);
	};

	public function Filter():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Filter"]);
	};

	public function ConnectFilterSelected(f:(filter:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFilterSelected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFilterSelected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFilterSelected"]);
	};

	public function FilterSelected(filter:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FilterSelected", filter]);
	};

	public function GetExistingDirectory(parent:QWidget_ITF, caption:String, dir:String, options:Int):String {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"GetExistingDirectory",
			parent,
			caption,
			dir,
			options
		]);
	};

	public function GetExistingDirectoryUrl(parent:QWidget_ITF, caption:String, dir:QUrl_ITF, options:Int, supportedSchemes:Array<String>):QUrl {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"GetExistingDirectoryUrl",
			parent,
			caption,
			dir,
			options,
			supportedSchemes
		]);
	};

	public function GetOpenFileName(parent:QWidget_ITF, caption:String, dir:String, filter:String, selectedFilter:String, options:Int):String {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetOpenFileName", parent, caption, dir, filter, selectedFilter, options
		]);
	};

	public function GetOpenFileNames(parent:QWidget_ITF, caption:String, dir:String, filter:String, selectedFilter:String, options:Int):Array<String> {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetOpenFileNames", parent, caption, dir, filter, selectedFilter, options
		]);
	};

	public function GetOpenFileUrl(parent:QWidget_ITF, caption:String, dir:QUrl_ITF, filter:String, selectedFilter:String, options:Int,
			supportedSchemes:Array<String>):QUrl {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetOpenFileUrl", parent, caption, dir, filter, selectedFilter, options, supportedSchemes
		]);
	};

	public function GetOpenFileUrls(parent:QWidget_ITF, caption:String, dir:QUrl_ITF, filter:String, selectedFilter:String, options:Int,
			supportedSchemes:Array<String>):Array<QUrl> {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetOpenFileUrls", parent, caption, dir, filter, selectedFilter, options, supportedSchemes
		]);
	};

	public function GetSaveFileName(parent:QWidget_ITF, caption:String, dir:String, filter:String, selectedFilter:String, options:Int):String {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetSaveFileName", parent, caption, dir, filter, selectedFilter, options
		]);
	};

	public function GetSaveFileUrl(parent:QWidget_ITF, caption:String, dir:QUrl_ITF, filter:String, selectedFilter:String, options:Int,
			supportedSchemes:Array<String>):QUrl {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetSaveFileUrl", parent, caption, dir, filter, selectedFilter, options, supportedSchemes
		]);
	};

	public function History():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "History"]);
	};

	public function IconProvider():QFileIconProvider {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconProvider"]);
	};

	public function IsNameFilterDetailsVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsNameFilterDetailsVisible"]);
	};

	public function IsReadOnly():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsReadOnly"]);
	};

	public function ItemDelegate():QAbstractItemDelegate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemDelegate"]);
	};

	public function LabelText(label:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LabelText", label]);
	};

	public function MimeTypeFilters():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeTypeFilters"]);
	};

	public function NameFilters():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NameFilters"]);
	};

	public function Open_QFileDialog(receiver:QObject_ITF, member:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Open", receiver, member]);
	};

	public function Options():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Options"]);
	};

	public function ProxyModel():QAbstractProxyModel {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ProxyModel"]);
	};

	public function ResolveSymlinks():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ResolveSymlinks"]);
	};

	public function RestoreState(state:QByteArray_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RestoreState", state]);
	};

	public function SaveState():QByteArray {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SaveState"]);
	};

	public function SelectFile(filename:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectFile", filename]);
	};

	public function SelectMimeTypeFilter(filter:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectMimeTypeFilter", filter]);
	};

	public function SelectNameFilter(filter:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectNameFilter", filter]);
	};

	public function SelectUrl(url:QUrl_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectUrl", url]);
	};

	public function SelectedFiles():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedFiles"]);
	};

	public function SelectedMimeTypeFilter():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedMimeTypeFilter"]);
	};

	public function SelectedNameFilter():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedNameFilter"]);
	};

	public function SelectedUrls():Array<QUrl> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedUrls"]);
	};

	public function SetAcceptMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAcceptMode", mode]);
	};

	public function SetConfirmOverwrite(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetConfirmOverwrite", enabled]);
	};

	public function SetDefaultSuffix(suffix:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultSuffix", suffix]);
	};

	public function SetDirectory(directory:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDirectory", directory]);
	};

	public function SetDirectory2(directory:QDir_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDirectory2", directory]);
	};

	public function SetDirectoryUrl(directory:QUrl_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDirectoryUrl", directory]);
	};

	public function SetFileMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFileMode", mode]);
	};

	public function SetFilter(filters:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFilter", filters]);
	};

	public function SetHistory(paths:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHistory", paths]);
	};

	public function SetIconProvider(provider:QFileIconProvider_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconProvider", provider]);
	};

	public function SetItemDelegate(delegate:QAbstractItemDelegate_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemDelegate", delegate]);
	};

	public function SetLabelText(label:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLabelText", label, text]);
	};

	public function SetMimeTypeFilters(filters:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMimeTypeFilters", filters]);
	};

	public function SetNameFilter(filter:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNameFilter", filter]);
	};

	public function SetNameFilterDetailsVisible(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNameFilterDetailsVisible", enabled]);
	};

	public function SetNameFilters(filters:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNameFilters", filters]);
	};

	public function SetOption(option:Int, on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOption", option, on]);
	};

	public function SetOptions(options:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOptions", options]);
	};

	public function SetProxyModel(proxyModel:QAbstractProxyModel_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetProxyModel", proxyModel]);
	};

	public function SetReadOnly(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetReadOnly", enabled]);
	};

	public function SetResolveSymlinks(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetResolveSymlinks", enabled]);
	};

	public function SetSidebarUrls(urls:Array<QUrl>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSidebarUrls", urls]);
	};

	public function SetSupportedSchemes(schemes:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSupportedSchemes", schemes]);
	};

	public function SetViewMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetViewMode", mode]);
	};

	public function SidebarUrls():Array<QUrl> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SidebarUrls"]);
	};

	public function SupportedSchemes():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedSchemes"]);
	};

	public function TestOption(option:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TestOption", option]);
	};

	public function ConnectUrlSelected(f:(url:QUrl) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUrlSelected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUrlSelected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUrlSelected"]);
	};

	public function UrlSelected(url:QUrl_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UrlSelected", url]);
	};

	public function ConnectUrlsSelected(f:(urls:Array<QUrl>) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUrlsSelected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUrlsSelected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUrlsSelected"]);
	};

	public function UrlsSelected(urls:Array<QUrl>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UrlsSelected", urls]);
	};

	public function ViewMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewMode"]);
	};

	public function ConnectDestroyQFileDialog(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQFileDialog",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQFileDialog() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQFileDialog"]);
	};

	public function DestroyQFileDialog() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFileDialog"]);
	};

	public function DestroyQFileDialogDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFileDialogDefault"]);
	};
}

function NewQFileDialogFromPointer(ptr:String):QFileDialog {
	final r = new QFileDialog();
	r.initFrom(ptr, "widgets.QFileDialog");
	return r;
}

function NewQFileDialog(parent:QWidget_ITF, flags:Int):QFileDialog {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQFileDialog", "", parent, flags]);
}

function NewQFileDialog2(parent:QWidget_ITF, caption:String, directory:String, filter:String):QFileDialog {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQFileDialog2", "", parent, caption, directory, filter]);
}

function QFileDialog_GetExistingDirectory(parent:QWidget_ITF, caption:String, dir:String, options:Int):String {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QFileDialog_GetExistingDirectory",
		"",
		parent,
		caption,
		dir,
		options
	]);
}

function QFileDialog_GetExistingDirectoryUrl(parent:QWidget_ITF, caption:String, dir:QUrl_ITF, options:Int, supportedSchemes:Array<String>):QUrl {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QFileDialog_GetExistingDirectoryUrl",
		"",
		parent,
		caption,
		dir,
		options,
		supportedSchemes
	]);
}

function QFileDialog_GetOpenFileName(parent:QWidget_ITF, caption:String, dir:String, filter:String, selectedFilter:String, options:Int):String {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QFileDialog_GetOpenFileName", "", parent, caption, dir, filter, selectedFilter, options
	]);
}

function QFileDialog_GetOpenFileNames(parent:QWidget_ITF, caption:String, dir:String, filter:String, selectedFilter:String, options:Int):Array<String> {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QFileDialog_GetOpenFileNames", "", parent, caption, dir, filter, selectedFilter, options
	]);
}

function QFileDialog_GetOpenFileUrl(parent:QWidget_ITF, caption:String, dir:QUrl_ITF, filter:String, selectedFilter:String, options:Int,
		supportedSchemes:Array<String>):QUrl {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QFileDialog_GetOpenFileUrl", "", parent, caption, dir, filter, selectedFilter, options, supportedSchemes
	]);
}

function QFileDialog_GetOpenFileUrls(parent:QWidget_ITF, caption:String, dir:QUrl_ITF, filter:String, selectedFilter:String, options:Int,
		supportedSchemes:Array<String>):Array<QUrl> {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QFileDialog_GetOpenFileUrls", "", parent, caption, dir, filter, selectedFilter, options, supportedSchemes
	]);
}

function QFileDialog_GetSaveFileName(parent:QWidget_ITF, caption:String, dir:String, filter:String, selectedFilter:String, options:Int):String {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QFileDialog_GetSaveFileName", "", parent, caption, dir, filter, selectedFilter, options
	]);
}

function QFileDialog_GetSaveFileUrl(parent:QWidget_ITF, caption:String, dir:QUrl_ITF, filter:String, selectedFilter:String, options:Int,
		supportedSchemes:Array<String>):QUrl {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QFileDialog_GetSaveFileUrl", "", parent, caption, dir, filter, selectedFilter, options, supportedSchemes
	]);
}

interface QFileIconProvider_ITF {
	public function QFileIconProvider_PTR():QFileIconProvider;
}

class QFileIconProvider extends Internal implements QFileIconProvider_ITF {
	public function new() {
		super();
	}

	public function QFileIconProvider_PTR():QFileIconProvider {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QFileIconProvider_PTR"]);
	};

	public function ConnectIcon(f:(ty:Int) -> QIcon) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIcon", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIcon() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIcon"]);
	};

	public function Icon(ty:Int):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon", ty]);
	};

	public function IconDefault(ty:Int):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconDefault", ty]);
	};

	public function ConnectIcon2(f:(info:QFileInfo) -> QIcon) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIcon2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIcon2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIcon2"]);
	};

	public function Icon2(info:QFileInfo_ITF):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon2", info]);
	};

	public function Icon2Default(info:QFileInfo_ITF):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon2Default", info]);
	};

	public function Options():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Options"]);
	};

	public function SetOptions(options:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOptions", options]);
	};

	public function ConnectType(f:(info:QFileInfo) -> String) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectType", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectType() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectType"]);
	};

	public function Type(info:QFileInfo_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Type", info]);
	};

	public function TypeDefault(info:QFileInfo_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TypeDefault", info]);
	};

	public function ConnectDestroyQFileIconProvider(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQFileIconProvider",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQFileIconProvider() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQFileIconProvider"]);
	};

	public function DestroyQFileIconProvider() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFileIconProvider"]);
	};

	public function DestroyQFileIconProviderDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFileIconProviderDefault"]);
	};
}

function NewQFileIconProviderFromPointer(ptr:String):QFileIconProvider {
	final r = new QFileIconProvider();
	r.initFrom(ptr, "widgets.QFileIconProvider");
	return r;
}

function NewQFileIconProvider():QFileIconProvider {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQFileIconProvider", ""]);
}

interface QFileSystemModel_ITF extends QAbstractItemModel_ITF {
	public function QFileSystemModel_PTR():QFileSystemModel;
}

class QFileSystemModel extends QAbstractItemModel implements QFileSystemModel_ITF {
	public function new() {
		super();
	}

	public function QFileSystemModel_PTR():QFileSystemModel {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QFileSystemModel_PTR"]);
	};

	public override function CanFetchMoreDefault(parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanFetchMoreDefault", parent]);
	};

	public override function ConnectColumnCount(f:(parent:QModelIndex) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectColumnCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectColumnCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColumnCount"]);
	};

	public override function ColumnCount(parent:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCount", parent]);
	};

	public function ColumnCountDefault(parent:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCountDefault", parent]);
	};

	public override function ConnectData(f:(index:QModelIndex, role:Int) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectData", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectData"]);
	};

	public override function Data(index:QModelIndex_ITF, role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Data", index, role]);
	};

	public function DataDefault(index:QModelIndex_ITF, role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DataDefault", index, role]);
	};

	public function ConnectDirectoryLoaded(f:(path:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDirectoryLoaded", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDirectoryLoaded() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDirectoryLoaded"]);
	};

	public function DirectoryLoaded(path:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DirectoryLoaded", path]);
	};

	public override function DropMimeDataDefault(data:QMimeData_ITF, action:Int, row:Int, column:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"DropMimeDataDefault",
			data,
			action,
			row,
			column,
			parent
		]);
	};

	public override function EventDefault(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", event]);
	};

	public override function FetchMoreDefault(parent:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FetchMoreDefault", parent]);
	};

	public function FileIcon(index:QModelIndex_ITF):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FileIcon", index]);
	};

	public function FileInfo(index:QModelIndex_ITF):QFileInfo {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FileInfo", index]);
	};

	public function FileName(index:QModelIndex_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FileName", index]);
	};

	public function FilePath(index:QModelIndex_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FilePath", index]);
	};

	public function ConnectFileRenamed(f:(path:String, oldName:String, newName:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFileRenamed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFileRenamed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFileRenamed"]);
	};

	public function FileRenamed(path:String, oldName:String, newName:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FileRenamed", path, oldName, newName]);
	};

	public function Filter():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Filter"]);
	};

	public override function FlagsDefault(index:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FlagsDefault", index]);
	};

	public override function HasChildrenDefault(parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasChildrenDefault", parent]);
	};

	public override function HeaderDataDefault(section:Int, orientation:Int, role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HeaderDataDefault", section, orientation, role]);
	};

	public function IconProvider():QFileIconProvider {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconProvider"]);
	};

	public override function ConnectIndex(f:(row:Int, column:Int, parent:QModelIndex) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndex", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndex"]);
	};

	public override function Index(row:Int, column:Int, parent:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Index", row, column, parent]);
	};

	public function IndexDefault(row:Int, column:Int, parent:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexDefault", row, column, parent]);
	};

	public function Index2(path:String, column:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Index2", path, column]);
	};

	public function IsDir(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsDir", index]);
	};

	public function IsReadOnly():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsReadOnly"]);
	};

	public function LastModified(index:QModelIndex_ITF):QDateTime {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastModified", index]);
	};

	public override function MimeDataDefault(indexes:Array<QModelIndex>):QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeDataDefault", indexes]);
	};

	public override function MimeTypesDefault():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeTypesDefault"]);
	};

	public function Mkdir(parent:QModelIndex_ITF, name:String):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Mkdir", parent, name]);
	};

	public function MyComputer(role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MyComputer", role]);
	};

	public function NameFilterDisables():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NameFilterDisables"]);
	};

	public function NameFilters():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NameFilters"]);
	};

	public override function ConnectParent_QAbstractItemModel(f:(index:QModelIndex) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectParent", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectParent_QAbstractItemModel() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectParent"]);
	};

	public override function Parent_QAbstractItemModel(index:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Parent", index]);
	};

	public function ParentDefault_QAbstractItemModel(index:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentDefault", index]);
	};

	public function Remove(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Remove", index]);
	};

	public function ResolveSymlinks():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ResolveSymlinks"]);
	};

	public function Rmdir(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Rmdir", index]);
	};

	public function RootDirectory():QDir {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RootDirectory"]);
	};

	public function RootPath():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RootPath"]);
	};

	public function ConnectRootPathChanged(f:(newPath:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRootPathChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRootPathChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRootPathChanged"]);
	};

	public function RootPathChanged(newPath:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RootPathChanged", newPath]);
	};

	public override function ConnectRowCount(f:(parent:QModelIndex) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRowCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectRowCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowCount"]);
	};

	public override function RowCount(parent:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowCount", parent]);
	};

	public function RowCountDefault(parent:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowCountDefault", parent]);
	};

	public override function SetDataDefault(idx:QModelIndex_ITF, value:QVariant_ITF, role:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetDataDefault", idx, value, role]);
	};

	public function SetFilter(filters:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFilter", filters]);
	};

	public function SetIconProvider(provider:QFileIconProvider_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconProvider", provider]);
	};

	public function SetNameFilterDisables(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNameFilterDisables", enable]);
	};

	public function SetNameFilters(filters:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNameFilters", filters]);
	};

	public function SetReadOnly(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetReadOnly", enable]);
	};

	public function SetResolveSymlinks(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetResolveSymlinks", enable]);
	};

	public function SetRootPath(newPath:String):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetRootPath", newPath]);
	};

	public override function SiblingDefault(row:Int, column:Int, idx:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SiblingDefault", row, column, idx]);
	};

	public function Size(index:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Size", index]);
	};

	public override function SortDefault(column:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortDefault", column, order]);
	};

	public override function SupportedDropActionsDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedDropActionsDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};

	public function Type(index:QModelIndex_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Type", index]);
	};

	public function ConnectDestroyQFileSystemModel(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQFileSystemModel",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQFileSystemModel() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQFileSystemModel"]);
	};

	public function DestroyQFileSystemModel() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFileSystemModel"]);
	};

	public function DestroyQFileSystemModelDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFileSystemModelDefault"]);
	};

	public override function BuddyDefault(index:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BuddyDefault", index]);
	};

	public override function CanDropMimeDataDefault(data:QMimeData_ITF, action:Int, row:Int, column:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"CanDropMimeDataDefault",
			data,
			action,
			row,
			column,
			parent
		]);
	};

	public override function InsertColumnsDefault(column:Int, count:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertColumnsDefault", column, count, parent]);
	};

	public override function InsertRowsDefault(row:Int, count:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertRowsDefault", row, count, parent]);
	};

	public override function ItemDataDefault(index:QModelIndex_ITF):Map<Int, QVariant> {
		final _tmpValue:Map<String, Dynamic> = Internal.callLocalFunction(["", Pointer(), ___className, "ItemDataDefault", index]);
		return [for (k => v in _tmpValue) Std.parseInt(k) => v];
	};

	public override function MatchDefault(start:QModelIndex_ITF, role:Int, value:QVariant_ITF, hits:Int, flags:Int):Array<QModelIndex> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MatchDefault", start, role, value, hits, flags]);
	};

	public override function MoveColumnsDefault(sourceParent:QModelIndex_ITF, sourceColumn:Int, count:Int, destinationParent:QModelIndex_ITF,
			destinationChild:Int):Bool {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"MoveColumnsDefault",
			sourceParent,
			sourceColumn,
			count,
			destinationParent,
			destinationChild
		]);
	};

	public override function MoveRowsDefault(sourceParent:QModelIndex_ITF, sourceRow:Int, count:Int, destinationParent:QModelIndex_ITF,
			destinationChild:Int):Bool {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"MoveRowsDefault",
			sourceParent,
			sourceRow,
			count,
			destinationParent,
			destinationChild
		]);
	};

	public override function RemoveColumnsDefault(column:Int, count:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RemoveColumnsDefault", column, count, parent]);
	};

	public override function RemoveRowsDefault(row:Int, count:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RemoveRowsDefault", row, count, parent]);
	};

	public override function ResetInternalDataDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetInternalDataDefault"]);
	};

	public override function RevertDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RevertDefault"]);
	};

	public override function RoleNamesDefault():Map<Int, QByteArray> {
		final _tmpValue:Map<String, Dynamic> = Internal.callLocalFunction(["", Pointer(), ___className, "RoleNamesDefault"]);
		return [for (k => v in _tmpValue) Std.parseInt(k) => v];
	};

	public override function SetHeaderDataDefault(section:Int, orientation:Int, value:QVariant_ITF, role:Int):Bool {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SetHeaderDataDefault",
			section,
			orientation,
			value,
			role
		]);
	};

	public override function SetItemDataDefault(index:QModelIndex_ITF, roles:Map<Int, QVariant>):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetItemDataDefault", index, roles]);
	};

	public override function SpanDefault(index:QModelIndex_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SpanDefault", index]);
	};

	public override function SubmitDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubmitDefault"]);
	};

	public override function SupportedDragActionsDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedDragActionsDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};
}

function NewQFileSystemModelFromPointer(ptr:String):QFileSystemModel {
	final r = new QFileSystemModel();
	r.initFrom(ptr, "widgets.QFileSystemModel");
	return r;
}

function NewQFileSystemModel(parent:QObject_ITF):QFileSystemModel {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQFileSystemModel", "", parent]);
}

interface QFocusFrame_ITF extends QWidget_ITF {
	public function QFocusFrame_PTR():QFocusFrame;
}

class QFocusFrame extends QWidget implements QFocusFrame_ITF {
	public function new() {
		super();
	}

	public function QFocusFrame_PTR():QFocusFrame {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QFocusFrame_PTR"]);
	};

	public function InitStyleOption(option:QStyleOption_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function SetWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWidget", widget]);
	};

	public function Widget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget"]);
	};

	public function ConnectDestroyQFocusFrame(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQFocusFrame",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQFocusFrame() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQFocusFrame"]);
	};

	public function DestroyQFocusFrame() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFocusFrame"]);
	};

	public function DestroyQFocusFrameDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFocusFrameDefault"]);
	};
}

function NewQFocusFrameFromPointer(ptr:String):QFocusFrame {
	final r = new QFocusFrame();
	r.initFrom(ptr, "widgets.QFocusFrame");
	return r;
}

function NewQFocusFrame(parent:QWidget_ITF):QFocusFrame {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQFocusFrame", "", parent]);
}

interface QFontComboBox_ITF extends QComboBox_ITF {
	public function QFontComboBox_PTR():QFontComboBox;
}

class QFontComboBox extends QComboBox implements QFontComboBox_ITF {
	public function new() {
		super();
	}

	public function QFontComboBox_PTR():QFontComboBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QFontComboBox_PTR"]);
	};

	public function CurrentFont():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentFont"]);
	};

	public function ConnectCurrentFontChanged(f:(font:QFont) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentFontChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentFontChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentFontChanged"]);
	};

	public function CurrentFontChanged(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentFontChanged", font]);
	};

	public function FontFilters():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FontFilters"]);
	};

	public function ConnectSetCurrentFont(f:(ff:QFont) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentFont", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentFont() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentFont"]);
	};

	public function SetCurrentFont(ff:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentFont", ff]);
	};

	public function SetCurrentFontDefault(ff:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentFontDefault", ff]);
	};

	public function SetFontFilters(filters:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontFilters", filters]);
	};

	public function SetWritingSystem(vqf:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWritingSystem", vqf]);
	};

	public function ConnectDestroyQFontComboBox(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQFontComboBox",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQFontComboBox() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQFontComboBox"]);
	};

	public function DestroyQFontComboBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFontComboBox"]);
	};

	public function DestroyQFontComboBoxDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFontComboBoxDefault"]);
	};
}

function NewQFontComboBoxFromPointer(ptr:String):QFontComboBox {
	final r = new QFontComboBox();
	r.initFrom(ptr, "widgets.QFontComboBox");
	return r;
}

function NewQFontComboBox(parent:QWidget_ITF):QFontComboBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQFontComboBox", "", parent]);
}

interface QFontDialog_ITF extends QDialog_ITF {
	public function QFontDialog_PTR():QFontDialog;
}

class QFontDialog extends QDialog implements QFontDialog_ITF {
	public function new() {
		super();
	}

	public function QFontDialog_PTR():QFontDialog {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QFontDialog_PTR"]);
	};

	public function CurrentFont():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentFont"]);
	};

	public function ConnectCurrentFontChanged(f:(font:QFont) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentFontChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentFontChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentFontChanged"]);
	};

	public function CurrentFontChanged(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentFontChanged", font]);
	};

	public override function ConnectDone(f:(result:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDone() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDone"]);
	};

	public override function Done(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Done", result]);
	};

	public override function DoneDefault(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoneDefault", result]);
	};

	public function ConnectFontSelected(f:(font:QFont) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFontSelected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFontSelected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFontSelected"]);
	};

	public function FontSelected(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FontSelected", font]);
	};

	public function GetFont(ok:Bool, initial:QFont_ITF, parent:QWidget_ITF, title:String, options:Int):QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GetFont", ok, initial, parent, title, options]);
	};

	public function GetFont2(ok:Bool, parent:QWidget_ITF):QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GetFont2", ok, parent]);
	};

	public function Open_QFontDialog(receiver:QObject_ITF, member:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Open", receiver, member]);
	};

	public function Options():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Options"]);
	};

	public function SelectedFont():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedFont"]);
	};

	public function SetCurrentFont(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentFont", font]);
	};

	public function SetOption(option:Int, on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOption", option, on]);
	};

	public function SetOptions(options:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOptions", options]);
	};

	public function TestOption(option:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TestOption", option]);
	};
}

function NewQFontDialogFromPointer(ptr:String):QFontDialog {
	final r = new QFontDialog();
	r.initFrom(ptr, "widgets.QFontDialog");
	return r;
}

function NewQFontDialog(parent:QWidget_ITF):QFontDialog {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQFontDialog", "", parent]);
}

function NewQFontDialog2(initial:QFont_ITF, parent:QWidget_ITF):QFontDialog {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQFontDialog2", "", initial, parent]);
}

function QFontDialog_GetFont(ok:Bool, initial:QFont_ITF, parent:QWidget_ITF, title:String, options:Int):QFont {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QFontDialog_GetFont", "", ok, initial, parent, title, options]);
}

function QFontDialog_GetFont2(ok:Bool, parent:QWidget_ITF):QFont {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QFontDialog_GetFont2", "", ok, parent]);
}

interface QFormLayout_ITF extends QLayout_ITF {
	public function QFormLayout_PTR():QFormLayout;
}

class QFormLayout extends QLayout implements QFormLayout_ITF {
	public function new() {
		super();
	}

	public function QFormLayout_PTR():QFormLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QFormLayout_PTR"]);
	};

	public override function ConnectAddItem(f:(item:QLayoutItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAddItem", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectAddItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAddItem"]);
	};

	public override function AddItem(item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem", item]);
	};

	public function AddItemDefault(item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItemDefault", item]);
	};

	public function AddRow(label:QWidget_ITF, field:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddRow", label, field]);
	};

	public function AddRow2(label:QWidget_ITF, field:QLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddRow2", label, field]);
	};

	public function AddRow3(labelText:String, field:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddRow3", labelText, field]);
	};

	public function AddRow4(labelText:String, field:QLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddRow4", labelText, field]);
	};

	public function AddRow5(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddRow5", widget]);
	};

	public function AddRow6(layout:QLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddRow6", layout]);
	};

	public override function ConnectCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCount"]);
	};

	public override function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function CountDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CountDefault"]);
	};

	public function FieldGrowthPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FieldGrowthPolicy"]);
	};

	public function FormAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FormAlignment"]);
	};

	public function HorizontalSpacing():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalSpacing"]);
	};

	public function InsertRow(row:Int, label:QWidget_ITF, field:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertRow", row, label, field]);
	};

	public function InsertRow2(row:Int, label:QWidget_ITF, field:QLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertRow2", row, label, field]);
	};

	public function InsertRow3(row:Int, labelText:String, field:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertRow3", row, labelText, field]);
	};

	public function InsertRow4(row:Int, labelText:String, field:QLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertRow4", row, labelText, field]);
	};

	public function InsertRow5(row:Int, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertRow5", row, widget]);
	};

	public function InsertRow6(row:Int, layout:QLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertRow6", row, layout]);
	};

	public function LabelAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LabelAlignment"]);
	};

	public function LabelForField(field:QWidget_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LabelForField", field]);
	};

	public function LabelForField2(field:QLayout_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LabelForField2", field]);
	};

	public function RemoveRow(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveRow", row]);
	};

	public function RemoveRow2(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveRow2", widget]);
	};

	public function RemoveRow3(layout:QLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveRow3", layout]);
	};

	public function RowCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowCount"]);
	};

	public function RowWrapPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowWrapPolicy"]);
	};

	public function SetFieldGrowthPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFieldGrowthPolicy", policy]);
	};

	public function SetFormAlignment(alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFormAlignment", alignment]);
	};

	public function SetHorizontalSpacing(spacing:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalSpacing", spacing]);
	};

	public function SetItem(row:Int, role:Int, item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItem", row, role, item]);
	};

	public function SetLabelAlignment(alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLabelAlignment", alignment]);
	};

	public function SetLayout(row:Int, role:Int, layout:QLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLayout", row, role, layout]);
	};

	public function SetRowWrapPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowWrapPolicy", policy]);
	};

	public function SetVerticalSpacing(spacing:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalSpacing", spacing]);
	};

	public function SetWidget(row:Int, role:Int, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWidget", row, role, widget]);
	};

	public override function ConnectSizeHint(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public override function SizeHintDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault"]);
	};

	public override function ConnectTakeAt(f:(index:Int) -> QLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTakeAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectTakeAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTakeAt"]);
	};

	public override function TakeAt(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeAt", index]);
	};

	public function TakeAtDefault(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeAtDefault", index]);
	};

	public function VerticalSpacing():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalSpacing"]);
	};

	public function ConnectDestroyQFormLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQFormLayout",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQFormLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQFormLayout"]);
	};

	public function DestroyQFormLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFormLayout"]);
	};

	public function DestroyQFormLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFormLayoutDefault"]);
	};
}

function NewQFormLayoutFromPointer(ptr:String):QFormLayout {
	final r = new QFormLayout();
	r.initFrom(ptr, "widgets.QFormLayout");
	return r;
}

function NewQFormLayout(parent:QWidget_ITF):QFormLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQFormLayout", "", parent]);
}

interface QFrame_ITF extends QWidget_ITF {
	public function QFrame_PTR():QFrame;
}

class QFrame extends QWidget implements QFrame_ITF {
	public function new() {
		super();
	}

	public function QFrame_PTR():QFrame {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QFrame_PTR"]);
	};

	public function FrameRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FrameRect"]);
	};

	public function FrameShadow():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FrameShadow"]);
	};

	public function FrameShape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FrameShape"]);
	};

	public function FrameStyle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FrameStyle"]);
	};

	public function FrameWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FrameWidth"]);
	};

	public function InitStyleOption(option:QStyleOptionFrame_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function LineWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LineWidth"]);
	};

	public function MidLineWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MidLineWidth"]);
	};

	public function SetFrameRect(vqr:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFrameRect", vqr]);
	};

	public function SetFrameShadow(vqf:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFrameShadow", vqf]);
	};

	public function SetFrameShape(vqf:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFrameShape", vqf]);
	};

	public function SetFrameStyle(style:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFrameStyle", style]);
	};

	public function SetLineWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLineWidth", vi]);
	};

	public function SetMidLineWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMidLineWidth", vi]);
	};

	public function ConnectDestroyQFrame(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQFrame", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQFrame() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQFrame"]);
	};

	public function DestroyQFrame() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFrame"]);
	};

	public function DestroyQFrameDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQFrameDefault"]);
	};
}

function NewQFrameFromPointer(ptr:String):QFrame {
	final r = new QFrame();
	r.initFrom(ptr, "widgets.QFrame");
	return r;
}

function NewQFrame(parent:QWidget_ITF, ff:Int):QFrame {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQFrame", "", parent, ff]);
}

interface QGesture_ITF extends QObject_ITF {
	public function QGesture_PTR():QGesture;
}

class QGesture extends QObject implements QGesture_ITF {
	public function new() {
		super();
	}

	public function QGesture_PTR():QGesture {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGesture_PTR"]);
	};

	public function GestureCancelPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GestureCancelPolicy"]);
	};

	public function GestureType():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GestureType"]);
	};

	public function HasHotSpot():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasHotSpot"]);
	};

	public function HotSpot():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HotSpot"]);
	};

	public function SetGestureCancelPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGestureCancelPolicy", policy]);
	};

	public function SetHotSpot(value:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHotSpot", value]);
	};

	public function State():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "State"]);
	};

	public function UnsetHotSpot() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnsetHotSpot"]);
	};

	public function ConnectDestroyQGesture(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQGesture", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQGesture() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGesture"]);
	};

	public function DestroyQGesture() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGesture"]);
	};

	public function DestroyQGestureDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGestureDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQGestureFromPointer(ptr:String):QGesture {
	final r = new QGesture();
	r.initFrom(ptr, "widgets.QGesture");
	return r;
}

function NewQGesture(parent:QObject_ITF):QGesture {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGesture", "", parent]);
}

interface QGestureEvent_ITF extends QEvent_ITF {
	public function QGestureEvent_PTR():QGestureEvent;
}

class QGestureEvent extends QEvent implements QGestureEvent_ITF {
	public function new() {
		super();
	}

	public function QGestureEvent_PTR():QGestureEvent {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGestureEvent_PTR"]);
	};

	public function Accept_QGestureEvent(gesture:QGesture_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Accept", gesture]);
	};

	public function Accept2(gestureType:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Accept2", gestureType]);
	};

	public function ActiveGestures():Array<QGesture> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActiveGestures"]);
	};

	public function CanceledGestures():Array<QGesture> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanceledGestures"]);
	};

	public function Gesture(ty:Int):QGesture {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Gesture", ty]);
	};

	public function Gestures():Array<QGesture> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Gestures"]);
	};

	public function Ignore_QGestureEvent(gesture:QGesture_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Ignore", gesture]);
	};

	public function Ignore2(gestureType:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Ignore2", gestureType]);
	};

	public function IsAccepted_QGestureEvent(gesture:QGesture_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsAccepted", gesture]);
	};

	public function IsAccepted2(gestureType:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsAccepted2", gestureType]);
	};

	public function MapToGraphicsScene(gesturePoint:QPointF_ITF):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToGraphicsScene", gesturePoint]);
	};

	public function SetAccepted_QGestureEvent(gesture:QGesture_ITF, value:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAccepted", gesture, value]);
	};

	public function SetAccepted2(gestureType:Int, value:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAccepted2", gestureType, value]);
	};

	public function Widget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget"]);
	};

	public function ConnectDestroyQGestureEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGestureEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGestureEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGestureEvent"]);
	};

	public function DestroyQGestureEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGestureEvent"]);
	};

	public function DestroyQGestureEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGestureEventDefault"]);
	};
}

function NewQGestureEventFromPointer(ptr:String):QGestureEvent {
	final r = new QGestureEvent();
	r.initFrom(ptr, "widgets.QGestureEvent");
	return r;
}

function NewQGestureEvent(gestures:Array<QGesture>):QGestureEvent {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGestureEvent", "", gestures]);
}

interface QGestureRecognizer_ITF {
	public function QGestureRecognizer_PTR():QGestureRecognizer;
}

class QGestureRecognizer extends Internal implements QGestureRecognizer_ITF {
	public function new() {
		super();
	}

	public function QGestureRecognizer_PTR():QGestureRecognizer {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGestureRecognizer_PTR"]);
	};

	public function ConnectCreate(f:(target:QObject) -> QGesture) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCreate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCreate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreate"]);
	};

	public function Create(target:QObject_ITF):QGesture {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Create", target]);
	};

	public function CreateDefault(target:QObject_ITF):QGesture {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateDefault", target]);
	};

	public function ConnectRecognize(f:(gesture:QGesture, watched:QObject, event:QEvent) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRecognize", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRecognize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRecognize"]);
	};

	public function Recognize(gesture:QGesture_ITF, watched:QObject_ITF, event:QEvent_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Recognize", gesture, watched, event]);
	};

	public function RegisterRecognizer(recognizer:QGestureRecognizer_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RegisterRecognizer", recognizer]);
	};

	public function ConnectReset(f:(gesture:QGesture) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectReset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectReset"]);
	};

	public function Reset(gesture:QGesture_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Reset", gesture]);
	};

	public function ResetDefault(gesture:QGesture_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetDefault", gesture]);
	};

	public function UnregisterRecognizer(ty:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnregisterRecognizer", ty]);
	};

	public function ConnectDestroyQGestureRecognizer(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGestureRecognizer",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGestureRecognizer() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGestureRecognizer"]);
	};

	public function DestroyQGestureRecognizer() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGestureRecognizer"]);
	};

	public function DestroyQGestureRecognizerDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGestureRecognizerDefault"]);
	};
}

function NewQGestureRecognizerFromPointer(ptr:String):QGestureRecognizer {
	final r = new QGestureRecognizer();
	r.initFrom(ptr, "widgets.QGestureRecognizer");
	return r;
}

function NewQGestureRecognizer():QGestureRecognizer {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGestureRecognizer", ""]);
}

function QGestureRecognizer_RegisterRecognizer(recognizer:QGestureRecognizer_ITF):Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QGestureRecognizer_RegisterRecognizer", "", recognizer]);
}

function QGestureRecognizer_UnregisterRecognizer(ty:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QGestureRecognizer_UnregisterRecognizer", "", ty]);
}

interface QGraphicsAnchor_ITF extends QObject_ITF {
	public function QGraphicsAnchor_PTR():QGraphicsAnchor;
}

class QGraphicsAnchor extends QObject implements QGraphicsAnchor_ITF {
	public function new() {
		super();
	}

	public function QGraphicsAnchor_PTR():QGraphicsAnchor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsAnchor_PTR"]);
	};

	public function SetSizePolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizePolicy", policy]);
	};

	public function SetSpacing(spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSpacing", spacing]);
	};

	public function SizePolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizePolicy"]);
	};

	public function Spacing():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Spacing"]);
	};

	public function UnsetSpacing() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnsetSpacing"]);
	};

	public function ConnectDestroyQGraphicsAnchor(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsAnchor",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsAnchor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsAnchor"]);
	};

	public function DestroyQGraphicsAnchor() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsAnchor"]);
	};

	public function DestroyQGraphicsAnchorDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsAnchorDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQGraphicsAnchorFromPointer(ptr:String):QGraphicsAnchor {
	final r = new QGraphicsAnchor();
	r.initFrom(ptr, "widgets.QGraphicsAnchor");
	return r;
}

interface QGraphicsAnchorLayout_ITF extends QGraphicsLayout_ITF {
	public function QGraphicsAnchorLayout_PTR():QGraphicsAnchorLayout;
}

class QGraphicsAnchorLayout extends QGraphicsLayout implements QGraphicsAnchorLayout_ITF {
	public function new() {
		super();
	}

	public function QGraphicsAnchorLayout_PTR():QGraphicsAnchorLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsAnchorLayout_PTR"]);
	};

	public function AddAnchor(firstItem:QGraphicsLayoutItem_ITF, firstEdge:Int, secondItem:QGraphicsLayoutItem_ITF, secondEdge:Int):QGraphicsAnchor {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"AddAnchor",
			firstItem,
			firstEdge,
			secondItem,
			secondEdge
		]);
	};

	public function AddAnchors(firstItem:QGraphicsLayoutItem_ITF, secondItem:QGraphicsLayoutItem_ITF, orientations:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddAnchors", firstItem, secondItem, orientations]);
	};

	public function AddCornerAnchors(firstItem:QGraphicsLayoutItem_ITF, firstCorner:Int, secondItem:QGraphicsLayoutItem_ITF, secondCorner:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"AddCornerAnchors",
			firstItem,
			firstCorner,
			secondItem,
			secondCorner
		]);
	};

	public function Anchor(firstItem:QGraphicsLayoutItem_ITF, firstEdge:Int, secondItem:QGraphicsLayoutItem_ITF, secondEdge:Int):QGraphicsAnchor {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"Anchor",
			firstItem,
			firstEdge,
			secondItem,
			secondEdge
		]);
	};

	public override function ConnectCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCount"]);
	};

	public override function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function CountDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CountDefault"]);
	};

	public function HorizontalSpacing():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalSpacing"]);
	};

	public override function ConnectItemAt(f:(index:Int) -> QGraphicsLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectItemAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemAt"]);
	};

	public override function ItemAt(index:Int):QGraphicsLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", index]);
	};

	public function ItemAtDefault(index:Int):QGraphicsLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAtDefault", index]);
	};

	public override function ConnectRemoveAt(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRemoveAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectRemoveAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRemoveAt"]);
	};

	public override function RemoveAt(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveAt", index]);
	};

	public function RemoveAtDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveAtDefault", index]);
	};

	public function SetHorizontalSpacing(spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalSpacing", spacing]);
	};

	public function SetSpacing(spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSpacing", spacing]);
	};

	public function SetVerticalSpacing(spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalSpacing", spacing]);
	};

	public override function ConnectSizeHint(f:(which:Int, constraint:QSizeF) -> QSizeF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint", which, constraint]);
	};

	public override function SizeHintDefault(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault", which, constraint]);
	};

	public function VerticalSpacing():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalSpacing"]);
	};

	public function ConnectDestroyQGraphicsAnchorLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsAnchorLayout",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsAnchorLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsAnchorLayout"]);
	};

	public function DestroyQGraphicsAnchorLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsAnchorLayout"]);
	};

	public function DestroyQGraphicsAnchorLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsAnchorLayoutDefault"]);
	};
}

function NewQGraphicsAnchorLayoutFromPointer(ptr:String):QGraphicsAnchorLayout {
	final r = new QGraphicsAnchorLayout();
	r.initFrom(ptr, "widgets.QGraphicsAnchorLayout");
	return r;
}

function NewQGraphicsAnchorLayout(parent:QGraphicsLayoutItem_ITF):QGraphicsAnchorLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsAnchorLayout", "", parent]);
}

interface QGraphicsBlurEffect_ITF extends QGraphicsEffect_ITF {
	public function QGraphicsBlurEffect_PTR():QGraphicsBlurEffect;
}

class QGraphicsBlurEffect extends QGraphicsEffect implements QGraphicsBlurEffect_ITF {
	public function new() {
		super();
	}

	public function QGraphicsBlurEffect_PTR():QGraphicsBlurEffect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsBlurEffect_PTR"]);
	};

	public function BlurHints():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BlurHints"]);
	};

	public function ConnectBlurHintsChanged(f:(hints:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBlurHintsChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBlurHintsChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBlurHintsChanged"]);
	};

	public function BlurHintsChanged(hints:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "BlurHintsChanged", hints]);
	};

	public function BlurRadius():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BlurRadius"]);
	};

	public function ConnectBlurRadiusChanged(f:(radius:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBlurRadiusChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBlurRadiusChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBlurRadiusChanged"]);
	};

	public function BlurRadiusChanged(radius:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "BlurRadiusChanged", radius]);
	};

	public override function ConnectDraw(f:(painter:QPainter) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDraw", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDraw() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDraw"]);
	};

	public override function Draw(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Draw", painter]);
	};

	public function DrawDefault(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawDefault", painter]);
	};

	public function ConnectSetBlurHints(f:(hints:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetBlurHints", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetBlurHints() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetBlurHints"]);
	};

	public function SetBlurHints(hints:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBlurHints", hints]);
	};

	public function SetBlurHintsDefault(hints:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBlurHintsDefault", hints]);
	};

	public function ConnectSetBlurRadius(f:(blurRadius:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetBlurRadius", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetBlurRadius() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetBlurRadius"]);
	};

	public function SetBlurRadius(blurRadius:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBlurRadius", blurRadius]);
	};

	public function SetBlurRadiusDefault(blurRadius:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBlurRadiusDefault", blurRadius]);
	};

	public function ConnectDestroyQGraphicsBlurEffect(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsBlurEffect",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsBlurEffect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsBlurEffect"]);
	};

	public function DestroyQGraphicsBlurEffect() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsBlurEffect"]);
	};

	public function DestroyQGraphicsBlurEffectDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsBlurEffectDefault"]);
	};
}

function NewQGraphicsBlurEffectFromPointer(ptr:String):QGraphicsBlurEffect {
	final r = new QGraphicsBlurEffect();
	r.initFrom(ptr, "widgets.QGraphicsBlurEffect");
	return r;
}

function NewQGraphicsBlurEffect(parent:QObject_ITF):QGraphicsBlurEffect {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsBlurEffect", "", parent]);
}

interface QGraphicsColorizeEffect_ITF extends QGraphicsEffect_ITF {
	public function QGraphicsColorizeEffect_PTR():QGraphicsColorizeEffect;
}

class QGraphicsColorizeEffect extends QGraphicsEffect implements QGraphicsColorizeEffect_ITF {
	public function new() {
		super();
	}

	public function QGraphicsColorizeEffect_PTR():QGraphicsColorizeEffect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsColorizeEffect_PTR"]);
	};

	public function Color():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Color"]);
	};

	public function ConnectColorChanged(f:(color:QColor) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectColorChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectColorChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColorChanged"]);
	};

	public function ColorChanged(color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColorChanged", color]);
	};

	public override function ConnectDraw(f:(painter:QPainter) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDraw", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDraw() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDraw"]);
	};

	public override function Draw(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Draw", painter]);
	};

	public function DrawDefault(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawDefault", painter]);
	};

	public function ConnectSetColor(f:(c:QColor) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetColor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetColor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetColor"]);
	};

	public function SetColor(c:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColor", c]);
	};

	public function SetColorDefault(c:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColorDefault", c]);
	};

	public function ConnectSetStrength(f:(strength:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetStrength", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetStrength() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetStrength"]);
	};

	public function SetStrength(strength:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStrength", strength]);
	};

	public function SetStrengthDefault(strength:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStrengthDefault", strength]);
	};

	public function Strength():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Strength"]);
	};

	public function ConnectStrengthChanged(f:(strength:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStrengthChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStrengthChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStrengthChanged"]);
	};

	public function StrengthChanged(strength:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "StrengthChanged", strength]);
	};

	public function ConnectDestroyQGraphicsColorizeEffect(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsColorizeEffect",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsColorizeEffect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsColorizeEffect"]);
	};

	public function DestroyQGraphicsColorizeEffect() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsColorizeEffect"]);
	};

	public function DestroyQGraphicsColorizeEffectDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsColorizeEffectDefault"]);
	};
}

function NewQGraphicsColorizeEffectFromPointer(ptr:String):QGraphicsColorizeEffect {
	final r = new QGraphicsColorizeEffect();
	r.initFrom(ptr, "widgets.QGraphicsColorizeEffect");
	return r;
}

function NewQGraphicsColorizeEffect(parent:QObject_ITF):QGraphicsColorizeEffect {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsColorizeEffect", "", parent]);
}

interface QGraphicsDropShadowEffect_ITF extends QGraphicsEffect_ITF {
	public function QGraphicsDropShadowEffect_PTR():QGraphicsDropShadowEffect;
}

class QGraphicsDropShadowEffect extends QGraphicsEffect implements QGraphicsDropShadowEffect_ITF {
	public function new() {
		super();
	}

	public function QGraphicsDropShadowEffect_PTR():QGraphicsDropShadowEffect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsDropShadowEffect_PTR"]);
	};

	public function BlurRadius():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BlurRadius"]);
	};

	public function ConnectBlurRadiusChanged(f:(blurRadius:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBlurRadiusChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBlurRadiusChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBlurRadiusChanged"]);
	};

	public function BlurRadiusChanged(blurRadius:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "BlurRadiusChanged", blurRadius]);
	};

	public function Color():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Color"]);
	};

	public function ConnectColorChanged(f:(color:QColor) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectColorChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectColorChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColorChanged"]);
	};

	public function ColorChanged(color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColorChanged", color]);
	};

	public override function ConnectDraw(f:(painter:QPainter) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDraw", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDraw() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDraw"]);
	};

	public override function Draw(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Draw", painter]);
	};

	public function DrawDefault(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawDefault", painter]);
	};

	public function Offset():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Offset"]);
	};

	public function ConnectOffsetChanged(f:(offset:QPointF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectOffsetChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectOffsetChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectOffsetChanged"]);
	};

	public function OffsetChanged(offset:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OffsetChanged", offset]);
	};

	public function ConnectSetBlurRadius(f:(blurRadius:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetBlurRadius", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetBlurRadius() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetBlurRadius"]);
	};

	public function SetBlurRadius(blurRadius:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBlurRadius", blurRadius]);
	};

	public function SetBlurRadiusDefault(blurRadius:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBlurRadiusDefault", blurRadius]);
	};

	public function ConnectSetColor(f:(color:QColor) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetColor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetColor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetColor"]);
	};

	public function SetColor(color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColor", color]);
	};

	public function SetColorDefault(color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColorDefault", color]);
	};

	public function ConnectSetOffset(f:(ofs:QPointF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetOffset", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOffset"]);
	};

	public function SetOffset(ofs:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffset", ofs]);
	};

	public function SetOffsetDefault(ofs:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffsetDefault", ofs]);
	};

	public function ConnectSetOffset2(f:(dx:Float, dy:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetOffset2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetOffset2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOffset2"]);
	};

	public function SetOffset2(dx:Float, dy:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffset2", dx, dy]);
	};

	public function SetOffset2Default(dx:Float, dy:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffset2Default", dx, dy]);
	};

	public function ConnectSetOffset3(f:(d:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetOffset3", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetOffset3() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOffset3"]);
	};

	public function SetOffset3(d:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffset3", d]);
	};

	public function SetOffset3Default(d:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffset3Default", d]);
	};

	public function ConnectSetXOffset(f:(dx:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetXOffset", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetXOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetXOffset"]);
	};

	public function SetXOffset(dx:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetXOffset", dx]);
	};

	public function SetXOffsetDefault(dx:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetXOffsetDefault", dx]);
	};

	public function ConnectSetYOffset(f:(dy:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetYOffset", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetYOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetYOffset"]);
	};

	public function SetYOffset(dy:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetYOffset", dy]);
	};

	public function SetYOffsetDefault(dy:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetYOffsetDefault", dy]);
	};

	public function XOffset():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "XOffset"]);
	};

	public function YOffset():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "YOffset"]);
	};

	public function ConnectDestroyQGraphicsDropShadowEffect(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsDropShadowEffect",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsDropShadowEffect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsDropShadowEffect"]);
	};

	public function DestroyQGraphicsDropShadowEffect() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsDropShadowEffect"]);
	};

	public function DestroyQGraphicsDropShadowEffectDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsDropShadowEffectDefault"]);
	};
}

function NewQGraphicsDropShadowEffectFromPointer(ptr:String):QGraphicsDropShadowEffect {
	final r = new QGraphicsDropShadowEffect();
	r.initFrom(ptr, "widgets.QGraphicsDropShadowEffect");
	return r;
}

function NewQGraphicsDropShadowEffect(parent:QObject_ITF):QGraphicsDropShadowEffect {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsDropShadowEffect", "", parent]);
}

interface QGraphicsEffect_ITF extends QObject_ITF {
	public function QGraphicsEffect_PTR():QGraphicsEffect;
}

class QGraphicsEffect extends QObject implements QGraphicsEffect_ITF {
	public function new() {
		super();
	}

	public function QGraphicsEffect_PTR():QGraphicsEffect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsEffect_PTR"]);
	};

	public function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public function ConnectBoundingRectFor(f:(rect:QRectF) -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRectFor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBoundingRectFor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRectFor"]);
	};

	public function BoundingRectFor(rect:QRectF_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectFor", rect]);
	};

	public function BoundingRectForDefault(rect:QRectF_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectForDefault", rect]);
	};

	public function ConnectDraw(f:(painter:QPainter) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDraw", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDraw() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDraw"]);
	};

	public function Draw(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Draw", painter]);
	};

	public function DrawSource(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawSource", painter]);
	};

	public function ConnectEnabledChanged(f:(enabled:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEnabledChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEnabledChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEnabledChanged"]);
	};

	public function EnabledChanged(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnabledChanged", enabled]);
	};

	public function IsEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEnabled"]);
	};

	public function ConnectSetEnabled(f:(enable:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetEnabled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetEnabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetEnabled"]);
	};

	public function SetEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabled", enable]);
	};

	public function SetEnabledDefault(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabledDefault", enable]);
	};

	public function SourceBoundingRect(system:Int):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SourceBoundingRect", system]);
	};

	public function ConnectSourceChanged(f:(flags:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSourceChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSourceChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSourceChanged"]);
	};

	public function SourceChanged(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SourceChanged", flags]);
	};

	public function SourceChangedDefault(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SourceChangedDefault", flags]);
	};

	public function SourceIsPixmap():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SourceIsPixmap"]);
	};

	public function SourcePixmap(system:Int, offset:QPoint_ITF, mode:Int):QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SourcePixmap", system, offset, mode]);
	};

	public function ConnectUpdate(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdate"]);
	};

	public function Update() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update"]);
	};

	public function UpdateDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateDefault"]);
	};

	public function UpdateBoundingRect() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateBoundingRect"]);
	};

	public function ConnectDestroyQGraphicsEffect(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsEffect",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsEffect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsEffect"]);
	};

	public function DestroyQGraphicsEffect() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsEffect"]);
	};

	public function DestroyQGraphicsEffectDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsEffectDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQGraphicsEffectFromPointer(ptr:String):QGraphicsEffect {
	final r = new QGraphicsEffect();
	r.initFrom(ptr, "widgets.QGraphicsEffect");
	return r;
}

function NewQGraphicsEffect(parent:QObject_ITF):QGraphicsEffect {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsEffect", "", parent]);
}

interface QGraphicsEllipseItem_ITF extends QAbstractGraphicsShapeItem_ITF {
	public function QGraphicsEllipseItem_PTR():QGraphicsEllipseItem;
}

class QGraphicsEllipseItem extends QAbstractGraphicsShapeItem implements QGraphicsEllipseItem_ITF {
	public function new() {
		super();
	}

	public function QGraphicsEllipseItem_PTR():QGraphicsEllipseItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsEllipseItem_PTR"]);
	};

	public override function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public override function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public override function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};

	public function Rect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Rect"]);
	};

	public function SetRect(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRect", rect]);
	};

	public function SetRect2(x:Float, y:Float, width:Float, height:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRect2", x, y, width, height]);
	};

	public function SetSpanAngle(angle:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSpanAngle", angle]);
	};

	public function SetStartAngle(angle:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStartAngle", angle]);
	};

	public function SpanAngle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SpanAngle"]);
	};

	public function StartAngle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StartAngle"]);
	};

	public function ConnectDestroyQGraphicsEllipseItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsEllipseItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsEllipseItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsEllipseItem"]);
	};

	public function DestroyQGraphicsEllipseItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsEllipseItem"]);
	};

	public function DestroyQGraphicsEllipseItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsEllipseItemDefault"]);
	};
}

function NewQGraphicsEllipseItemFromPointer(ptr:String):QGraphicsEllipseItem {
	final r = new QGraphicsEllipseItem();
	r.initFrom(ptr, "widgets.QGraphicsEllipseItem");
	return r;
}

function NewQGraphicsEllipseItem(parent:QGraphicsItem_ITF):QGraphicsEllipseItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsEllipseItem", "", parent]);
}

function NewQGraphicsEllipseItem2(rect:QRectF_ITF, parent:QGraphicsItem_ITF):QGraphicsEllipseItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsEllipseItem2", "", rect, parent]);
}

function NewQGraphicsEllipseItem3(x:Float, y:Float, width:Float, height:Float, parent:QGraphicsItem_ITF):QGraphicsEllipseItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsEllipseItem3", "", x, y, width, height, parent]);
}

interface QGraphicsGridLayout_ITF extends QGraphicsLayout_ITF {
	public function QGraphicsGridLayout_PTR():QGraphicsGridLayout;
}

class QGraphicsGridLayout extends QGraphicsLayout implements QGraphicsGridLayout_ITF {
	public function new() {
		super();
	}

	public function QGraphicsGridLayout_PTR():QGraphicsGridLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsGridLayout_PTR"]);
	};

	public function AddItem(item:QGraphicsLayoutItem_ITF, row:Int, column:Int, rowSpan:Int, columnSpan:Int, alignment:Int) {
		Internal.callLocalFunction([
			"", Pointer(), ___className, "AddItem", item, row, column, rowSpan, columnSpan, alignment
		]);
	};

	public function AddItem2(item:QGraphicsLayoutItem_ITF, row:Int, column:Int, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem2", item, row, column, alignment]);
	};

	public function Alignment(item:QGraphicsLayoutItem_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment", item]);
	};

	public function ColumnAlignment(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnAlignment", column]);
	};

	public function ColumnCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCount"]);
	};

	public function ColumnMaximumWidth(column:Int):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnMaximumWidth", column]);
	};

	public function ColumnMinimumWidth(column:Int):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnMinimumWidth", column]);
	};

	public function ColumnPreferredWidth(column:Int):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnPreferredWidth", column]);
	};

	public function ColumnSpacing(column:Int):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnSpacing", column]);
	};

	public function ColumnStretchFactor(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnStretchFactor", column]);
	};

	public override function ConnectCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCount"]);
	};

	public override function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function CountDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CountDefault"]);
	};

	public function HorizontalSpacing():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalSpacing"]);
	};

	public override function ConnectRemoveAt(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRemoveAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectRemoveAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRemoveAt"]);
	};

	public override function RemoveAt(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveAt", index]);
	};

	public function RemoveAtDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveAtDefault", index]);
	};

	public function RemoveItem(item:QGraphicsLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveItem", item]);
	};

	public function RowAlignment(row:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowAlignment", row]);
	};

	public function RowCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowCount"]);
	};

	public function RowMaximumHeight(row:Int):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowMaximumHeight", row]);
	};

	public function RowMinimumHeight(row:Int):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowMinimumHeight", row]);
	};

	public function RowPreferredHeight(row:Int):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowPreferredHeight", row]);
	};

	public function RowSpacing(row:Int):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowSpacing", row]);
	};

	public function RowStretchFactor(row:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowStretchFactor", row]);
	};

	public function SetAlignment(item:QGraphicsLayoutItem_ITF, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", item, alignment]);
	};

	public function SetColumnAlignment(column:Int, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnAlignment", column, alignment]);
	};

	public function SetColumnFixedWidth(column:Int, width:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnFixedWidth", column, width]);
	};

	public function SetColumnMaximumWidth(column:Int, width:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnMaximumWidth", column, width]);
	};

	public function SetColumnMinimumWidth(column:Int, width:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnMinimumWidth", column, width]);
	};

	public function SetColumnPreferredWidth(column:Int, width:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnPreferredWidth", column, width]);
	};

	public function SetColumnSpacing(column:Int, spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnSpacing", column, spacing]);
	};

	public function SetColumnStretchFactor(column:Int, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnStretchFactor", column, stretch]);
	};

	public function SetHorizontalSpacing(spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalSpacing", spacing]);
	};

	public function SetRowAlignment(row:Int, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowAlignment", row, alignment]);
	};

	public function SetRowFixedHeight(row:Int, height:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowFixedHeight", row, height]);
	};

	public function SetRowMaximumHeight(row:Int, height:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowMaximumHeight", row, height]);
	};

	public function SetRowMinimumHeight(row:Int, height:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowMinimumHeight", row, height]);
	};

	public function SetRowPreferredHeight(row:Int, height:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowPreferredHeight", row, height]);
	};

	public function SetRowSpacing(row:Int, spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowSpacing", row, spacing]);
	};

	public function SetRowStretchFactor(row:Int, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowStretchFactor", row, stretch]);
	};

	public function SetSpacing(spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSpacing", spacing]);
	};

	public function SetVerticalSpacing(spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalSpacing", spacing]);
	};

	public override function ConnectSizeHint(f:(which:Int, constraint:QSizeF) -> QSizeF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint", which, constraint]);
	};

	public override function SizeHintDefault(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault", which, constraint]);
	};

	public function VerticalSpacing():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalSpacing"]);
	};

	public function ConnectDestroyQGraphicsGridLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsGridLayout",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsGridLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsGridLayout"]);
	};

	public function DestroyQGraphicsGridLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsGridLayout"]);
	};

	public function DestroyQGraphicsGridLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsGridLayoutDefault"]);
	};
}

function NewQGraphicsGridLayoutFromPointer(ptr:String):QGraphicsGridLayout {
	final r = new QGraphicsGridLayout();
	r.initFrom(ptr, "widgets.QGraphicsGridLayout");
	return r;
}

function NewQGraphicsGridLayout(parent:QGraphicsLayoutItem_ITF):QGraphicsGridLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsGridLayout", "", parent]);
}

interface QGraphicsItem_ITF {
	public function QGraphicsItem_PTR():QGraphicsItem;
}

class QGraphicsItem extends Internal implements QGraphicsItem_ITF {
	public function new() {
		super();
	}

	public function QGraphicsItem_PTR():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsItem_PTR"]);
	};

	public function AcceptDrops():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AcceptDrops"]);
	};

	public function AcceptHoverEvents():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AcceptHoverEvents"]);
	};

	public function AcceptTouchEvents():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AcceptTouchEvents"]);
	};

	public function AcceptedMouseButtons():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AcceptedMouseButtons"]);
	};

	public function ConnectAdvance(f:(phase:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAdvance", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAdvance() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAdvance"]);
	};

	public function Advance(phase:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Advance", phase]);
	};

	public function AdvanceDefault(phase:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AdvanceDefault", phase]);
	};

	public function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public function BoundingRegion(itemToDeviceTransform:QTransform_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRegion", itemToDeviceTransform]);
	};

	public function BoundingRegionGranularity():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRegionGranularity"]);
	};

	public function CacheMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CacheMode"]);
	};

	public function ChildItems():Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildItems"]);
	};

	public function ChildrenBoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildrenBoundingRect"]);
	};

	public function ClearFocus() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearFocus"]);
	};

	public function ClipPath():QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ClipPath"]);
	};

	public function ConnectCollidesWithItem(f:(other:QGraphicsItem, mode:Int) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCollidesWithItem", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCollidesWithItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCollidesWithItem"]);
	};

	public function CollidesWithItem(other:QGraphicsItem_ITF, mode:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CollidesWithItem", other, mode]);
	};

	public function CollidesWithItemDefault(other:QGraphicsItem_ITF, mode:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CollidesWithItemDefault", other, mode]);
	};

	public function ConnectCollidesWithPath(f:(path:QPainterPath, mode:Int) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCollidesWithPath", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCollidesWithPath() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCollidesWithPath"]);
	};

	public function CollidesWithPath(path:QPainterPath_ITF, mode:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CollidesWithPath", path, mode]);
	};

	public function CollidesWithPathDefault(path:QPainterPath_ITF, mode:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CollidesWithPathDefault", path, mode]);
	};

	public function CollidingItems(mode:Int):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CollidingItems", mode]);
	};

	public function CommonAncestorItem(other:QGraphicsItem_ITF):QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CommonAncestorItem", other]);
	};

	public function ConnectContains(f:(point:QPointF) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectContains", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectContains() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectContains"]);
	};

	public function Contains(point:QPointF_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Contains", point]);
	};

	public function ContainsDefault(point:QPointF_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ContainsDefault", point]);
	};

	public function ConnectContextMenuEvent(f:(event:QGraphicsSceneContextMenuEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectContextMenuEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectContextMenuEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectContextMenuEvent"]);
	};

	public function ContextMenuEvent(event:QGraphicsSceneContextMenuEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ContextMenuEvent", event]);
	};

	public function ContextMenuEventDefault(event:QGraphicsSceneContextMenuEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ContextMenuEventDefault", event]);
	};

	public function Cursor():QCursor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Cursor"]);
	};

	public function Data(key:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Data", key]);
	};

	public function DeviceTransform(viewportTransform:QTransform_ITF):QTransform {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DeviceTransform", viewportTransform]);
	};

	public function ConnectDragEnterEvent(f:(event:QGraphicsSceneDragDropEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDragEnterEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDragEnterEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDragEnterEvent"]);
	};

	public function DragEnterEvent(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragEnterEvent", event]);
	};

	public function DragEnterEventDefault(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragEnterEventDefault", event]);
	};

	public function ConnectDragLeaveEvent(f:(event:QGraphicsSceneDragDropEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDragLeaveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDragLeaveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDragLeaveEvent"]);
	};

	public function DragLeaveEvent(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragLeaveEvent", event]);
	};

	public function DragLeaveEventDefault(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragLeaveEventDefault", event]);
	};

	public function ConnectDragMoveEvent(f:(event:QGraphicsSceneDragDropEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDragMoveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDragMoveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDragMoveEvent"]);
	};

	public function DragMoveEvent(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragMoveEvent", event]);
	};

	public function DragMoveEventDefault(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragMoveEventDefault", event]);
	};

	public function ConnectDropEvent(f:(event:QGraphicsSceneDragDropEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDropEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDropEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDropEvent"]);
	};

	public function DropEvent(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DropEvent", event]);
	};

	public function DropEventDefault(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DropEventDefault", event]);
	};

	public function EffectiveOpacity():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EffectiveOpacity"]);
	};

	public function EnsureVisible(rect:QRectF_ITF, xmargi:Int, ymargi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureVisible", rect, xmargi, ymargi]);
	};

	public function EnsureVisible2(x:Float, y:Float, w:Float, h:Float, xmargi:Int, ymargi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureVisible2", x, y, w, h, xmargi, ymargi]);
	};

	public function FiltersChildEvents():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FiltersChildEvents"]);
	};

	public function Flags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Flags"]);
	};

	public function ConnectFocusInEvent(f:(event:QFocusEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFocusInEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFocusInEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusInEvent"]);
	};

	public function FocusInEvent(event:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusInEvent", event]);
	};

	public function FocusInEventDefault(event:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusInEventDefault", event]);
	};

	public function FocusItem():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusItem"]);
	};

	public function ConnectFocusOutEvent(f:(event:QFocusEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFocusOutEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFocusOutEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusOutEvent"]);
	};

	public function FocusOutEvent(event:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusOutEvent", event]);
	};

	public function FocusOutEventDefault(event:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusOutEventDefault", event]);
	};

	public function FocusProxy():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusProxy"]);
	};

	public function GrabKeyboard() {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabKeyboard"]);
	};

	public function GrabMouse() {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabMouse"]);
	};

	public function GraphicsEffect():QGraphicsEffect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GraphicsEffect"]);
	};

	public function Group():QGraphicsItemGroup {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Group"]);
	};

	public function HasCursor():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasCursor"]);
	};

	public function HasFocus():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasFocus"]);
	};

	public function Hide() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Hide"]);
	};

	public function ConnectHoverEnterEvent(f:(event:QGraphicsSceneHoverEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHoverEnterEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHoverEnterEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHoverEnterEvent"]);
	};

	public function HoverEnterEvent(event:QGraphicsSceneHoverEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HoverEnterEvent", event]);
	};

	public function HoverEnterEventDefault(event:QGraphicsSceneHoverEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HoverEnterEventDefault", event]);
	};

	public function ConnectHoverLeaveEvent(f:(event:QGraphicsSceneHoverEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHoverLeaveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHoverLeaveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHoverLeaveEvent"]);
	};

	public function HoverLeaveEvent(event:QGraphicsSceneHoverEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HoverLeaveEvent", event]);
	};

	public function HoverLeaveEventDefault(event:QGraphicsSceneHoverEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HoverLeaveEventDefault", event]);
	};

	public function ConnectHoverMoveEvent(f:(event:QGraphicsSceneHoverEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHoverMoveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHoverMoveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHoverMoveEvent"]);
	};

	public function HoverMoveEvent(event:QGraphicsSceneHoverEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HoverMoveEvent", event]);
	};

	public function HoverMoveEventDefault(event:QGraphicsSceneHoverEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HoverMoveEventDefault", event]);
	};

	public function ConnectInputMethodEvent(f:(event:QInputMethodEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInputMethodEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInputMethodEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInputMethodEvent"]);
	};

	public function InputMethodEvent(event:QInputMethodEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodEvent", event]);
	};

	public function InputMethodEventDefault(event:QInputMethodEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodEventDefault", event]);
	};

	public function InputMethodHints():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodHints"]);
	};

	public function ConnectInputMethodQuery(f:(query:Int) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInputMethodQuery", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInputMethodQuery() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInputMethodQuery"]);
	};

	public function InputMethodQuery(query:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodQuery", query]);
	};

	public function InputMethodQueryDefault(query:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodQueryDefault", query]);
	};

	public function InstallSceneEventFilter(filterItem:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InstallSceneEventFilter", filterItem]);
	};

	public function IsActive():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsActive"]);
	};

	public function IsAncestorOf(child:QGraphicsItem_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsAncestorOf", child]);
	};

	public function IsClipped():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsClipped"]);
	};

	public function IsEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEnabled"]);
	};

	public function IsObscured(rect:QRectF_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsObscured", rect]);
	};

	public function IsObscured2(x:Float, y:Float, w:Float, h:Float):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsObscured2", x, y, w, h]);
	};

	public function ConnectIsObscuredBy(f:(item:QGraphicsItem) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsObscuredBy", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIsObscuredBy() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsObscuredBy"]);
	};

	public function IsObscuredBy(item:QGraphicsItem_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsObscuredBy", item]);
	};

	public function IsObscuredByDefault(item:QGraphicsItem_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsObscuredByDefault", item]);
	};

	public function IsPanel():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsPanel"]);
	};

	public function IsSelected():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSelected"]);
	};

	public function IsUnderMouse():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsUnderMouse"]);
	};

	public function IsVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsVisible"]);
	};

	public function IsVisibleTo(parent:QGraphicsItem_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsVisibleTo", parent]);
	};

	public function IsWidget():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsWidget"]);
	};

	public function IsWindow():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsWindow"]);
	};

	public function ConnectItemChange(f:(change:Int, value:QVariant) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemChange", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemChange() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemChange"]);
	};

	public function ItemChange(change:Int, value:QVariant_ITF):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemChange", change, value]);
	};

	public function ItemChangeDefault(change:Int, value:QVariant_ITF):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemChangeDefault", change, value]);
	};

	public function ItemTransform(other:QGraphicsItem_ITF, ok:Bool):QTransform {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemTransform", other, ok]);
	};

	public function ConnectKeyPressEvent(f:(event:QKeyEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectKeyPressEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectKeyPressEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectKeyPressEvent"]);
	};

	public function KeyPressEvent(event:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyPressEvent", event]);
	};

	public function KeyPressEventDefault(event:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyPressEventDefault", event]);
	};

	public function ConnectKeyReleaseEvent(f:(event:QKeyEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectKeyReleaseEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectKeyReleaseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectKeyReleaseEvent"]);
	};

	public function KeyReleaseEvent(event:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyReleaseEvent", event]);
	};

	public function KeyReleaseEventDefault(event:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyReleaseEventDefault", event]);
	};

	public function MapFromItem(item:QGraphicsItem_ITF, point:QPointF_ITF):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromItem", item, point]);
	};

	public function MapFromItem2(item:QGraphicsItem_ITF, rect:QRectF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromItem2", item, rect]);
	};

	public function MapFromItem3(item:QGraphicsItem_ITF, polygon:QPolygonF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromItem3", item, polygon]);
	};

	public function MapFromItem4(item:QGraphicsItem_ITF, path:QPainterPath_ITF):QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromItem4", item, path]);
	};

	public function MapFromItem5(item:QGraphicsItem_ITF, x:Float, y:Float):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromItem5", item, x, y]);
	};

	public function MapFromItem6(item:QGraphicsItem_ITF, x:Float, y:Float, w:Float, h:Float):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromItem6", item, x, y, w, h]);
	};

	public function MapFromParent(point:QPointF_ITF):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromParent", point]);
	};

	public function MapFromParent2(rect:QRectF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromParent2", rect]);
	};

	public function MapFromParent3(polygon:QPolygonF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromParent3", polygon]);
	};

	public function MapFromParent4(path:QPainterPath_ITF):QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromParent4", path]);
	};

	public function MapFromParent5(x:Float, y:Float):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromParent5", x, y]);
	};

	public function MapFromParent6(x:Float, y:Float, w:Float, h:Float):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromParent6", x, y, w, h]);
	};

	public function MapFromScene(point:QPointF_ITF):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene", point]);
	};

	public function MapFromScene2(rect:QRectF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene2", rect]);
	};

	public function MapFromScene3(polygon:QPolygonF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene3", polygon]);
	};

	public function MapFromScene4(path:QPainterPath_ITF):QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene4", path]);
	};

	public function MapFromScene5(x:Float, y:Float):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene5", x, y]);
	};

	public function MapFromScene6(x:Float, y:Float, w:Float, h:Float):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene6", x, y, w, h]);
	};

	public function MapRectFromItem(item:QGraphicsItem_ITF, rect:QRectF_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectFromItem", item, rect]);
	};

	public function MapRectFromItem2(item:QGraphicsItem_ITF, x:Float, y:Float, w:Float, h:Float):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectFromItem2", item, x, y, w, h]);
	};

	public function MapRectFromParent(rect:QRectF_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectFromParent", rect]);
	};

	public function MapRectFromParent2(x:Float, y:Float, w:Float, h:Float):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectFromParent2", x, y, w, h]);
	};

	public function MapRectFromScene(rect:QRectF_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectFromScene", rect]);
	};

	public function MapRectFromScene2(x:Float, y:Float, w:Float, h:Float):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectFromScene2", x, y, w, h]);
	};

	public function MapRectToItem(item:QGraphicsItem_ITF, rect:QRectF_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectToItem", item, rect]);
	};

	public function MapRectToItem2(item:QGraphicsItem_ITF, x:Float, y:Float, w:Float, h:Float):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectToItem2", item, x, y, w, h]);
	};

	public function MapRectToParent(rect:QRectF_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectToParent", rect]);
	};

	public function MapRectToParent2(x:Float, y:Float, w:Float, h:Float):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectToParent2", x, y, w, h]);
	};

	public function MapRectToScene(rect:QRectF_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectToScene", rect]);
	};

	public function MapRectToScene2(x:Float, y:Float, w:Float, h:Float):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapRectToScene2", x, y, w, h]);
	};

	public function MapToItem(item:QGraphicsItem_ITF, point:QPointF_ITF):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToItem", item, point]);
	};

	public function MapToItem2(item:QGraphicsItem_ITF, rect:QRectF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToItem2", item, rect]);
	};

	public function MapToItem3(item:QGraphicsItem_ITF, polygon:QPolygonF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToItem3", item, polygon]);
	};

	public function MapToItem4(item:QGraphicsItem_ITF, path:QPainterPath_ITF):QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToItem4", item, path]);
	};

	public function MapToItem5(item:QGraphicsItem_ITF, x:Float, y:Float):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToItem5", item, x, y]);
	};

	public function MapToItem6(item:QGraphicsItem_ITF, x:Float, y:Float, w:Float, h:Float):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToItem6", item, x, y, w, h]);
	};

	public function MapToParent(point:QPointF_ITF):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToParent", point]);
	};

	public function MapToParent2(rect:QRectF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToParent2", rect]);
	};

	public function MapToParent3(polygon:QPolygonF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToParent3", polygon]);
	};

	public function MapToParent4(path:QPainterPath_ITF):QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToParent4", path]);
	};

	public function MapToParent5(x:Float, y:Float):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToParent5", x, y]);
	};

	public function MapToParent6(x:Float, y:Float, w:Float, h:Float):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToParent6", x, y, w, h]);
	};

	public function MapToScene(point:QPointF_ITF):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene", point]);
	};

	public function MapToScene2(rect:QRectF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene2", rect]);
	};

	public function MapToScene3(polygon:QPolygonF_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene3", polygon]);
	};

	public function MapToScene4(path:QPainterPath_ITF):QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene4", path]);
	};

	public function MapToScene5(x:Float, y:Float):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene5", x, y]);
	};

	public function MapToScene6(x:Float, y:Float, w:Float, h:Float):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene6", x, y, w, h]);
	};

	public function ConnectMouseDoubleClickEvent(f:(event:QGraphicsSceneMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectMouseDoubleClickEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectMouseDoubleClickEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMouseDoubleClickEvent"]);
	};

	public function MouseDoubleClickEvent(event:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseDoubleClickEvent", event]);
	};

	public function MouseDoubleClickEventDefault(event:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseDoubleClickEventDefault", event]);
	};

	public function ConnectMouseMoveEvent(f:(event:QGraphicsSceneMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMouseMoveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMouseMoveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMouseMoveEvent"]);
	};

	public function MouseMoveEvent(event:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseMoveEvent", event]);
	};

	public function MouseMoveEventDefault(event:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseMoveEventDefault", event]);
	};

	public function ConnectMousePressEvent(f:(event:QGraphicsSceneMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMousePressEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMousePressEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMousePressEvent"]);
	};

	public function MousePressEvent(event:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MousePressEvent", event]);
	};

	public function MousePressEventDefault(event:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MousePressEventDefault", event]);
	};

	public function ConnectMouseReleaseEvent(f:(event:QGraphicsSceneMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMouseReleaseEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMouseReleaseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMouseReleaseEvent"]);
	};

	public function MouseReleaseEvent(event:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseReleaseEvent", event]);
	};

	public function MouseReleaseEventDefault(event:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseReleaseEventDefault", event]);
	};

	public function MoveBy(dx:Float, dy:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveBy", dx, dy]);
	};

	public function Opacity():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Opacity"]);
	};

	public function ConnectOpaqueArea(f:() -> QPainterPath) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectOpaqueArea", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectOpaqueArea() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectOpaqueArea"]);
	};

	public function OpaqueArea():QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OpaqueArea"]);
	};

	public function OpaqueAreaDefault():QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OpaqueAreaDefault"]);
	};

	public function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public function Panel():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Panel"]);
	};

	public function PanelModality():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PanelModality"]);
	};

	public function ParentItem():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentItem"]);
	};

	public function ParentObject():QGraphicsObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentObject"]);
	};

	public function ParentWidget():QGraphicsWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentWidget"]);
	};

	public function Pos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pos"]);
	};

	public function PrepareGeometryChange() {
		Internal.callLocalFunction(["", Pointer(), ___className, "PrepareGeometryChange"]);
	};

	public function RemoveSceneEventFilter(filterItem:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveSceneEventFilter", filterItem]);
	};

	public function ResetTransform() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetTransform"]);
	};

	public function Rotation():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Rotation"]);
	};

	public function Scale2():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Scale2"]);
	};

	public function Scene():QGraphicsScene {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Scene"]);
	};

	public function SceneBoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SceneBoundingRect"]);
	};

	public function ConnectSceneEvent(f:(event:QEvent) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSceneEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSceneEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSceneEvent"]);
	};

	public function SceneEvent(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SceneEvent", event]);
	};

	public function SceneEventDefault(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SceneEventDefault", event]);
	};

	public function ConnectSceneEventFilter(f:(watched:QGraphicsItem, event:QEvent) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSceneEventFilter", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSceneEventFilter() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSceneEventFilter"]);
	};

	public function SceneEventFilter(watched:QGraphicsItem_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SceneEventFilter", watched, event]);
	};

	public function SceneEventFilterDefault(watched:QGraphicsItem_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SceneEventFilterDefault", watched, event]);
	};

	public function ScenePos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScenePos"]);
	};

	public function SceneTransform():QTransform {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SceneTransform"]);
	};

	public function Scroll(dx:Float, dy:Float, rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Scroll", dx, dy, rect]);
	};

	public function SetAcceptDrops(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAcceptDrops", on]);
	};

	public function SetAcceptHoverEvents(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAcceptHoverEvents", enabled]);
	};

	public function SetAcceptTouchEvents(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAcceptTouchEvents", enabled]);
	};

	public function SetAcceptedMouseButtons(buttons:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAcceptedMouseButtons", buttons]);
	};

	public function SetActive(active:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActive", active]);
	};

	public function SetBoundingRegionGranularity(granularity:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBoundingRegionGranularity", granularity]);
	};

	public function SetCacheMode(mode:Int, logicalCacheSize:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCacheMode", mode, logicalCacheSize]);
	};

	public function SetCursor(cursor:QCursor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCursor", cursor]);
	};

	public function SetData(key:Int, value:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetData", key, value]);
	};

	public function SetEnabled(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabled", enabled]);
	};

	public function SetFiltersChildEvents(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFiltersChildEvents", enabled]);
	};

	public function SetFlag(flag:Int, enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFlag", flag, enabled]);
	};

	public function SetFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFlags", flags]);
	};

	public function SetFocus(focusReason:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocus", focusReason]);
	};

	public function SetFocusProxy(item:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocusProxy", item]);
	};

	public function SetGraphicsEffect(effect:QGraphicsEffect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGraphicsEffect", effect]);
	};

	public function SetGroup(group:QGraphicsItemGroup_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGroup", group]);
	};

	public function SetInputMethodHints(hints:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInputMethodHints", hints]);
	};

	public function SetOpacity(opacity:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpacity", opacity]);
	};

	public function SetPanelModality(panelModality:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPanelModality", panelModality]);
	};

	public function SetParentItem(newParent:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetParentItem", newParent]);
	};

	public function SetPos(pos:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPos", pos]);
	};

	public function SetPos2(x:Float, y:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPos2", x, y]);
	};

	public function SetRotation(angle:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRotation", angle]);
	};

	public function SetScale(factor:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetScale", factor]);
	};

	public function SetSelected(selected:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelected", selected]);
	};

	public function SetToolTip(toolTip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolTip", toolTip]);
	};

	public function SetTransform(matrix:QTransform_ITF, combine:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTransform", matrix, combine]);
	};

	public function SetTransformOriginPoint(origi:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTransformOriginPoint", origi]);
	};

	public function SetTransformOriginPoint2(x:Float, y:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTransformOriginPoint2", x, y]);
	};

	public function SetTransformations(transformations:Array<QGraphicsTransform>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTransformations", transformations]);
	};

	public function SetVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisible", visible]);
	};

	public function SetX(x:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetX", x]);
	};

	public function SetY(y:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetY", y]);
	};

	public function SetZValue(z:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetZValue", z]);
	};

	public function ConnectShape(f:() -> QPainterPath) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShape", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShape() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShape"]);
	};

	public function Shape():QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Shape"]);
	};

	public function ShapeDefault():QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ShapeDefault"]);
	};

	public function Show() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Show"]);
	};

	public function StackBefore(sibling:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "StackBefore", sibling]);
	};

	public function ToGraphicsObject():QGraphicsObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToGraphicsObject"]);
	};

	public function ToGraphicsObject2():QGraphicsObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToGraphicsObject2"]);
	};

	public function ToolTip():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolTip"]);
	};

	public function TopLevelItem():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TopLevelItem"]);
	};

	public function TopLevelWidget():QGraphicsWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TopLevelWidget"]);
	};

	public function Transform():QTransform {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Transform"]);
	};

	public function TransformOriginPoint():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TransformOriginPoint"]);
	};

	public function Transformations():Array<QGraphicsTransform> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Transformations"]);
	};

	public function ConnectType(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectType", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectType() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectType"]);
	};

	public function Type():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Type"]);
	};

	public function TypeDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TypeDefault"]);
	};

	public function UngrabKeyboard() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UngrabKeyboard"]);
	};

	public function UngrabMouse() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UngrabMouse"]);
	};

	public function UnsetCursor() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnsetCursor"]);
	};

	public function Update(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update", rect]);
	};

	public function Update2(x:Float, y:Float, width:Float, height:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update2", x, y, width, height]);
	};

	public function ConnectWheelEvent(f:(event:QGraphicsSceneWheelEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWheelEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWheelEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWheelEvent"]);
	};

	public function WheelEvent(event:QGraphicsSceneWheelEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WheelEvent", event]);
	};

	public function WheelEventDefault(event:QGraphicsSceneWheelEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WheelEventDefault", event]);
	};

	public function Window():QGraphicsWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Window"]);
	};

	public function X():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "X"]);
	};

	public function Y():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Y"]);
	};

	public function ZValue():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ZValue"]);
	};

	public function ConnectDestroyQGraphicsItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsItem"]);
	};

	public function DestroyQGraphicsItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsItem"]);
	};

	public function DestroyQGraphicsItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsItemDefault"]);
	};
}

function NewQGraphicsItemFromPointer(ptr:String):QGraphicsItem {
	final r = new QGraphicsItem();
	r.initFrom(ptr, "widgets.QGraphicsItem");
	return r;
}

function NewQGraphicsItem(parent:QGraphicsItem_ITF):QGraphicsItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsItem", "", parent]);
}

interface QGraphicsItemAnimation_ITF extends QObject_ITF {
	public function QGraphicsItemAnimation_PTR():QGraphicsItemAnimation;
}

class QGraphicsItemAnimation extends QObject implements QGraphicsItemAnimation_ITF {
	public function new() {
		super();
	}

	public function QGraphicsItemAnimation_PTR():QGraphicsItemAnimation {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsItemAnimation_PTR"]);
	};

	public function ConnectAfterAnimationStep(f:(step:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectAfterAnimationStep",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectAfterAnimationStep() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAfterAnimationStep"]);
	};

	public function AfterAnimationStep(step:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AfterAnimationStep", step]);
	};

	public function AfterAnimationStepDefault(step:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AfterAnimationStepDefault", step]);
	};

	public function ConnectBeforeAnimationStep(f:(step:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectBeforeAnimationStep",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectBeforeAnimationStep() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBeforeAnimationStep"]);
	};

	public function BeforeAnimationStep(step:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "BeforeAnimationStep", step]);
	};

	public function BeforeAnimationStepDefault(step:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "BeforeAnimationStepDefault", step]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function HorizontalScaleAt(step:Float):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalScaleAt", step]);
	};

	public function HorizontalShearAt(step:Float):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalShearAt", step]);
	};

	public function Item():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Item"]);
	};

	public function MatrixAt(step:Float):QMatrix {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MatrixAt", step]);
	};

	public function PosAt(step:Float):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PosAt", step]);
	};

	public function RotationAt(step:Float):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RotationAt", step]);
	};

	public function SetItem(item:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItem", item]);
	};

	public function SetPosAt(step:Float, point:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPosAt", step, point]);
	};

	public function SetRotationAt(step:Float, angle:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRotationAt", step, angle]);
	};

	public function SetScaleAt(step:Float, sx:Float, sy:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetScaleAt", step, sx, sy]);
	};

	public function SetShearAt(step:Float, sh:Float, sv:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShearAt", step, sh, sv]);
	};

	public function ConnectSetStep(f:(step:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetStep", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetStep() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetStep"]);
	};

	public function SetStep(step:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStep", step]);
	};

	public function SetStepDefault(step:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStepDefault", step]);
	};

	public function SetTimeLine(timeLine:QTimeLine_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTimeLine", timeLine]);
	};

	public function SetTranslationAt(step:Float, dx:Float, dy:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTranslationAt", step, dx, dy]);
	};

	public function TimeLine():QTimeLine {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TimeLine"]);
	};

	public function VerticalScaleAt(step:Float):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalScaleAt", step]);
	};

	public function VerticalShearAt(step:Float):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalShearAt", step]);
	};

	public function XTranslationAt(step:Float):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "XTranslationAt", step]);
	};

	public function YTranslationAt(step:Float):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "YTranslationAt", step]);
	};

	public function ConnectDestroyQGraphicsItemAnimation(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsItemAnimation",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsItemAnimation() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsItemAnimation"]);
	};

	public function DestroyQGraphicsItemAnimation() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsItemAnimation"]);
	};

	public function DestroyQGraphicsItemAnimationDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsItemAnimationDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQGraphicsItemAnimationFromPointer(ptr:String):QGraphicsItemAnimation {
	final r = new QGraphicsItemAnimation();
	r.initFrom(ptr, "widgets.QGraphicsItemAnimation");
	return r;
}

function NewQGraphicsItemAnimation(parent:QObject_ITF):QGraphicsItemAnimation {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsItemAnimation", "", parent]);
}

interface QGraphicsItemGroup_ITF extends QGraphicsItem_ITF {
	public function QGraphicsItemGroup_PTR():QGraphicsItemGroup;
}

class QGraphicsItemGroup extends QGraphicsItem implements QGraphicsItemGroup_ITF {
	public function new() {
		super();
	}

	public function QGraphicsItemGroup_PTR():QGraphicsItemGroup {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsItemGroup_PTR"]);
	};

	public function AddToGroup(item:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddToGroup", item]);
	};

	public override function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};

	public function RemoveFromGroup(item:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveFromGroup", item]);
	};

	public function ConnectDestroyQGraphicsItemGroup(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsItemGroup",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsItemGroup() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsItemGroup"]);
	};

	public function DestroyQGraphicsItemGroup() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsItemGroup"]);
	};

	public function DestroyQGraphicsItemGroupDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsItemGroupDefault"]);
	};
}

function NewQGraphicsItemGroupFromPointer(ptr:String):QGraphicsItemGroup {
	final r = new QGraphicsItemGroup();
	r.initFrom(ptr, "widgets.QGraphicsItemGroup");
	return r;
}

function NewQGraphicsItemGroup(parent:QGraphicsItem_ITF):QGraphicsItemGroup {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsItemGroup", "", parent]);
}

interface QGraphicsLayout_ITF extends QGraphicsLayoutItem_ITF {
	public function QGraphicsLayout_PTR():QGraphicsLayout;
}

class QGraphicsLayout extends QGraphicsLayoutItem implements QGraphicsLayout_ITF {
	public function new() {
		super();
	}

	public function QGraphicsLayout_PTR():QGraphicsLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsLayout_PTR"]);
	};

	public function Activate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Activate"]);
	};

	public function AddChildLayoutItem(layoutItem:QGraphicsLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddChildLayoutItem", layoutItem]);
	};

	public function ConnectCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCount"]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function ConnectInvalidate(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInvalidate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInvalidate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInvalidate"]);
	};

	public function Invalidate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Invalidate"]);
	};

	public function InvalidateDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "InvalidateDefault"]);
	};

	public function IsActivated():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsActivated"]);
	};

	public function ConnectItemAt(f:(i:Int) -> QGraphicsLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemAt"]);
	};

	public function ItemAt(i:Int):QGraphicsLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", i]);
	};

	public function ConnectRemoveAt(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRemoveAt", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRemoveAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRemoveAt"]);
	};

	public function RemoveAt(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveAt", index]);
	};

	public function SetContentsMargins(left:Float, top:Float, right:Float, bottom:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetContentsMargins", left, top, right, bottom]);
	};

	public function ConnectWidgetEvent(f:(e:QEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWidgetEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWidgetEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWidgetEvent"]);
	};

	public function WidgetEvent(e:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WidgetEvent", e]);
	};

	public function WidgetEventDefault(e:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WidgetEventDefault", e]);
	};

	public function ConnectDestroyQGraphicsLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsLayout",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsLayout"]);
	};

	public function DestroyQGraphicsLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsLayout"]);
	};

	public function DestroyQGraphicsLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsLayoutDefault"]);
	};

	public override function SizeHint(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint", which, constraint]);
	};

	public function SizeHintDefault(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault", which, constraint]);
	};
}

function NewQGraphicsLayoutFromPointer(ptr:String):QGraphicsLayout {
	final r = new QGraphicsLayout();
	r.initFrom(ptr, "widgets.QGraphicsLayout");
	return r;
}

function NewQGraphicsLayout(parent:QGraphicsLayoutItem_ITF):QGraphicsLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsLayout", "", parent]);
}

interface QGraphicsLayoutItem_ITF {
	public function QGraphicsLayoutItem_PTR():QGraphicsLayoutItem;
}

class QGraphicsLayoutItem extends Internal implements QGraphicsLayoutItem_ITF {
	public function new() {
		super();
	}

	public function QGraphicsLayoutItem_PTR():QGraphicsLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsLayoutItem_PTR"]);
	};

	public function ContentsRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ContentsRect"]);
	};

	public function EffectiveSizeHint(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EffectiveSizeHint", which, constraint]);
	};

	public function Geometry():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Geometry"]);
	};

	public function ConnectGetContentsMargins(f:(left:Float, top:Float, right:Float, bottom:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectGetContentsMargins",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectGetContentsMargins() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGetContentsMargins"]);
	};

	public function GetContentsMargins(left:Float, top:Float, right:Float, bottom:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GetContentsMargins", left, top, right, bottom]);
	};

	public function GetContentsMarginsDefault(left:Float, top:Float, right:Float, bottom:Float) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"GetContentsMarginsDefault",
			left,
			top,
			right,
			bottom
		]);
	};

	public function GraphicsItem():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GraphicsItem"]);
	};

	public function IsLayout():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsLayout"]);
	};

	public function MaximumHeight():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumHeight"]);
	};

	public function MaximumSize():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSize"]);
	};

	public function MaximumWidth():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumWidth"]);
	};

	public function MinimumHeight():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumHeight"]);
	};

	public function MinimumSize():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSize"]);
	};

	public function MinimumWidth():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumWidth"]);
	};

	public function OwnedByLayout():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OwnedByLayout"]);
	};

	public function ParentLayoutItem():QGraphicsLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentLayoutItem"]);
	};

	public function PreferredHeight():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PreferredHeight"]);
	};

	public function PreferredSize():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PreferredSize"]);
	};

	public function PreferredWidth():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PreferredWidth"]);
	};

	public function ConnectSetGeometry(f:(rect:QRectF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetGeometry", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetGeometry"]);
	};

	public function SetGeometry(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometry", rect]);
	};

	public function SetGeometryDefault(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometryDefault", rect]);
	};

	public function SetGraphicsItem(item:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGraphicsItem", item]);
	};

	public function SetMaximumHeight(height:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumHeight", height]);
	};

	public function SetMaximumSize(size:QSizeF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumSize", size]);
	};

	public function SetMaximumSize2(w:Float, h:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumSize2", w, h]);
	};

	public function SetMaximumWidth(width:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumWidth", width]);
	};

	public function SetMinimumHeight(height:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumHeight", height]);
	};

	public function SetMinimumSize(size:QSizeF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumSize", size]);
	};

	public function SetMinimumSize2(w:Float, h:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumSize2", w, h]);
	};

	public function SetMinimumWidth(width:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumWidth", width]);
	};

	public function SetOwnedByLayout(ownership:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOwnedByLayout", ownership]);
	};

	public function SetParentLayoutItem(parent:QGraphicsLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetParentLayoutItem", parent]);
	};

	public function SetPreferredHeight(height:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPreferredHeight", height]);
	};

	public function SetPreferredSize(size:QSizeF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPreferredSize", size]);
	};

	public function SetPreferredSize2(w:Float, h:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPreferredSize2", w, h]);
	};

	public function SetPreferredWidth(width:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPreferredWidth", width]);
	};

	public function SetSizePolicy(policy:QSizePolicy_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizePolicy", policy]);
	};

	public function SetSizePolicy2(hPolicy:Int, vPolicy:Int, controlType:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizePolicy2", hPolicy, vPolicy, controlType]);
	};

	public function ConnectSizeHint(f:(which:Int, constraint:QSizeF) -> QSizeF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public function SizeHint(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint", which, constraint]);
	};

	public function SizePolicy():QSizePolicy {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizePolicy"]);
	};

	public function ConnectUpdateGeometry(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdateGeometry", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdateGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateGeometry"]);
	};

	public function UpdateGeometry() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometry"]);
	};

	public function UpdateGeometryDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometryDefault"]);
	};

	public function ConnectDestroyQGraphicsLayoutItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsLayoutItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsLayoutItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsLayoutItem"]);
	};

	public function DestroyQGraphicsLayoutItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsLayoutItem"]);
	};

	public function DestroyQGraphicsLayoutItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsLayoutItemDefault"]);
	};
}

function NewQGraphicsLayoutItemFromPointer(ptr:String):QGraphicsLayoutItem {
	final r = new QGraphicsLayoutItem();
	r.initFrom(ptr, "widgets.QGraphicsLayoutItem");
	return r;
}

function NewQGraphicsLayoutItem(parent:QGraphicsLayoutItem_ITF, isLayout:Bool):QGraphicsLayoutItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsLayoutItem", "", parent, isLayout]);
}

interface QGraphicsLineItem_ITF extends QGraphicsItem_ITF {
	public function QGraphicsLineItem_PTR():QGraphicsLineItem;
}

class QGraphicsLineItem extends QGraphicsItem implements QGraphicsLineItem_ITF {
	public function new() {
		super();
	}

	public function QGraphicsLineItem_PTR():QGraphicsLineItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsLineItem_PTR"]);
	};

	public override function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public function Line():QLineF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Line"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};

	public function Pen():QPen {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pen"]);
	};

	public function SetLine(line:QLineF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLine", line]);
	};

	public function SetLine2(x1:Float, y1:Float, x2:Float, y2:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLine2", x1, y1, x2, y2]);
	};

	public function SetPen(pen:QPen_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPen", pen]);
	};

	public function ConnectDestroyQGraphicsLineItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsLineItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsLineItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsLineItem"]);
	};

	public function DestroyQGraphicsLineItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsLineItem"]);
	};

	public function DestroyQGraphicsLineItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsLineItemDefault"]);
	};
}

function NewQGraphicsLineItemFromPointer(ptr:String):QGraphicsLineItem {
	final r = new QGraphicsLineItem();
	r.initFrom(ptr, "widgets.QGraphicsLineItem");
	return r;
}

function NewQGraphicsLineItem(parent:QGraphicsItem_ITF):QGraphicsLineItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsLineItem", "", parent]);
}

function NewQGraphicsLineItem2(line:QLineF_ITF, parent:QGraphicsItem_ITF):QGraphicsLineItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsLineItem2", "", line, parent]);
}

function NewQGraphicsLineItem3(x1:Float, y1:Float, x2:Float, y2:Float, parent:QGraphicsItem_ITF):QGraphicsLineItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsLineItem3", "", x1, y1, x2, y2, parent]);
}

interface QGraphicsLinearLayout_ITF extends QGraphicsLayout_ITF {
	public function QGraphicsLinearLayout_PTR():QGraphicsLinearLayout;
}

class QGraphicsLinearLayout extends QGraphicsLayout implements QGraphicsLinearLayout_ITF {
	public function new() {
		super();
	}

	public function QGraphicsLinearLayout_PTR():QGraphicsLinearLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsLinearLayout_PTR"]);
	};

	public function AddItem(item:QGraphicsLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem", item]);
	};

	public function AddStretch(stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddStretch", stretch]);
	};

	public function Alignment(item:QGraphicsLayoutItem_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment", item]);
	};

	public override function ConnectCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCount"]);
	};

	public override function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function CountDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CountDefault"]);
	};

	public function InsertItem(index:Int, item:QGraphicsLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertItem", index, item]);
	};

	public function InsertStretch(index:Int, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertStretch", index, stretch]);
	};

	public override function ConnectItemAt(f:(index:Int) -> QGraphicsLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectItemAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemAt"]);
	};

	public override function ItemAt(index:Int):QGraphicsLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", index]);
	};

	public function ItemAtDefault(index:Int):QGraphicsLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAtDefault", index]);
	};

	public function ItemSpacing(index:Int):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemSpacing", index]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public override function ConnectRemoveAt(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRemoveAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectRemoveAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRemoveAt"]);
	};

	public override function RemoveAt(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveAt", index]);
	};

	public function RemoveAtDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveAtDefault", index]);
	};

	public function RemoveItem(item:QGraphicsLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveItem", item]);
	};

	public function SetAlignment(item:QGraphicsLayoutItem_ITF, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", item, alignment]);
	};

	public function SetItemSpacing(index:Int, spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemSpacing", index, spacing]);
	};

	public function SetOrientation(orientation:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientation", orientation]);
	};

	public function SetSpacing(spacing:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSpacing", spacing]);
	};

	public function SetStretchFactor(item:QGraphicsLayoutItem_ITF, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStretchFactor", item, stretch]);
	};

	public override function ConnectSizeHint(f:(which:Int, constraint:QSizeF) -> QSizeF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint", which, constraint]);
	};

	public override function SizeHintDefault(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault", which, constraint]);
	};

	public function Spacing():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Spacing"]);
	};

	public function StretchFactor(item:QGraphicsLayoutItem_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StretchFactor", item]);
	};

	public function ConnectDestroyQGraphicsLinearLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsLinearLayout",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsLinearLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsLinearLayout"]);
	};

	public function DestroyQGraphicsLinearLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsLinearLayout"]);
	};

	public function DestroyQGraphicsLinearLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsLinearLayoutDefault"]);
	};
}

function NewQGraphicsLinearLayoutFromPointer(ptr:String):QGraphicsLinearLayout {
	final r = new QGraphicsLinearLayout();
	r.initFrom(ptr, "widgets.QGraphicsLinearLayout");
	return r;
}

function NewQGraphicsLinearLayout(parent:QGraphicsLayoutItem_ITF):QGraphicsLinearLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsLinearLayout", "", parent]);
}

function NewQGraphicsLinearLayout2(orientation:Int, parent:QGraphicsLayoutItem_ITF):QGraphicsLinearLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsLinearLayout2", "", orientation, parent]);
}

interface QGraphicsObject_ITF extends QGraphicsItem_ITF {
	public function QGraphicsObject_PTR():QGraphicsObject;
	public function QObject_PTR():QObject;
}

class QGraphicsObject extends QGraphicsItem implements QGraphicsObject_ITF {
	public function QObject_PTR():QObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QObject_PTR"]);
	}

	public function new() {
		super();
	}

	public function QGraphicsObject_PTR():QGraphicsObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsObject_PTR"]);
	};

	public function ConnectEnabledChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEnabledChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEnabledChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEnabledChanged"]);
	};

	public function EnabledChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnabledChanged"]);
	};

	public function ConnectEvent(f:(ev:QEvent) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEvent"]);
	};

	public function Event(ev:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Event", ev]);
	};

	public function EventDefault(ev:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", ev]);
	};

	public function GrabGesture(gesture:Int, flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabGesture", gesture, flags]);
	};

	public function ConnectOpacityChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectOpacityChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectOpacityChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectOpacityChanged"]);
	};

	public function OpacityChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "OpacityChanged"]);
	};

	public function ConnectParentChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectParentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectParentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectParentChanged"]);
	};

	public function ParentChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ParentChanged"]);
	};

	public function ConnectRotationChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRotationChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRotationChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRotationChanged"]);
	};

	public function RotationChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RotationChanged"]);
	};

	public function ConnectScaleChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScaleChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScaleChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScaleChanged"]);
	};

	public function ScaleChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScaleChanged"]);
	};

	public function UngrabGesture(gesture:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UngrabGesture", gesture]);
	};

	public function ConnectUpdateMicroFocus(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdateMicroFocus", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdateMicroFocus() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateMicroFocus"]);
	};

	public function UpdateMicroFocus() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateMicroFocus"]);
	};

	public function UpdateMicroFocusDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateMicroFocusDefault"]);
	};

	public function ConnectVisibleChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVisibleChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectVisibleChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisibleChanged"]);
	};

	public function VisibleChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "VisibleChanged"]);
	};

	public function ConnectXChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectXChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectXChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectXChanged"]);
	};

	public function XChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "XChanged"]);
	};

	public function ConnectYChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectYChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectYChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectYChanged"]);
	};

	public function YChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "YChanged"]);
	};

	public function ConnectZChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectZChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectZChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectZChanged"]);
	};

	public function ZChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ZChanged"]);
	};

	public function ConnectDestroyQGraphicsObject(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsObject",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsObject() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsObject"]);
	};

	public function DestroyQGraphicsObject() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsObject"]);
	};

	public function DestroyQGraphicsObjectDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsObjectDefault"]);
	};

	public function Parent_QGraphicsObject():QGraphicsObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Parent"]);
	};

	public function SetParent_QGraphicsObject(parent:QGraphicsObject_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetParent", parent]);
	};

	public override function Opacity():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Opacity"]);
	};

	public override function SetOpacity(opacity:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpacity", opacity]);
	};

	public override function IsEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEnabled"]);
	};

	public override function SetEnabled(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabled", enabled]);
	};

	public override function IsVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsVisible"]);
	};

	public override function SetVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisible", visible]);
	};

	public override function Pos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pos"]);
	};

	public function SetPos_QObject(pos:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPos", pos]);
	};

	public override function X():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "X"]);
	};

	public override function SetX(x:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetX", x]);
	};

	public override function Y():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Y"]);
	};

	public override function SetY(y:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetY", y]);
	};

	public override function ZValue():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ZValue"]);
	};

	public override function SetZValue(z:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetZValue", z]);
	};

	public override function Rotation():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Rotation"]);
	};

	public override function SetRotation(rotation:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRotation", rotation]);
	};

	public function Scale():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Scale"]);
	};

	public override function SetScale(scale:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetScale", scale]);
	};

	public override function TransformOriginPoint():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TransformOriginPoint"]);
	};

	public function SetTransformOriginPoint_QObject(transformOriginPoint:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTransformOriginPoint", transformOriginPoint]);
	};

	public function GraphicsEffect_QObject():QGraphicsEffect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GraphicsEffect"]);
	};

	public function SetGraphicsEffect_QObject(effect:QGraphicsEffect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGraphicsEffect", effect]);
	};

	public function ChildEvent(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEvent", event]);
	};

	public function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public function ConnectNotify(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotify", sign]);
	};

	public function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public function CustomEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEvent", event]);
	};

	public function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public function DeleteLater() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLater"]);
	};

	public function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public function DisconnectNotify(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotify", sign]);
	};

	public function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public function EventFilter(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilter", watched, event]);
	};

	public function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public function MetaObject():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObject"]);
	};

	public function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public function TimerEvent(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEvent", event]);
	};

	public function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};
}

function NewQGraphicsObjectFromPointer(ptr:String):QGraphicsObject {
	final r = new QGraphicsObject();
	r.initFrom(ptr, "widgets.QGraphicsObject");
	return r;
}

function NewQGraphicsObject(parent:QGraphicsItem_ITF):QGraphicsObject {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsObject", "", parent]);
}

interface QGraphicsOpacityEffect_ITF extends QGraphicsEffect_ITF {
	public function QGraphicsOpacityEffect_PTR():QGraphicsOpacityEffect;
}

class QGraphicsOpacityEffect extends QGraphicsEffect implements QGraphicsOpacityEffect_ITF {
	public function new() {
		super();
	}

	public function QGraphicsOpacityEffect_PTR():QGraphicsOpacityEffect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsOpacityEffect_PTR"]);
	};

	public override function ConnectDraw(f:(painter:QPainter) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDraw", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDraw() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDraw"]);
	};

	public override function Draw(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Draw", painter]);
	};

	public function DrawDefault(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawDefault", painter]);
	};

	public function Opacity():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Opacity"]);
	};

	public function ConnectOpacityChanged(f:(opacity:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectOpacityChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectOpacityChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectOpacityChanged"]);
	};

	public function OpacityChanged(opacity:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OpacityChanged", opacity]);
	};

	public function OpacityMask():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OpacityMask"]);
	};

	public function ConnectOpacityMaskChanged(f:(mask:QBrush) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectOpacityMaskChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectOpacityMaskChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectOpacityMaskChanged"]);
	};

	public function OpacityMaskChanged(mask:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OpacityMaskChanged", mask]);
	};

	public function ConnectSetOpacity(f:(opacity:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetOpacity", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetOpacity() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOpacity"]);
	};

	public function SetOpacity(opacity:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpacity", opacity]);
	};

	public function SetOpacityDefault(opacity:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpacityDefault", opacity]);
	};

	public function ConnectSetOpacityMask(f:(mask:QBrush) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetOpacityMask", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetOpacityMask() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOpacityMask"]);
	};

	public function SetOpacityMask(mask:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpacityMask", mask]);
	};

	public function SetOpacityMaskDefault(mask:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpacityMaskDefault", mask]);
	};

	public function ConnectDestroyQGraphicsOpacityEffect(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsOpacityEffect",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsOpacityEffect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsOpacityEffect"]);
	};

	public function DestroyQGraphicsOpacityEffect() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsOpacityEffect"]);
	};

	public function DestroyQGraphicsOpacityEffectDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsOpacityEffectDefault"]);
	};
}

function NewQGraphicsOpacityEffectFromPointer(ptr:String):QGraphicsOpacityEffect {
	final r = new QGraphicsOpacityEffect();
	r.initFrom(ptr, "widgets.QGraphicsOpacityEffect");
	return r;
}

function NewQGraphicsOpacityEffect(parent:QObject_ITF):QGraphicsOpacityEffect {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsOpacityEffect", "", parent]);
}

interface QGraphicsPathItem_ITF extends QAbstractGraphicsShapeItem_ITF {
	public function QGraphicsPathItem_PTR():QGraphicsPathItem;
}

class QGraphicsPathItem extends QAbstractGraphicsShapeItem implements QGraphicsPathItem_ITF {
	public function new() {
		super();
	}

	public function QGraphicsPathItem_PTR():QGraphicsPathItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsPathItem_PTR"]);
	};

	public override function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public override function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public override function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};

	public function Path():QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Path"]);
	};

	public function SetPath(path:QPainterPath_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPath", path]);
	};

	public function ConnectDestroyQGraphicsPathItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsPathItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsPathItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsPathItem"]);
	};

	public function DestroyQGraphicsPathItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsPathItem"]);
	};

	public function DestroyQGraphicsPathItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsPathItemDefault"]);
	};
}

function NewQGraphicsPathItemFromPointer(ptr:String):QGraphicsPathItem {
	final r = new QGraphicsPathItem();
	r.initFrom(ptr, "widgets.QGraphicsPathItem");
	return r;
}

function NewQGraphicsPathItem(parent:QGraphicsItem_ITF):QGraphicsPathItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsPathItem", "", parent]);
}

function NewQGraphicsPathItem2(path:QPainterPath_ITF, parent:QGraphicsItem_ITF):QGraphicsPathItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsPathItem2", "", path, parent]);
}

interface QGraphicsPixmapItem_ITF extends QGraphicsItem_ITF {
	public function QGraphicsPixmapItem_PTR():QGraphicsPixmapItem;
}

class QGraphicsPixmapItem extends QGraphicsItem implements QGraphicsPixmapItem_ITF {
	public function new() {
		super();
	}

	public function QGraphicsPixmapItem_PTR():QGraphicsPixmapItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsPixmapItem_PTR"]);
	};

	public override function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public function Offset():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Offset"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};

	public function Pixmap():QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pixmap"]);
	};

	public function SetOffset(offset:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffset", offset]);
	};

	public function SetOffset2(x:Float, y:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffset2", x, y]);
	};

	public function SetPixmap(pixmap:QPixmap_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPixmap", pixmap]);
	};

	public function SetShapeMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShapeMode", mode]);
	};

	public function SetTransformationMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTransformationMode", mode]);
	};

	public function ShapeMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ShapeMode"]);
	};

	public function TransformationMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TransformationMode"]);
	};

	public function ConnectDestroyQGraphicsPixmapItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsPixmapItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsPixmapItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsPixmapItem"]);
	};

	public function DestroyQGraphicsPixmapItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsPixmapItem"]);
	};

	public function DestroyQGraphicsPixmapItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsPixmapItemDefault"]);
	};
}

function NewQGraphicsPixmapItemFromPointer(ptr:String):QGraphicsPixmapItem {
	final r = new QGraphicsPixmapItem();
	r.initFrom(ptr, "widgets.QGraphicsPixmapItem");
	return r;
}

function NewQGraphicsPixmapItem(parent:QGraphicsItem_ITF):QGraphicsPixmapItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsPixmapItem", "", parent]);
}

function NewQGraphicsPixmapItem2(pixmap:QPixmap_ITF, parent:QGraphicsItem_ITF):QGraphicsPixmapItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsPixmapItem2", "", pixmap, parent]);
}

interface QGraphicsPolygonItem_ITF extends QAbstractGraphicsShapeItem_ITF {
	public function QGraphicsPolygonItem_PTR():QGraphicsPolygonItem;
}

class QGraphicsPolygonItem extends QAbstractGraphicsShapeItem implements QGraphicsPolygonItem_ITF {
	public function new() {
		super();
	}

	public function QGraphicsPolygonItem_PTR():QGraphicsPolygonItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsPolygonItem_PTR"]);
	};

	public override function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public override function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public function FillRule():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FillRule"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public override function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};

	public function Polygon():QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Polygon"]);
	};

	public function SetFillRule(rule:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFillRule", rule]);
	};

	public function SetPolygon(polygon:QPolygonF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPolygon", polygon]);
	};

	public function ConnectDestroyQGraphicsPolygonItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsPolygonItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsPolygonItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsPolygonItem"]);
	};

	public function DestroyQGraphicsPolygonItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsPolygonItem"]);
	};

	public function DestroyQGraphicsPolygonItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsPolygonItemDefault"]);
	};
}

function NewQGraphicsPolygonItemFromPointer(ptr:String):QGraphicsPolygonItem {
	final r = new QGraphicsPolygonItem();
	r.initFrom(ptr, "widgets.QGraphicsPolygonItem");
	return r;
}

function NewQGraphicsPolygonItem(parent:QGraphicsItem_ITF):QGraphicsPolygonItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsPolygonItem", "", parent]);
}

function NewQGraphicsPolygonItem2(polygon:QPolygonF_ITF, parent:QGraphicsItem_ITF):QGraphicsPolygonItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsPolygonItem2", "", polygon, parent]);
}

interface QGraphicsProxyWidget_ITF extends QGraphicsWidget_ITF {
	public function QGraphicsProxyWidget_PTR():QGraphicsProxyWidget;
}

class QGraphicsProxyWidget extends QGraphicsWidget implements QGraphicsProxyWidget_ITF {
	public function new() {
		super();
	}

	public function QGraphicsProxyWidget_PTR():QGraphicsProxyWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsProxyWidget_PTR"]);
	};

	public function CreateProxyForChildWidget(child:QWidget_ITF):QGraphicsProxyWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateProxyForChildWidget", child]);
	};

	public function ConnectNewProxyWidget(f:(child:QWidget) -> QGraphicsProxyWidget) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectNewProxyWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectNewProxyWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectNewProxyWidget"]);
	};

	public function NewProxyWidget(child:QWidget_ITF):QGraphicsProxyWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NewProxyWidget", child]);
	};

	public function NewProxyWidgetDefault(child:QWidget_ITF):QGraphicsProxyWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NewProxyWidgetDefault", child]);
	};

	public function SetWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWidget", widget]);
	};

	public function SubWidgetRect(widget:QWidget_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubWidgetRect", widget]);
	};

	public function Widget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget"]);
	};

	public function ConnectDestroyQGraphicsProxyWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsProxyWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsProxyWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsProxyWidget"]);
	};

	public function DestroyQGraphicsProxyWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsProxyWidget"]);
	};

	public function DestroyQGraphicsProxyWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsProxyWidgetDefault"]);
	};
}

function NewQGraphicsProxyWidgetFromPointer(ptr:String):QGraphicsProxyWidget {
	final r = new QGraphicsProxyWidget();
	r.initFrom(ptr, "widgets.QGraphicsProxyWidget");
	return r;
}

function NewQGraphicsProxyWidget(parent:QGraphicsItem_ITF, wFlags:Int):QGraphicsProxyWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsProxyWidget", "", parent, wFlags]);
}

interface QGraphicsRectItem_ITF extends QAbstractGraphicsShapeItem_ITF {
	public function QGraphicsRectItem_PTR():QGraphicsRectItem;
}

class QGraphicsRectItem extends QAbstractGraphicsShapeItem implements QGraphicsRectItem_ITF {
	public function new() {
		super();
	}

	public function QGraphicsRectItem_PTR():QGraphicsRectItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsRectItem_PTR"]);
	};

	public override function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public override function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public override function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};

	public function Rect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Rect"]);
	};

	public function SetRect(rectangle:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRect", rectangle]);
	};

	public function SetRect2(x:Float, y:Float, width:Float, height:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRect2", x, y, width, height]);
	};

	public function ConnectDestroyQGraphicsRectItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsRectItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsRectItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsRectItem"]);
	};

	public function DestroyQGraphicsRectItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsRectItem"]);
	};

	public function DestroyQGraphicsRectItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsRectItemDefault"]);
	};
}

function NewQGraphicsRectItemFromPointer(ptr:String):QGraphicsRectItem {
	final r = new QGraphicsRectItem();
	r.initFrom(ptr, "widgets.QGraphicsRectItem");
	return r;
}

function NewQGraphicsRectItem(parent:QGraphicsItem_ITF):QGraphicsRectItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsRectItem", "", parent]);
}

function NewQGraphicsRectItem2(rect:QRectF_ITF, parent:QGraphicsItem_ITF):QGraphicsRectItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsRectItem2", "", rect, parent]);
}

function NewQGraphicsRectItem3(x:Float, y:Float, width:Float, height:Float, parent:QGraphicsItem_ITF):QGraphicsRectItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsRectItem3", "", x, y, width, height, parent]);
}

interface QGraphicsRotation_ITF extends QGraphicsTransform_ITF {
	public function QGraphicsRotation_PTR():QGraphicsRotation;
}

class QGraphicsRotation extends QGraphicsTransform implements QGraphicsRotation_ITF {
	public function new() {
		super();
	}

	public function QGraphicsRotation_PTR():QGraphicsRotation {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsRotation_PTR"]);
	};

	public function Angle():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Angle"]);
	};

	public function ConnectAngleChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAngleChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAngleChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAngleChanged"]);
	};

	public function AngleChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AngleChanged"]);
	};

	public override function ConnectApplyTo(f:(matrix:QMatrix4x4) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectApplyTo", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectApplyTo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectApplyTo"]);
	};

	public override function ApplyTo(matrix:QMatrix4x4_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ApplyTo", matrix]);
	};

	public function ApplyToDefault(matrix:QMatrix4x4_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ApplyToDefault", matrix]);
	};

	public function Axis():QVector3D {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Axis"]);
	};

	public function ConnectAxisChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAxisChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAxisChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAxisChanged"]);
	};

	public function AxisChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AxisChanged"]);
	};

	public function Origin():QVector3D {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Origin"]);
	};

	public function ConnectOriginChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectOriginChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectOriginChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectOriginChanged"]);
	};

	public function OriginChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "OriginChanged"]);
	};

	public function SetAngle(vqr:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAngle", vqr]);
	};

	public function SetAxis(axis:QVector3D_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAxis", axis]);
	};

	public function SetAxis2(axis:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAxis2", axis]);
	};

	public function SetOrigin(point:QVector3D_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrigin", point]);
	};

	public function ConnectDestroyQGraphicsRotation(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsRotation",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsRotation() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsRotation"]);
	};

	public function DestroyQGraphicsRotation() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsRotation"]);
	};

	public function DestroyQGraphicsRotationDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsRotationDefault"]);
	};
}

function NewQGraphicsRotationFromPointer(ptr:String):QGraphicsRotation {
	final r = new QGraphicsRotation();
	r.initFrom(ptr, "widgets.QGraphicsRotation");
	return r;
}

function NewQGraphicsRotation(parent:QObject_ITF):QGraphicsRotation {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsRotation", "", parent]);
}

interface QGraphicsScale_ITF extends QGraphicsTransform_ITF {
	public function QGraphicsScale_PTR():QGraphicsScale;
}

class QGraphicsScale extends QGraphicsTransform implements QGraphicsScale_ITF {
	public function new() {
		super();
	}

	public function QGraphicsScale_PTR():QGraphicsScale {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsScale_PTR"]);
	};

	public override function ConnectApplyTo(f:(matrix:QMatrix4x4) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectApplyTo", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectApplyTo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectApplyTo"]);
	};

	public override function ApplyTo(matrix:QMatrix4x4_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ApplyTo", matrix]);
	};

	public function ApplyToDefault(matrix:QMatrix4x4_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ApplyToDefault", matrix]);
	};

	public function Origin():QVector3D {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Origin"]);
	};

	public function ConnectOriginChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectOriginChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectOriginChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectOriginChanged"]);
	};

	public function OriginChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "OriginChanged"]);
	};

	public function ConnectScaleChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScaleChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScaleChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScaleChanged"]);
	};

	public function ScaleChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScaleChanged"]);
	};

	public function SetOrigin(point:QVector3D_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrigin", point]);
	};

	public function SetXScale(vqr:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetXScale", vqr]);
	};

	public function SetYScale(vqr:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetYScale", vqr]);
	};

	public function SetZScale(vqr:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetZScale", vqr]);
	};

	public function XScale():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "XScale"]);
	};

	public function ConnectXScaleChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectXScaleChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectXScaleChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectXScaleChanged"]);
	};

	public function XScaleChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "XScaleChanged"]);
	};

	public function YScale():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "YScale"]);
	};

	public function ConnectYScaleChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectYScaleChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectYScaleChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectYScaleChanged"]);
	};

	public function YScaleChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "YScaleChanged"]);
	};

	public function ZScale():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ZScale"]);
	};

	public function ConnectZScaleChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectZScaleChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectZScaleChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectZScaleChanged"]);
	};

	public function ZScaleChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ZScaleChanged"]);
	};

	public function ConnectDestroyQGraphicsScale(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsScale",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsScale() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsScale"]);
	};

	public function DestroyQGraphicsScale() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsScale"]);
	};

	public function DestroyQGraphicsScaleDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsScaleDefault"]);
	};
}

function NewQGraphicsScaleFromPointer(ptr:String):QGraphicsScale {
	final r = new QGraphicsScale();
	r.initFrom(ptr, "widgets.QGraphicsScale");
	return r;
}

function NewQGraphicsScale(parent:QObject_ITF):QGraphicsScale {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsScale", "", parent]);
}

interface QGraphicsScene_ITF extends QObject_ITF {
	public function QGraphicsScene_PTR():QGraphicsScene;
}

class QGraphicsScene extends QObject implements QGraphicsScene_ITF {
	public function new() {
		super();
	}

	public function QGraphicsScene_PTR():QGraphicsScene {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsScene_PTR"]);
	};

	public function ActivePanel():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActivePanel"]);
	};

	public function ActiveWindow():QGraphicsWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActiveWindow"]);
	};

	public function AddEllipse(rect:QRectF_ITF, pen:QPen_ITF, brush:QBrush_ITF):QGraphicsEllipseItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddEllipse", rect, pen, brush]);
	};

	public function AddEllipse2(x:Float, y:Float, w:Float, h:Float, pen:QPen_ITF, brush:QBrush_ITF):QGraphicsEllipseItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddEllipse2", x, y, w, h, pen, brush]);
	};

	public function AddItem(item:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem", item]);
	};

	public function AddLine(line:QLineF_ITF, pen:QPen_ITF):QGraphicsLineItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddLine", line, pen]);
	};

	public function AddLine2(x1:Float, y1:Float, x2:Float, y2:Float, pen:QPen_ITF):QGraphicsLineItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddLine2", x1, y1, x2, y2, pen]);
	};

	public function AddPath(path:QPainterPath_ITF, pen:QPen_ITF, brush:QBrush_ITF):QGraphicsPathItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddPath", path, pen, brush]);
	};

	public function AddPixmap(pixmap:QPixmap_ITF):QGraphicsPixmapItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddPixmap", pixmap]);
	};

	public function AddPolygon(polygon:QPolygonF_ITF, pen:QPen_ITF, brush:QBrush_ITF):QGraphicsPolygonItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddPolygon", polygon, pen, brush]);
	};

	public function AddRect(rect:QRectF_ITF, pen:QPen_ITF, brush:QBrush_ITF):QGraphicsRectItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddRect", rect, pen, brush]);
	};

	public function AddRect2(x:Float, y:Float, w:Float, h:Float, pen:QPen_ITF, brush:QBrush_ITF):QGraphicsRectItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddRect2", x, y, w, h, pen, brush]);
	};

	public function AddSimpleText(text:String, font:QFont_ITF):QGraphicsSimpleTextItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddSimpleText", text, font]);
	};

	public function AddText(text:String, font:QFont_ITF):QGraphicsTextItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddText", text, font]);
	};

	public function AddWidget(widget:QWidget_ITF, wFlags:Int):QGraphicsProxyWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddWidget", widget, wFlags]);
	};

	public function ConnectAdvance(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAdvance", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAdvance() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAdvance"]);
	};

	public function Advance() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Advance"]);
	};

	public function AdvanceDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AdvanceDefault"]);
	};

	public function BackgroundBrush():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BackgroundBrush"]);
	};

	public function BspTreeDepth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BspTreeDepth"]);
	};

	public function ConnectChanged(f:(region:Array<QRectF>) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectChanged"]);
	};

	public function Changed(region:Array<QRectF>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Changed", region]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function ClearFocus() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearFocus"]);
	};

	public function ConnectClearSelection(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClearSelection", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClearSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClearSelection"]);
	};

	public function ClearSelection() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearSelection"]);
	};

	public function ClearSelectionDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearSelectionDefault"]);
	};

	public function CollidingItems(item:QGraphicsItem_ITF, mode:Int):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CollidingItems", item, mode]);
	};

	public function ConnectContextMenuEvent(f:(contextMenuEvent:QGraphicsSceneContextMenuEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectContextMenuEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectContextMenuEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectContextMenuEvent"]);
	};

	public function ContextMenuEvent(contextMenuEvent:QGraphicsSceneContextMenuEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ContextMenuEvent", contextMenuEvent]);
	};

	public function ContextMenuEventDefault(contextMenuEvent:QGraphicsSceneContextMenuEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ContextMenuEventDefault", contextMenuEvent]);
	};

	public function CreateItemGroup(items:Array<QGraphicsItem>):QGraphicsItemGroup {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateItemGroup", items]);
	};

	public function DestroyItemGroup(group:QGraphicsItemGroup_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyItemGroup", group]);
	};

	public function ConnectDragEnterEvent(f:(event:QGraphicsSceneDragDropEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDragEnterEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDragEnterEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDragEnterEvent"]);
	};

	public function DragEnterEvent(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragEnterEvent", event]);
	};

	public function DragEnterEventDefault(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragEnterEventDefault", event]);
	};

	public function ConnectDragLeaveEvent(f:(event:QGraphicsSceneDragDropEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDragLeaveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDragLeaveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDragLeaveEvent"]);
	};

	public function DragLeaveEvent(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragLeaveEvent", event]);
	};

	public function DragLeaveEventDefault(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragLeaveEventDefault", event]);
	};

	public function ConnectDragMoveEvent(f:(event:QGraphicsSceneDragDropEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDragMoveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDragMoveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDragMoveEvent"]);
	};

	public function DragMoveEvent(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragMoveEvent", event]);
	};

	public function DragMoveEventDefault(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragMoveEventDefault", event]);
	};

	public function ConnectDrawBackground(f:(painter:QPainter, rect:QRectF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawBackground", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawBackground() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawBackground"]);
	};

	public function DrawBackground(painter:QPainter_ITF, rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawBackground", painter, rect]);
	};

	public function DrawBackgroundDefault(painter:QPainter_ITF, rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawBackgroundDefault", painter, rect]);
	};

	public function ConnectDrawForeground(f:(painter:QPainter, rect:QRectF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawForeground", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawForeground() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawForeground"]);
	};

	public function DrawForeground(painter:QPainter_ITF, rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawForeground", painter, rect]);
	};

	public function DrawForegroundDefault(painter:QPainter_ITF, rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawForegroundDefault", painter, rect]);
	};

	public function ConnectDropEvent(f:(event:QGraphicsSceneDragDropEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDropEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDropEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDropEvent"]);
	};

	public function DropEvent(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DropEvent", event]);
	};

	public function DropEventDefault(event:QGraphicsSceneDragDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DropEventDefault", event]);
	};

	public override function EventDefault(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", event]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public function ConnectFocusInEvent(f:(focusEvent:QFocusEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFocusInEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFocusInEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusInEvent"]);
	};

	public function FocusInEvent(focusEvent:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusInEvent", focusEvent]);
	};

	public function FocusInEventDefault(focusEvent:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusInEventDefault", focusEvent]);
	};

	public function FocusItem():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusItem"]);
	};

	public function ConnectFocusItemChanged(f:(newFocusItem:QGraphicsItem, oldFocusItem:QGraphicsItem, reason:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFocusItemChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFocusItemChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusItemChanged"]);
	};

	public function FocusItemChanged(newFocusItem:QGraphicsItem_ITF, oldFocusItem:QGraphicsItem_ITF, reason:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"FocusItemChanged",
			newFocusItem,
			oldFocusItem,
			reason
		]);
	};

	public function ConnectFocusNextPrevChild(f:(next:Bool) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectFocusNextPrevChild",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectFocusNextPrevChild() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusNextPrevChild"]);
	};

	public function FocusNextPrevChild(next:Bool):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusNextPrevChild", next]);
	};

	public function FocusNextPrevChildDefault(next:Bool):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusNextPrevChildDefault", next]);
	};

	public function FocusOnTouch():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusOnTouch"]);
	};

	public function ConnectFocusOutEvent(f:(focusEvent:QFocusEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFocusOutEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFocusOutEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusOutEvent"]);
	};

	public function FocusOutEvent(focusEvent:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusOutEvent", focusEvent]);
	};

	public function FocusOutEventDefault(focusEvent:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusOutEventDefault", focusEvent]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function ForegroundBrush():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ForegroundBrush"]);
	};

	public function HasFocus():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasFocus"]);
	};

	public function Height():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Height"]);
	};

	public function ConnectHelpEvent(f:(helpEvent:QGraphicsSceneHelpEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHelpEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHelpEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHelpEvent"]);
	};

	public function HelpEvent(helpEvent:QGraphicsSceneHelpEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HelpEvent", helpEvent]);
	};

	public function HelpEventDefault(helpEvent:QGraphicsSceneHelpEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HelpEventDefault", helpEvent]);
	};

	public function ConnectInputMethodEvent(f:(event:QInputMethodEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInputMethodEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInputMethodEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInputMethodEvent"]);
	};

	public function InputMethodEvent(event:QInputMethodEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodEvent", event]);
	};

	public function InputMethodEventDefault(event:QInputMethodEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodEventDefault", event]);
	};

	public function ConnectInputMethodQuery(f:(query:Int) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInputMethodQuery", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInputMethodQuery() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInputMethodQuery"]);
	};

	public function InputMethodQuery(query:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodQuery", query]);
	};

	public function InputMethodQueryDefault(query:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodQueryDefault", query]);
	};

	public function ConnectInvalidate(f:(rect:QRectF, layers:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInvalidate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInvalidate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInvalidate"]);
	};

	public function Invalidate(rect:QRectF_ITF, layers:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Invalidate", rect, layers]);
	};

	public function InvalidateDefault(rect:QRectF_ITF, layers:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InvalidateDefault", rect, layers]);
	};

	public function Invalidate2(x:Float, y:Float, w:Float, h:Float, layers:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Invalidate2", x, y, w, h, layers]);
	};

	public function IsActive():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsActive"]);
	};

	public function IsSortCacheEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSortCacheEnabled"]);
	};

	public function ItemAt(position:QPointF_ITF, deviceTransform:QTransform_ITF):QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", position, deviceTransform]);
	};

	public function ItemAt4(x:Float, y:Float, deviceTransform:QTransform_ITF):QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt4", x, y, deviceTransform]);
	};

	public function ItemIndexMethod():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemIndexMethod"]);
	};

	public function Items(order:Int):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items", order]);
	};

	public function Items2(pos:QPointF_ITF, mode:Int, order:Int, deviceTransform:QTransform_ITF):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items2", pos, mode, order, deviceTransform]);
	};

	public function Items3(rect:QRectF_ITF, mode:Int, order:Int, deviceTransform:QTransform_ITF):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items3", rect, mode, order, deviceTransform]);
	};

	public function Items4(polygon:QPolygonF_ITF, mode:Int, order:Int, deviceTransform:QTransform_ITF):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items4", polygon, mode, order, deviceTransform]);
	};

	public function Items5(path:QPainterPath_ITF, mode:Int, order:Int, deviceTransform:QTransform_ITF):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items5", path, mode, order, deviceTransform]);
	};

	public function Items7(x:Float, y:Float, w:Float, h:Float, mode:Int, order:Int, deviceTransform:QTransform_ITF):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items7", x, y, w, h, mode, order, deviceTransform]);
	};

	public function ItemsBoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemsBoundingRect"]);
	};

	public function ConnectKeyPressEvent(f:(keyEvent:QKeyEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectKeyPressEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectKeyPressEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectKeyPressEvent"]);
	};

	public function KeyPressEvent(keyEvent:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyPressEvent", keyEvent]);
	};

	public function KeyPressEventDefault(keyEvent:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyPressEventDefault", keyEvent]);
	};

	public function ConnectKeyReleaseEvent(f:(keyEvent:QKeyEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectKeyReleaseEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectKeyReleaseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectKeyReleaseEvent"]);
	};

	public function KeyReleaseEvent(keyEvent:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyReleaseEvent", keyEvent]);
	};

	public function KeyReleaseEventDefault(keyEvent:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyReleaseEventDefault", keyEvent]);
	};

	public function MinimumRenderSize():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumRenderSize"]);
	};

	public function ConnectMouseDoubleClickEvent(f:(mouseEvent:QGraphicsSceneMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectMouseDoubleClickEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectMouseDoubleClickEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMouseDoubleClickEvent"]);
	};

	public function MouseDoubleClickEvent(mouseEvent:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseDoubleClickEvent", mouseEvent]);
	};

	public function MouseDoubleClickEventDefault(mouseEvent:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseDoubleClickEventDefault", mouseEvent]);
	};

	public function MouseGrabberItem():QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MouseGrabberItem"]);
	};

	public function ConnectMouseMoveEvent(f:(mouseEvent:QGraphicsSceneMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMouseMoveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMouseMoveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMouseMoveEvent"]);
	};

	public function MouseMoveEvent(mouseEvent:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseMoveEvent", mouseEvent]);
	};

	public function MouseMoveEventDefault(mouseEvent:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseMoveEventDefault", mouseEvent]);
	};

	public function ConnectMousePressEvent(f:(mouseEvent:QGraphicsSceneMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMousePressEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMousePressEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMousePressEvent"]);
	};

	public function MousePressEvent(mouseEvent:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MousePressEvent", mouseEvent]);
	};

	public function MousePressEventDefault(mouseEvent:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MousePressEventDefault", mouseEvent]);
	};

	public function ConnectMouseReleaseEvent(f:(mouseEvent:QGraphicsSceneMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMouseReleaseEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMouseReleaseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMouseReleaseEvent"]);
	};

	public function MouseReleaseEvent(mouseEvent:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseReleaseEvent", mouseEvent]);
	};

	public function MouseReleaseEventDefault(mouseEvent:QGraphicsSceneMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseReleaseEventDefault", mouseEvent]);
	};

	public function Palette():QPalette {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Palette"]);
	};

	public function RemoveItem(item:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveItem", item]);
	};

	public function Render(painter:QPainter_ITF, target:QRectF_ITF, source:QRectF_ITF, aspectRatioMode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Render", painter, target, source, aspectRatioMode]);
	};

	public function SceneRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SceneRect"]);
	};

	public function ConnectSceneRectChanged(f:(rect:QRectF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSceneRectChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSceneRectChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSceneRectChanged"]);
	};

	public function SceneRectChanged(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SceneRectChanged", rect]);
	};

	public function SelectedItems():Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedItems"]);
	};

	public function SelectionArea():QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionArea"]);
	};

	public function ConnectSelectionChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectionChanged"]);
	};

	public function SelectionChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChanged"]);
	};

	public function SendEvent(item:QGraphicsItem_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SendEvent", item, event]);
	};

	public function SetActivePanel(item:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActivePanel", item]);
	};

	public function SetActiveWindow(widget:QGraphicsWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActiveWindow", widget]);
	};

	public function SetBackgroundBrush(brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBackgroundBrush", brush]);
	};

	public function SetBspTreeDepth(depth:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBspTreeDepth", depth]);
	};

	public function SetFocus(focusReason:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocus", focusReason]);
	};

	public function SetFocusItem(item:QGraphicsItem_ITF, focusReason:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocusItem", item, focusReason]);
	};

	public function SetFocusOnTouch(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocusOnTouch", enabled]);
	};

	public function SetFont(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", font]);
	};

	public function SetForegroundBrush(brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetForegroundBrush", brush]);
	};

	public function SetItemIndexMethod(method:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemIndexMethod", method]);
	};

	public function SetMinimumRenderSize(minSize:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumRenderSize", minSize]);
	};

	public function SetPalette(palette:QPalette_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPalette", palette]);
	};

	public function SetSceneRect(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSceneRect", rect]);
	};

	public function SetSceneRect2(x:Float, y:Float, w:Float, h:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSceneRect2", x, y, w, h]);
	};

	public function SetSelectionArea(path:QPainterPath_ITF, deviceTransform:QTransform_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionArea", path, deviceTransform]);
	};

	public function SetSelectionArea2(path:QPainterPath_ITF, mode:Int, deviceTransform:QTransform_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionArea2", path, mode, deviceTransform]);
	};

	public function SetSelectionArea3(path:QPainterPath_ITF, selectionOperation:Int, mode:Int, deviceTransform:QTransform_ITF) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SetSelectionArea3",
			path,
			selectionOperation,
			mode,
			deviceTransform
		]);
	};

	public function SetSortCacheEnabled(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSortCacheEnabled", enabled]);
	};

	public function SetStickyFocus(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStickyFocus", enabled]);
	};

	public function SetStyle(style:QStyle_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStyle", style]);
	};

	public function StickyFocus():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StickyFocus"]);
	};

	public function Style():QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Style"]);
	};

	public function ConnectUpdate(f:(rect:QRectF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdate"]);
	};

	public function Update(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update", rect]);
	};

	public function UpdateDefault(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateDefault", rect]);
	};

	public function Update2(x:Float, y:Float, w:Float, h:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update2", x, y, w, h]);
	};

	public function Views():Array<QGraphicsView> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Views"]);
	};

	public function ConnectWheelEvent(f:(wheelEvent:QGraphicsSceneWheelEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWheelEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWheelEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWheelEvent"]);
	};

	public function WheelEvent(wheelEvent:QGraphicsSceneWheelEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WheelEvent", wheelEvent]);
	};

	public function WheelEventDefault(wheelEvent:QGraphicsSceneWheelEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WheelEventDefault", wheelEvent]);
	};

	public function Width():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Width"]);
	};

	public function ConnectDestroyQGraphicsScene(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsScene",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsScene() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsScene"]);
	};

	public function DestroyQGraphicsScene() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsScene"]);
	};

	public function DestroyQGraphicsSceneDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQGraphicsSceneFromPointer(ptr:String):QGraphicsScene {
	final r = new QGraphicsScene();
	r.initFrom(ptr, "widgets.QGraphicsScene");
	return r;
}

function NewQGraphicsScene(parent:QObject_ITF):QGraphicsScene {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsScene", "", parent]);
}

function NewQGraphicsScene2(sceneRect:QRectF_ITF, parent:QObject_ITF):QGraphicsScene {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsScene2", "", sceneRect, parent]);
}

function NewQGraphicsScene3(x:Float, y:Float, width:Float, height:Float, parent:QObject_ITF):QGraphicsScene {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsScene3", "", x, y, width, height, parent]);
}

interface QGraphicsSceneContextMenuEvent_ITF extends QGraphicsSceneEvent_ITF {
	public function QGraphicsSceneContextMenuEvent_PTR():QGraphicsSceneContextMenuEvent;
}

class QGraphicsSceneContextMenuEvent extends QGraphicsSceneEvent implements QGraphicsSceneContextMenuEvent_ITF {
	public function new() {
		super();
	}

	public function QGraphicsSceneContextMenuEvent_PTR():QGraphicsSceneContextMenuEvent {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsSceneContextMenuEvent_PTR"]);
	};

	public function Modifiers():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Modifiers"]);
	};

	public function Pos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pos"]);
	};

	public function Reason():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Reason"]);
	};

	public function ScenePos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScenePos"]);
	};

	public function ScreenPos():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenPos"]);
	};

	public function ConnectDestroyQGraphicsSceneContextMenuEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsSceneContextMenuEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsSceneContextMenuEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneContextMenuEvent"]);
	};

	public function DestroyQGraphicsSceneContextMenuEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneContextMenuEvent"]);
	};

	public function DestroyQGraphicsSceneContextMenuEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneContextMenuEventDefault"]);
	};
}

function NewQGraphicsSceneContextMenuEventFromPointer(ptr:String):QGraphicsSceneContextMenuEvent {
	final r = new QGraphicsSceneContextMenuEvent();
	r.initFrom(ptr, "widgets.QGraphicsSceneContextMenuEvent");
	return r;
}

interface QGraphicsSceneDragDropEvent_ITF extends QGraphicsSceneEvent_ITF {
	public function QGraphicsSceneDragDropEvent_PTR():QGraphicsSceneDragDropEvent;
}

class QGraphicsSceneDragDropEvent extends QGraphicsSceneEvent implements QGraphicsSceneDragDropEvent_ITF {
	public function new() {
		super();
	}

	public function QGraphicsSceneDragDropEvent_PTR():QGraphicsSceneDragDropEvent {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsSceneDragDropEvent_PTR"]);
	};

	public function AcceptProposedAction() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AcceptProposedAction"]);
	};

	public function Buttons():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Buttons"]);
	};

	public function DropAction():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DropAction"]);
	};

	public function MimeData():QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeData"]);
	};

	public function Modifiers():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Modifiers"]);
	};

	public function Pos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pos"]);
	};

	public function PossibleActions():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PossibleActions"]);
	};

	public function ProposedAction():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ProposedAction"]);
	};

	public function ScenePos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScenePos"]);
	};

	public function ScreenPos():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenPos"]);
	};

	public function SetDropAction(action:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDropAction", action]);
	};

	public function Source():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Source"]);
	};

	public function ConnectDestroyQGraphicsSceneDragDropEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsSceneDragDropEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsSceneDragDropEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneDragDropEvent"]);
	};

	public function DestroyQGraphicsSceneDragDropEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneDragDropEvent"]);
	};

	public function DestroyQGraphicsSceneDragDropEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneDragDropEventDefault"]);
	};
}

function NewQGraphicsSceneDragDropEventFromPointer(ptr:String):QGraphicsSceneDragDropEvent {
	final r = new QGraphicsSceneDragDropEvent();
	r.initFrom(ptr, "widgets.QGraphicsSceneDragDropEvent");
	return r;
}

interface QGraphicsSceneEvent_ITF extends QEvent_ITF {
	public function QGraphicsSceneEvent_PTR():QGraphicsSceneEvent;
}

class QGraphicsSceneEvent extends QEvent implements QGraphicsSceneEvent_ITF {
	public function new() {
		super();
	}

	public function QGraphicsSceneEvent_PTR():QGraphicsSceneEvent {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsSceneEvent_PTR"]);
	};

	public function Widget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget"]);
	};

	public function ConnectDestroyQGraphicsSceneEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsSceneEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsSceneEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneEvent"]);
	};

	public function DestroyQGraphicsSceneEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneEvent"]);
	};

	public function DestroyQGraphicsSceneEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneEventDefault"]);
	};
}

function NewQGraphicsSceneEventFromPointer(ptr:String):QGraphicsSceneEvent {
	final r = new QGraphicsSceneEvent();
	r.initFrom(ptr, "widgets.QGraphicsSceneEvent");
	return r;
}

interface QGraphicsSceneHelpEvent_ITF extends QGraphicsSceneEvent_ITF {
	public function QGraphicsSceneHelpEvent_PTR():QGraphicsSceneHelpEvent;
}

class QGraphicsSceneHelpEvent extends QGraphicsSceneEvent implements QGraphicsSceneHelpEvent_ITF {
	public function new() {
		super();
	}

	public function QGraphicsSceneHelpEvent_PTR():QGraphicsSceneHelpEvent {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsSceneHelpEvent_PTR"]);
	};

	public function ScenePos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScenePos"]);
	};

	public function ScreenPos():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenPos"]);
	};

	public function ConnectDestroyQGraphicsSceneHelpEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsSceneHelpEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsSceneHelpEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneHelpEvent"]);
	};

	public function DestroyQGraphicsSceneHelpEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneHelpEvent"]);
	};

	public function DestroyQGraphicsSceneHelpEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneHelpEventDefault"]);
	};
}

function NewQGraphicsSceneHelpEventFromPointer(ptr:String):QGraphicsSceneHelpEvent {
	final r = new QGraphicsSceneHelpEvent();
	r.initFrom(ptr, "widgets.QGraphicsSceneHelpEvent");
	return r;
}

interface QGraphicsSceneHoverEvent_ITF extends QGraphicsSceneEvent_ITF {
	public function QGraphicsSceneHoverEvent_PTR():QGraphicsSceneHoverEvent;
}

class QGraphicsSceneHoverEvent extends QGraphicsSceneEvent implements QGraphicsSceneHoverEvent_ITF {
	public function new() {
		super();
	}

	public function QGraphicsSceneHoverEvent_PTR():QGraphicsSceneHoverEvent {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsSceneHoverEvent_PTR"]);
	};

	public function LastPos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastPos"]);
	};

	public function LastScenePos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastScenePos"]);
	};

	public function LastScreenPos():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastScreenPos"]);
	};

	public function Modifiers():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Modifiers"]);
	};

	public function Pos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pos"]);
	};

	public function ScenePos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScenePos"]);
	};

	public function ScreenPos():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenPos"]);
	};

	public function ConnectDestroyQGraphicsSceneHoverEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsSceneHoverEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsSceneHoverEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneHoverEvent"]);
	};

	public function DestroyQGraphicsSceneHoverEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneHoverEvent"]);
	};

	public function DestroyQGraphicsSceneHoverEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneHoverEventDefault"]);
	};
}

function NewQGraphicsSceneHoverEventFromPointer(ptr:String):QGraphicsSceneHoverEvent {
	final r = new QGraphicsSceneHoverEvent();
	r.initFrom(ptr, "widgets.QGraphicsSceneHoverEvent");
	return r;
}

interface QGraphicsSceneMouseEvent_ITF extends QGraphicsSceneEvent_ITF {
	public function QGraphicsSceneMouseEvent_PTR():QGraphicsSceneMouseEvent;
}

class QGraphicsSceneMouseEvent extends QGraphicsSceneEvent implements QGraphicsSceneMouseEvent_ITF {
	public function new() {
		super();
	}

	public function QGraphicsSceneMouseEvent_PTR():QGraphicsSceneMouseEvent {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsSceneMouseEvent_PTR"]);
	};

	public function Button():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Button"]);
	};

	public function ButtonDownPos(button:Int):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ButtonDownPos", button]);
	};

	public function ButtonDownScenePos(button:Int):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ButtonDownScenePos", button]);
	};

	public function ButtonDownScreenPos(button:Int):QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ButtonDownScreenPos", button]);
	};

	public function Buttons():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Buttons"]);
	};

	public function Flags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Flags"]);
	};

	public function LastPos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastPos"]);
	};

	public function LastScenePos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastScenePos"]);
	};

	public function LastScreenPos():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastScreenPos"]);
	};

	public function Modifiers():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Modifiers"]);
	};

	public function Pos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pos"]);
	};

	public function ScenePos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScenePos"]);
	};

	public function ScreenPos():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenPos"]);
	};

	public function Source():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Source"]);
	};

	public function ConnectDestroyQGraphicsSceneMouseEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsSceneMouseEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsSceneMouseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneMouseEvent"]);
	};

	public function DestroyQGraphicsSceneMouseEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneMouseEvent"]);
	};

	public function DestroyQGraphicsSceneMouseEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneMouseEventDefault"]);
	};
}

function NewQGraphicsSceneMouseEventFromPointer(ptr:String):QGraphicsSceneMouseEvent {
	final r = new QGraphicsSceneMouseEvent();
	r.initFrom(ptr, "widgets.QGraphicsSceneMouseEvent");
	return r;
}

interface QGraphicsSceneMoveEvent_ITF extends QGraphicsSceneEvent_ITF {
	public function QGraphicsSceneMoveEvent_PTR():QGraphicsSceneMoveEvent;
}

class QGraphicsSceneMoveEvent extends QGraphicsSceneEvent implements QGraphicsSceneMoveEvent_ITF {
	public function new() {
		super();
	}

	public function QGraphicsSceneMoveEvent_PTR():QGraphicsSceneMoveEvent {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsSceneMoveEvent_PTR"]);
	};

	public function NewPos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NewPos"]);
	};

	public function OldPos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OldPos"]);
	};

	public function ConnectDestroyQGraphicsSceneMoveEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsSceneMoveEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsSceneMoveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneMoveEvent"]);
	};

	public function DestroyQGraphicsSceneMoveEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneMoveEvent"]);
	};

	public function DestroyQGraphicsSceneMoveEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneMoveEventDefault"]);
	};
}

function NewQGraphicsSceneMoveEventFromPointer(ptr:String):QGraphicsSceneMoveEvent {
	final r = new QGraphicsSceneMoveEvent();
	r.initFrom(ptr, "widgets.QGraphicsSceneMoveEvent");
	return r;
}

function NewQGraphicsSceneMoveEvent2():QGraphicsSceneMoveEvent {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsSceneMoveEvent2", ""]);
}

interface QGraphicsSceneResizeEvent_ITF extends QGraphicsSceneEvent_ITF {
	public function QGraphicsSceneResizeEvent_PTR():QGraphicsSceneResizeEvent;
}

class QGraphicsSceneResizeEvent extends QGraphicsSceneEvent implements QGraphicsSceneResizeEvent_ITF {
	public function new() {
		super();
	}

	public function QGraphicsSceneResizeEvent_PTR():QGraphicsSceneResizeEvent {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsSceneResizeEvent_PTR"]);
	};

	public function NewSize():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NewSize"]);
	};

	public function OldSize():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OldSize"]);
	};

	public function ConnectDestroyQGraphicsSceneResizeEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsSceneResizeEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsSceneResizeEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneResizeEvent"]);
	};

	public function DestroyQGraphicsSceneResizeEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneResizeEvent"]);
	};

	public function DestroyQGraphicsSceneResizeEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneResizeEventDefault"]);
	};
}

function NewQGraphicsSceneResizeEventFromPointer(ptr:String):QGraphicsSceneResizeEvent {
	final r = new QGraphicsSceneResizeEvent();
	r.initFrom(ptr, "widgets.QGraphicsSceneResizeEvent");
	return r;
}

function NewQGraphicsSceneResizeEvent2():QGraphicsSceneResizeEvent {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsSceneResizeEvent2", ""]);
}

interface QGraphicsSceneWheelEvent_ITF extends QGraphicsSceneEvent_ITF {
	public function QGraphicsSceneWheelEvent_PTR():QGraphicsSceneWheelEvent;
}

class QGraphicsSceneWheelEvent extends QGraphicsSceneEvent implements QGraphicsSceneWheelEvent_ITF {
	public function new() {
		super();
	}

	public function QGraphicsSceneWheelEvent_PTR():QGraphicsSceneWheelEvent {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsSceneWheelEvent_PTR"]);
	};

	public function Buttons():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Buttons"]);
	};

	public function Delta():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Delta"]);
	};

	public function Modifiers():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Modifiers"]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function Pos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pos"]);
	};

	public function ScenePos():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScenePos"]);
	};

	public function ScreenPos():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScreenPos"]);
	};

	public function ConnectDestroyQGraphicsSceneWheelEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsSceneWheelEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsSceneWheelEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsSceneWheelEvent"]);
	};

	public function DestroyQGraphicsSceneWheelEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneWheelEvent"]);
	};

	public function DestroyQGraphicsSceneWheelEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSceneWheelEventDefault"]);
	};
}

function NewQGraphicsSceneWheelEventFromPointer(ptr:String):QGraphicsSceneWheelEvent {
	final r = new QGraphicsSceneWheelEvent();
	r.initFrom(ptr, "widgets.QGraphicsSceneWheelEvent");
	return r;
}

interface QGraphicsSimpleTextItem_ITF extends QAbstractGraphicsShapeItem_ITF {
	public function QGraphicsSimpleTextItem_PTR():QGraphicsSimpleTextItem;
}

class QGraphicsSimpleTextItem extends QAbstractGraphicsShapeItem implements QGraphicsSimpleTextItem_ITF {
	public function new() {
		super();
	}

	public function QGraphicsSimpleTextItem_PTR():QGraphicsSimpleTextItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsSimpleTextItem_PTR"]);
	};

	public override function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public override function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public override function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};

	public function SetFont(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", font]);
	};

	public function SetText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", text]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function ConnectDestroyQGraphicsSimpleTextItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsSimpleTextItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsSimpleTextItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsSimpleTextItem"]);
	};

	public function DestroyQGraphicsSimpleTextItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSimpleTextItem"]);
	};

	public function DestroyQGraphicsSimpleTextItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsSimpleTextItemDefault"]);
	};
}

function NewQGraphicsSimpleTextItemFromPointer(ptr:String):QGraphicsSimpleTextItem {
	final r = new QGraphicsSimpleTextItem();
	r.initFrom(ptr, "widgets.QGraphicsSimpleTextItem");
	return r;
}

function NewQGraphicsSimpleTextItem(parent:QGraphicsItem_ITF):QGraphicsSimpleTextItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsSimpleTextItem", "", parent]);
}

function NewQGraphicsSimpleTextItem2(text:String, parent:QGraphicsItem_ITF):QGraphicsSimpleTextItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsSimpleTextItem2", "", text, parent]);
}

interface QGraphicsTextItem_ITF extends QGraphicsObject_ITF {
	public function QGraphicsTextItem_PTR():QGraphicsTextItem;
}

class QGraphicsTextItem extends QGraphicsObject implements QGraphicsTextItem_ITF {
	public function new() {
		super();
	}

	public function QGraphicsTextItem_PTR():QGraphicsTextItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsTextItem_PTR"]);
	};

	public function AdjustSize() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AdjustSize"]);
	};

	public override function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public override function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public override function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public function DefaultTextColor():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultTextColor"]);
	};

	public function Document():QTextDocument {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Document"]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function ConnectLinkActivated(f:(link:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLinkActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLinkActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLinkActivated"]);
	};

	public function LinkActivated(link:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "LinkActivated", link]);
	};

	public function ConnectLinkHovered(f:(link:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLinkHovered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLinkHovered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLinkHovered"]);
	};

	public function LinkHovered(link:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "LinkHovered", link]);
	};

	public function OpenExternalLinks():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OpenExternalLinks"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public override function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};

	public function SetDefaultTextColor(col:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultTextColor", col]);
	};

	public function SetDocument(document:QTextDocument_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocument", document]);
	};

	public function SetFont(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", font]);
	};

	public function SetHtml(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHtml", text]);
	};

	public function SetOpenExternalLinks(open:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpenExternalLinks", open]);
	};

	public function SetPlainText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPlainText", text]);
	};

	public function SetTabChangesFocus(b:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabChangesFocus", b]);
	};

	public function SetTextCursor(cursor:QTextCursor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextCursor", cursor]);
	};

	public function SetTextInteractionFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextInteractionFlags", flags]);
	};

	public function SetTextWidth(width:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextWidth", width]);
	};

	public function TabChangesFocus():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabChangesFocus"]);
	};

	public function TextCursor():QTextCursor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextCursor"]);
	};

	public function TextInteractionFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextInteractionFlags"]);
	};

	public function TextWidth():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextWidth"]);
	};

	public function ToHtml():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToHtml"]);
	};

	public function ToPlainText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToPlainText"]);
	};

	public function ConnectDestroyQGraphicsTextItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsTextItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsTextItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsTextItem"]);
	};

	public function DestroyQGraphicsTextItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsTextItem"]);
	};

	public function DestroyQGraphicsTextItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsTextItemDefault"]);
	};
}

function NewQGraphicsTextItemFromPointer(ptr:String):QGraphicsTextItem {
	final r = new QGraphicsTextItem();
	r.initFrom(ptr, "widgets.QGraphicsTextItem");
	return r;
}

function NewQGraphicsTextItem(parent:QGraphicsItem_ITF):QGraphicsTextItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsTextItem", "", parent]);
}

function NewQGraphicsTextItem2(text:String, parent:QGraphicsItem_ITF):QGraphicsTextItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsTextItem2", "", text, parent]);
}

interface QGraphicsTransform_ITF extends QObject_ITF {
	public function QGraphicsTransform_PTR():QGraphicsTransform;
}

class QGraphicsTransform extends QObject implements QGraphicsTransform_ITF {
	public function new() {
		super();
	}

	public function QGraphicsTransform_PTR():QGraphicsTransform {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsTransform_PTR"]);
	};

	public function ConnectApplyTo(f:(matrix:QMatrix4x4) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectApplyTo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectApplyTo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectApplyTo"]);
	};

	public function ApplyTo(matrix:QMatrix4x4_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ApplyTo", matrix]);
	};

	public function ConnectUpdate(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdate"]);
	};

	public function Update() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update"]);
	};

	public function UpdateDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateDefault"]);
	};

	public function ConnectDestroyQGraphicsTransform(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsTransform",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsTransform() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsTransform"]);
	};

	public function DestroyQGraphicsTransform() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsTransform"]);
	};

	public function DestroyQGraphicsTransformDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsTransformDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQGraphicsTransformFromPointer(ptr:String):QGraphicsTransform {
	final r = new QGraphicsTransform();
	r.initFrom(ptr, "widgets.QGraphicsTransform");
	return r;
}

function NewQGraphicsTransform(parent:QObject_ITF):QGraphicsTransform {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsTransform", "", parent]);
}

interface QGraphicsView_ITF extends QAbstractScrollArea_ITF {
	public function QGraphicsView_PTR():QGraphicsView;
}

class QGraphicsView extends QAbstractScrollArea implements QGraphicsView_ITF {
	public function new() {
		super();
	}

	public function QGraphicsView_PTR():QGraphicsView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsView_PTR"]);
	};

	public function Alignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment"]);
	};

	public function BackgroundBrush():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BackgroundBrush"]);
	};

	public function CacheMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CacheMode"]);
	};

	public function CenterOn(pos:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CenterOn", pos]);
	};

	public function CenterOn2(x:Float, y:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CenterOn2", x, y]);
	};

	public function CenterOn3(item:QGraphicsItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CenterOn3", item]);
	};

	public function DragMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DragMode"]);
	};

	public function ConnectDrawBackground(f:(painter:QPainter, rect:QRectF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawBackground", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawBackground() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawBackground"]);
	};

	public function DrawBackground(painter:QPainter_ITF, rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawBackground", painter, rect]);
	};

	public function DrawBackgroundDefault(painter:QPainter_ITF, rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawBackgroundDefault", painter, rect]);
	};

	public function ConnectDrawForeground(f:(painter:QPainter, rect:QRectF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawForeground", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawForeground() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawForeground"]);
	};

	public function DrawForeground(painter:QPainter_ITF, rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawForeground", painter, rect]);
	};

	public function DrawForegroundDefault(painter:QPainter_ITF, rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawForegroundDefault", painter, rect]);
	};

	public function EnsureVisible(rect:QRectF_ITF, xmargi:Int, ymargi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureVisible", rect, xmargi, ymargi]);
	};

	public function EnsureVisible2(x:Float, y:Float, w:Float, h:Float, xmargi:Int, ymargi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureVisible2", x, y, w, h, xmargi, ymargi]);
	};

	public function EnsureVisible3(item:QGraphicsItem_ITF, xmargi:Int, ymargi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureVisible3", item, xmargi, ymargi]);
	};

	public function FitInView(rect:QRectF_ITF, aspectRatioMode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FitInView", rect, aspectRatioMode]);
	};

	public function FitInView2(x:Float, y:Float, w:Float, h:Float, aspectRatioMode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FitInView2", x, y, w, h, aspectRatioMode]);
	};

	public function FitInView3(item:QGraphicsItem_ITF, aspectRatioMode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FitInView3", item, aspectRatioMode]);
	};

	public function ForegroundBrush():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ForegroundBrush"]);
	};

	public function ConnectInvalidateScene(f:(rect:QRectF, layers:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInvalidateScene", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInvalidateScene() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInvalidateScene"]);
	};

	public function InvalidateScene(rect:QRectF_ITF, layers:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InvalidateScene", rect, layers]);
	};

	public function InvalidateSceneDefault(rect:QRectF_ITF, layers:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InvalidateSceneDefault", rect, layers]);
	};

	public function IsInteractive():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsInteractive"]);
	};

	public function IsTransformed():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsTransformed"]);
	};

	public function ItemAt(pos:QPoint_ITF):QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", pos]);
	};

	public function ItemAt2(x:Int, y:Int):QGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt2", x, y]);
	};

	public function Items():Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items"]);
	};

	public function Items2(pos:QPoint_ITF):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items2", pos]);
	};

	public function Items3(x:Int, y:Int):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items3", x, y]);
	};

	public function Items4(rect:QRect_ITF, mode:Int):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items4", rect, mode]);
	};

	public function Items5(x:Int, y:Int, w:Int, h:Int, mode:Int):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items5", x, y, w, h, mode]);
	};

	public function Items6(polygon:QPolygon_ITF, mode:Int):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items6", polygon, mode]);
	};

	public function Items7(path:QPainterPath_ITF, mode:Int):Array<QGraphicsItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items7", path, mode]);
	};

	public function MapFromScene(point:QPointF_ITF):QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene", point]);
	};

	public function MapFromScene2(rect:QRectF_ITF):QPolygon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene2", rect]);
	};

	public function MapFromScene3(polygon:QPolygonF_ITF):QPolygon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene3", polygon]);
	};

	public function MapFromScene4(path:QPainterPath_ITF):QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene4", path]);
	};

	public function MapFromScene5(x:Float, y:Float):QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene5", x, y]);
	};

	public function MapFromScene6(x:Float, y:Float, w:Float, h:Float):QPolygon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromScene6", x, y, w, h]);
	};

	public function MapToScene(point:QPoint_ITF):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene", point]);
	};

	public function MapToScene2(rect:QRect_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene2", rect]);
	};

	public function MapToScene3(polygon:QPolygon_ITF):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene3", polygon]);
	};

	public function MapToScene4(path:QPainterPath_ITF):QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene4", path]);
	};

	public function MapToScene5(x:Int, y:Int):QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene5", x, y]);
	};

	public function MapToScene6(x:Int, y:Int, w:Int, h:Int):QPolygonF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToScene6", x, y, w, h]);
	};

	public function Matrix():QMatrix {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Matrix"]);
	};

	public function OptimizationFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OptimizationFlags"]);
	};

	public function Render_QFrame(painter:QPainter_ITF, target:QRectF_ITF, source:QRect_ITF, aspectRatioMode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Render", painter, target, source, aspectRatioMode]);
	};

	public function RenderHints():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RenderHints"]);
	};

	public function ResetCachedContent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetCachedContent"]);
	};

	public function ResetMatrix() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetMatrix"]);
	};

	public function ResetTransform() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetTransform"]);
	};

	public function ResizeAnchor():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ResizeAnchor"]);
	};

	public function Rotate(angle:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Rotate", angle]);
	};

	public function ConnectRubberBandChanged(f:(rubberBandRect:QRect, fromScenePoint:QPointF, toScenePoint:QPointF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRubberBandChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRubberBandChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRubberBandChanged"]);
	};

	public function RubberBandChanged(rubberBandRect:QRect_ITF, fromScenePoint:QPointF_ITF, toScenePoint:QPointF_ITF) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"RubberBandChanged",
			rubberBandRect,
			fromScenePoint,
			toScenePoint
		]);
	};

	public function RubberBandRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RubberBandRect"]);
	};

	public function RubberBandSelectionMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RubberBandSelectionMode"]);
	};

	public function Scale(sx:Float, sy:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Scale", sx, sy]);
	};

	public function Scene():QGraphicsScene {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Scene"]);
	};

	public function SceneRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SceneRect"]);
	};

	public function SetAlignment(alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", alignment]);
	};

	public function SetBackgroundBrush(brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBackgroundBrush", brush]);
	};

	public function SetCacheMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCacheMode", mode]);
	};

	public function SetDragMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDragMode", mode]);
	};

	public function SetForegroundBrush(brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetForegroundBrush", brush]);
	};

	public function SetInteractive(allowed:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInteractive", allowed]);
	};

	public function SetMatrix(matrix:QMatrix_ITF, combine:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMatrix", matrix, combine]);
	};

	public function SetOptimizationFlag(flag:Int, enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOptimizationFlag", flag, enabled]);
	};

	public function SetOptimizationFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOptimizationFlags", flags]);
	};

	public function SetRenderHint(hint:Int, enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRenderHint", hint, enabled]);
	};

	public function SetRenderHints(hints:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRenderHints", hints]);
	};

	public function SetResizeAnchor(anchor:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetResizeAnchor", anchor]);
	};

	public function SetRubberBandSelectionMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRubberBandSelectionMode", mode]);
	};

	public function SetScene(scene:QGraphicsScene_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetScene", scene]);
	};

	public function SetSceneRect(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSceneRect", rect]);
	};

	public function SetSceneRect2(x:Float, y:Float, w:Float, h:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSceneRect2", x, y, w, h]);
	};

	public function SetTransform(matrix:QTransform_ITF, combine:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTransform", matrix, combine]);
	};

	public function SetTransformationAnchor(anchor:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTransformationAnchor", anchor]);
	};

	public function SetViewportUpdateMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetViewportUpdateMode", mode]);
	};

	public override function ConnectSetupViewport(f:(widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetupViewport", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetupViewport() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetupViewport"]);
	};

	public override function SetupViewport(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetupViewport", widget]);
	};

	public override function SetupViewportDefault(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetupViewportDefault", widget]);
	};

	public function Shear(sh:Float, sv:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Shear", sh, sv]);
	};

	public function Transform():QTransform {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Transform"]);
	};

	public function TransformationAnchor():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TransformationAnchor"]);
	};

	public function Translate(dx:Float, dy:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Translate", dx, dy]);
	};

	public function ConnectUpdateScene(f:(rects:Array<QRectF>) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdateScene", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdateScene() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateScene"]);
	};

	public function UpdateScene(rects:Array<QRectF>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateScene", rects]);
	};

	public function UpdateSceneDefault(rects:Array<QRectF>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateSceneDefault", rects]);
	};

	public function ConnectUpdateSceneRect(f:(rect:QRectF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdateSceneRect", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdateSceneRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateSceneRect"]);
	};

	public function UpdateSceneRect(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateSceneRect", rect]);
	};

	public function UpdateSceneRectDefault(rect:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateSceneRectDefault", rect]);
	};

	public function ViewportTransform():QTransform {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewportTransform"]);
	};

	public function ViewportUpdateMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewportUpdateMode"]);
	};

	public function ConnectDestroyQGraphicsView(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsView",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsView() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsView"]);
	};

	public function DestroyQGraphicsView() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsView"]);
	};

	public function DestroyQGraphicsViewDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsViewDefault"]);
	};
}

function NewQGraphicsViewFromPointer(ptr:String):QGraphicsView {
	final r = new QGraphicsView();
	r.initFrom(ptr, "widgets.QGraphicsView");
	return r;
}

function NewQGraphicsView(parent:QWidget_ITF):QGraphicsView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsView", "", parent]);
}

function NewQGraphicsView2(scene:QGraphicsScene_ITF, parent:QWidget_ITF):QGraphicsView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsView2", "", scene, parent]);
}

interface QGraphicsWidget_ITF extends QGraphicsLayoutItem_ITF {
	public function QGraphicsWidget_PTR():QGraphicsWidget;
	public function QGraphicsObject_PTR():QGraphicsObject;
}

class QGraphicsWidget extends QGraphicsLayoutItem implements QGraphicsWidget_ITF {
	public function QGraphicsObject_PTR():QGraphicsObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsObject_PTR"]);
	}

	public function new() {
		super();
	}

	public function QGraphicsWidget_PTR():QGraphicsWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGraphicsWidget_PTR"]);
	};

	public function Actions():Array<QAction> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Actions"]);
	};

	public function AddAction(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddAction", action]);
	};

	public function AddActions(actions:Array<QAction>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddActions", actions]);
	};

	public function AdjustSize() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AdjustSize"]);
	};

	public function AutoFillBackground():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoFillBackground"]);
	};

	public function ConnectBoundingRect(f:() -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBoundingRect"]);
	};

	public function BoundingRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRect"]);
	};

	public function BoundingRectDefault():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BoundingRectDefault"]);
	};

	public function ConnectChangeEvent(f:(event:QEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectChangeEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectChangeEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectChangeEvent"]);
	};

	public function ChangeEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChangeEvent", event]);
	};

	public function ChangeEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChangeEventDefault", event]);
	};

	public function ConnectClose(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClose", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClose() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClose"]);
	};

	public function Close():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Close"]);
	};

	public function CloseDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CloseDefault"]);
	};

	public function ConnectCloseEvent(f:(event:QCloseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCloseEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCloseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCloseEvent"]);
	};

	public function CloseEvent(event:QCloseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseEvent", event]);
	};

	public function CloseEventDefault(event:QCloseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseEventDefault", event]);
	};

	public function ConnectFocusNextPrevChild(f:(next:Bool) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectFocusNextPrevChild",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectFocusNextPrevChild() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusNextPrevChild"]);
	};

	public function FocusNextPrevChild(next:Bool):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusNextPrevChild", next]);
	};

	public function FocusNextPrevChildDefault(next:Bool):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusNextPrevChildDefault", next]);
	};

	public function FocusPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusPolicy"]);
	};

	public function FocusWidget():QGraphicsWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusWidget"]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function ConnectGeometryChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectGeometryChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectGeometryChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGeometryChanged"]);
	};

	public function GeometryChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "GeometryChanged"]);
	};

	public function GetWindowFrameMargins(left:Float, top:Float, right:Float, bottom:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GetWindowFrameMargins", left, top, right, bottom]);
	};

	public function ConnectGrabKeyboardEvent(f:(event:QEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectGrabKeyboardEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectGrabKeyboardEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGrabKeyboardEvent"]);
	};

	public function GrabKeyboardEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabKeyboardEvent", event]);
	};

	public function GrabKeyboardEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabKeyboardEventDefault", event]);
	};

	public function ConnectGrabMouseEvent(f:(event:QEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectGrabMouseEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectGrabMouseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGrabMouseEvent"]);
	};

	public function GrabMouseEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabMouseEvent", event]);
	};

	public function GrabMouseEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabMouseEventDefault", event]);
	};

	public function GrabShortcut(sequence:QKeySequence_ITF, context:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GrabShortcut", sequence, context]);
	};

	public function ConnectHideEvent(f:(event:QHideEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHideEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHideEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHideEvent"]);
	};

	public function HideEvent(event:QHideEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideEvent", event]);
	};

	public function HideEventDefault(event:QHideEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideEventDefault", event]);
	};

	public function ConnectInitStyleOption(f:(option:QStyleOption) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInitStyleOption", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInitStyleOption() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInitStyleOption"]);
	};

	public function InitStyleOption(option:QStyleOption_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function InitStyleOptionDefault(option:QStyleOption_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOptionDefault", option]);
	};

	public function InsertAction(before:QAction_ITF, action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertAction", before, action]);
	};

	public function InsertActions(before:QAction_ITF, actions:Array<QAction>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertActions", before, actions]);
	};

	public function IsActiveWindow():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsActiveWindow"]);
	};

	public function Layout():QGraphicsLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Layout"]);
	};

	public function ConnectLayoutChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLayoutChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLayoutChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLayoutChanged"]);
	};

	public function LayoutChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "LayoutChanged"]);
	};

	public function LayoutDirection():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LayoutDirection"]);
	};

	public function ConnectMoveEvent(f:(event:QGraphicsSceneMoveEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMoveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMoveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMoveEvent"]);
	};

	public function MoveEvent(event:QGraphicsSceneMoveEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveEvent", event]);
	};

	public function MoveEventDefault(event:QGraphicsSceneMoveEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveEventDefault", event]);
	};

	public function ConnectPaint(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public function Paint(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, widget]);
	};

	public function PaintDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, widget]);
	};

	public function ConnectPaintWindowFrame(f:(painter:QPainter, option:QStyleOptionGraphicsItem, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintWindowFrame", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaintWindowFrame() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintWindowFrame"]);
	};

	public function PaintWindowFrame(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintWindowFrame", painter, option, widget]);
	};

	public function PaintWindowFrameDefault(painter:QPainter_ITF, option:QStyleOptionGraphicsItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintWindowFrameDefault", painter, option, widget]);
	};

	public function Palette():QPalette {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Palette"]);
	};

	public function ConnectPolishEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPolishEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPolishEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPolishEvent"]);
	};

	public function PolishEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "PolishEvent"]);
	};

	public function PolishEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "PolishEventDefault"]);
	};

	public function Rect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Rect"]);
	};

	public function ReleaseShortcut(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ReleaseShortcut", id]);
	};

	public function RemoveAction(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveAction", action]);
	};

	public function Resize(size:QSizeF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Resize", size]);
	};

	public function Resize2(w:Float, h:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Resize2", w, h]);
	};

	public function ConnectResizeEvent(f:(event:QGraphicsSceneResizeEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectResizeEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectResizeEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResizeEvent"]);
	};

	public function ResizeEvent(event:QGraphicsSceneResizeEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeEvent", event]);
	};

	public function ResizeEventDefault(event:QGraphicsSceneResizeEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeEventDefault", event]);
	};

	public function SetAttribute(attribute:Int, on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAttribute", attribute, on]);
	};

	public function SetAutoFillBackground(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoFillBackground", enabled]);
	};

	public function SetContentsMargins(left:Float, top:Float, right:Float, bottom:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetContentsMargins", left, top, right, bottom]);
	};

	public function SetFocusPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocusPolicy", policy]);
	};

	public function SetFont(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", font]);
	};

	public function SetGeometry2(x:Float, y:Float, w:Float, h:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometry2", x, y, w, h]);
	};

	public function SetLayout(layout:QGraphicsLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLayout", layout]);
	};

	public function SetLayoutDirection(direction:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLayoutDirection", direction]);
	};

	public function SetPalette(palette:QPalette_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPalette", palette]);
	};

	public function SetShortcutAutoRepeat(id:Int, enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShortcutAutoRepeat", id, enabled]);
	};

	public function SetShortcutEnabled(id:Int, enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShortcutEnabled", id, enabled]);
	};

	public function SetStyle(style:QStyle_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStyle", style]);
	};

	public function SetTabOrder(first:QGraphicsWidget_ITF, second:QGraphicsWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabOrder", first, second]);
	};

	public function SetWindowFlags(wFlags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowFlags", wFlags]);
	};

	public function SetWindowFrameMargins(left:Float, top:Float, right:Float, bottom:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowFrameMargins", left, top, right, bottom]);
	};

	public function SetWindowTitle(title:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowTitle", title]);
	};

	public function ConnectShowEvent(f:(event:QShowEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowEvent"]);
	};

	public function ShowEvent(event:QShowEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowEvent", event]);
	};

	public function ShowEventDefault(event:QShowEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowEventDefault", event]);
	};

	public function Size():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Size"]);
	};

	public override function ConnectSizeHint(f:(which:Int, constraint:QSizeF) -> QSizeF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint", which, constraint]);
	};

	public function SizeHintDefault(which:Int, constraint:QSizeF_ITF):QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault", which, constraint]);
	};

	public function Style():QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Style"]);
	};

	public function TestAttribute(attribute:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TestAttribute", attribute]);
	};

	public function ConnectUngrabKeyboardEvent(f:(event:QEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectUngrabKeyboardEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectUngrabKeyboardEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUngrabKeyboardEvent"]);
	};

	public function UngrabKeyboardEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UngrabKeyboardEvent", event]);
	};

	public function UngrabKeyboardEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UngrabKeyboardEventDefault", event]);
	};

	public function ConnectUngrabMouseEvent(f:(event:QEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUngrabMouseEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUngrabMouseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUngrabMouseEvent"]);
	};

	public function UngrabMouseEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UngrabMouseEvent", event]);
	};

	public function UngrabMouseEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UngrabMouseEventDefault", event]);
	};

	public function UnsetLayoutDirection() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnsetLayoutDirection"]);
	};

	public function UnsetWindowFrameMargins() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnsetWindowFrameMargins"]);
	};

	public function WindowFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowFlags"]);
	};

	public function ConnectWindowFrameEvent(f:(event:QEvent) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWindowFrameEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWindowFrameEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWindowFrameEvent"]);
	};

	public function WindowFrameEvent(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowFrameEvent", event]);
	};

	public function WindowFrameEventDefault(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowFrameEventDefault", event]);
	};

	public function WindowFrameGeometry():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowFrameGeometry"]);
	};

	public function WindowFrameRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowFrameRect"]);
	};

	public function ConnectWindowFrameSectionAt(f:(pos:QPointF) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectWindowFrameSectionAt",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectWindowFrameSectionAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWindowFrameSectionAt"]);
	};

	public function WindowFrameSectionAt(pos:QPointF_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowFrameSectionAt", pos]);
	};

	public function WindowFrameSectionAtDefault(pos:QPointF_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowFrameSectionAtDefault", pos]);
	};

	public function WindowTitle():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowTitle"]);
	};

	public function WindowType():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowType"]);
	};

	public function ConnectDestroyQGraphicsWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGraphicsWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGraphicsWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGraphicsWidget"]);
	};

	public function DestroyQGraphicsWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsWidget"]);
	};

	public function DestroyQGraphicsWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGraphicsWidgetDefault"]);
	};

	public override function MinimumSize():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSize"]);
	};

	public function SetMinimumSize_QGraphicsItem(minimumSize:QSizeF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumSize", minimumSize]);
	};

	public override function PreferredSize():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PreferredSize"]);
	};

	public function SetPreferredSize_QGraphicsItem(preferredSize:QSizeF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPreferredSize", preferredSize]);
	};

	public override function MaximumSize():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSize"]);
	};

	public function SetMaximumSize_QGraphicsItem(maximumSize:QSizeF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumSize", maximumSize]);
	};

	public override function SizePolicy():QSizePolicy {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizePolicy"]);
	};

	public function SetSizePolicy_QGraphicsItem(sizePolicy:QSizePolicy_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizePolicy", sizePolicy]);
	};

	public override function Geometry():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Geometry"]);
	};
}

function NewQGraphicsWidgetFromPointer(ptr:String):QGraphicsWidget {
	final r = new QGraphicsWidget();
	r.initFrom(ptr, "widgets.QGraphicsWidget");
	return r;
}

function NewQGraphicsWidget(parent:QGraphicsItem_ITF, wFlags:Int):QGraphicsWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGraphicsWidget", "", parent, wFlags]);
}

function QGraphicsWidget_SetTabOrder(first:QGraphicsWidget_ITF, second:QGraphicsWidget_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QGraphicsWidget_SetTabOrder", "", first, second]);
}

interface QGridLayout_ITF extends QLayout_ITF {
	public function QGridLayout_PTR():QGridLayout;
}

class QGridLayout extends QLayout implements QGridLayout_ITF {
	public function new() {
		super();
	}

	public function QGridLayout_PTR():QGridLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGridLayout_PTR"]);
	};

	public function AddItem_QGridLayout(item:QLayoutItem_ITF, row:Int, column:Int, rowSpan:Int, columnSpan:Int, alignment:Int) {
		Internal.callLocalFunction([
			"", Pointer(), ___className, "AddItem", item, row, column, rowSpan, columnSpan, alignment
		]);
	};

	public function ConnectAddItem2(f:(item:QLayoutItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAddItem2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAddItem2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAddItem2"]);
	};

	public function AddItem2(item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem2", item]);
	};

	public function AddItem2Default(item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem2Default", item]);
	};

	public function AddLayout(layout:QLayout_ITF, row:Int, column:Int, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddLayout", layout, row, column, alignment]);
	};

	public function AddLayout2(layout:QLayout_ITF, row:Int, column:Int, rowSpan:Int, columnSpan:Int, alignment:Int) {
		Internal.callLocalFunction([
			"", Pointer(), ___className, "AddLayout2", layout, row, column, rowSpan, columnSpan, alignment
		]);
	};

	public function AddWidget2(widget:QWidget_ITF, row:Int, column:Int, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddWidget2", widget, row, column, alignment]);
	};

	public function AddWidget3(widget:QWidget_ITF, fromRow:Int, fromColumn:Int, rowSpan:Int, columnSpan:Int, alignment:Int) {
		Internal.callLocalFunction([
			"", Pointer(), ___className, "AddWidget3", widget, fromRow, fromColumn, rowSpan, columnSpan, alignment
		]);
	};

	public function CellRect(row:Int, column:Int):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CellRect", row, column]);
	};

	public function ColumnCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCount"]);
	};

	public function ColumnMinimumWidth(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnMinimumWidth", column]);
	};

	public function ColumnStretch(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnStretch", column]);
	};

	public override function ConnectCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCount"]);
	};

	public override function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function CountDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CountDefault"]);
	};

	public function GetItemPosition(index:Int, row:Int, column:Int, rowSpan:Int, columnSpan:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"GetItemPosition",
			index,
			row,
			column,
			rowSpan,
			columnSpan
		]);
	};

	public function HorizontalSpacing():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalSpacing"]);
	};

	public override function ConnectItemAt(f:(index:Int) -> QLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectItemAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemAt"]);
	};

	public override function ItemAt(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", index]);
	};

	public function ItemAtDefault(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAtDefault", index]);
	};

	public function ItemAtPosition(row:Int, column:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAtPosition", row, column]);
	};

	public function OriginCorner():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OriginCorner"]);
	};

	public function RowCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowCount"]);
	};

	public function RowMinimumHeight(row:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowMinimumHeight", row]);
	};

	public function RowStretch(row:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowStretch", row]);
	};

	public function SetColumnMinimumWidth(column:Int, minSize:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnMinimumWidth", column, minSize]);
	};

	public function SetColumnStretch(column:Int, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnStretch", column, stretch]);
	};

	public function SetHorizontalSpacing(spacing:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalSpacing", spacing]);
	};

	public function SetOriginCorner(corner:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOriginCorner", corner]);
	};

	public function SetRowMinimumHeight(row:Int, minSize:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowMinimumHeight", row, minSize]);
	};

	public function SetRowStretch(row:Int, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowStretch", row, stretch]);
	};

	public function SetVerticalSpacing(spacing:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalSpacing", spacing]);
	};

	public override function ConnectSizeHint(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public override function SizeHintDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault"]);
	};

	public override function ConnectTakeAt(f:(index:Int) -> QLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTakeAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectTakeAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTakeAt"]);
	};

	public override function TakeAt(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeAt", index]);
	};

	public function TakeAtDefault(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeAtDefault", index]);
	};

	public function VerticalSpacing():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalSpacing"]);
	};

	public function ConnectDestroyQGridLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQGridLayout",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQGridLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGridLayout"]);
	};

	public function DestroyQGridLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGridLayout"]);
	};

	public function DestroyQGridLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGridLayoutDefault"]);
	};
}

function NewQGridLayoutFromPointer(ptr:String):QGridLayout {
	final r = new QGridLayout();
	r.initFrom(ptr, "widgets.QGridLayout");
	return r;
}

function NewQGridLayout(parent:QWidget_ITF):QGridLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGridLayout", "", parent]);
}

function NewQGridLayout2():QGridLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGridLayout2", ""]);
}

interface QGroupBox_ITF extends QWidget_ITF {
	public function QGroupBox_PTR():QGroupBox;
}

class QGroupBox extends QWidget implements QGroupBox_ITF {
	public function new() {
		super();
	}

	public function QGroupBox_PTR():QGroupBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QGroupBox_PTR"]);
	};

	public function Alignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment"]);
	};

	public function ConnectClicked(f:(checked:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClicked"]);
	};

	public function Clicked(checked:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clicked", checked]);
	};

	public function InitStyleOption(option:QStyleOptionGroupBox_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function IsCheckable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsCheckable"]);
	};

	public function IsChecked():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsChecked"]);
	};

	public function IsFlat():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsFlat"]);
	};

	public function SetAlignment(alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", alignment]);
	};

	public function SetCheckable(checkable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckable", checkable]);
	};

	public function ConnectSetChecked(f:(checked:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetChecked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetChecked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetChecked"]);
	};

	public function SetChecked(checked:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetChecked", checked]);
	};

	public function SetCheckedDefault(checked:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckedDefault", checked]);
	};

	public function SetFlat(flat:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFlat", flat]);
	};

	public function SetTitle(title:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTitle", title]);
	};

	public function Title():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Title"]);
	};

	public function ConnectToggled(f:(on:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectToggled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectToggled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToggled"]);
	};

	public function Toggled(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Toggled", on]);
	};

	public function ConnectDestroyQGroupBox(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQGroupBox", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQGroupBox() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQGroupBox"]);
	};

	public function DestroyQGroupBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGroupBox"]);
	};

	public function DestroyQGroupBoxDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQGroupBoxDefault"]);
	};
}

function NewQGroupBoxFromPointer(ptr:String):QGroupBox {
	final r = new QGroupBox();
	r.initFrom(ptr, "widgets.QGroupBox");
	return r;
}

function NewQGroupBox(parent:QWidget_ITF):QGroupBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGroupBox", "", parent]);
}

function NewQGroupBox2(title:String, parent:QWidget_ITF):QGroupBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQGroupBox2", "", title, parent]);
}

interface QHBoxLayout_ITF extends QBoxLayout_ITF {
	public function QHBoxLayout_PTR():QHBoxLayout;
}

class QHBoxLayout extends QBoxLayout implements QHBoxLayout_ITF {
	public function new() {
		super();
	}

	public function QHBoxLayout_PTR():QHBoxLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QHBoxLayout_PTR"]);
	};

	public function ConnectDestroyQHBoxLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQHBoxLayout",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQHBoxLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQHBoxLayout"]);
	};

	public function DestroyQHBoxLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQHBoxLayout"]);
	};

	public function DestroyQHBoxLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQHBoxLayoutDefault"]);
	};
}

function NewQHBoxLayoutFromPointer(ptr:String):QHBoxLayout {
	final r = new QHBoxLayout();
	r.initFrom(ptr, "widgets.QHBoxLayout");
	return r;
}

function NewQHBoxLayout():QHBoxLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQHBoxLayout", ""]);
}

function NewQHBoxLayout2(parent:QWidget_ITF):QHBoxLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQHBoxLayout2", "", parent]);
}

interface QHeaderView_ITF extends QAbstractItemView_ITF {
	public function QHeaderView_PTR():QHeaderView;
}

class QHeaderView extends QAbstractItemView implements QHeaderView_ITF {
	public function new() {
		super();
	}

	public function QHeaderView_PTR():QHeaderView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QHeaderView_PTR"]);
	};

	public function CascadingSectionResizes():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CascadingSectionResizes"]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public override function ConnectCurrentChanged(f:(current:QModelIndex, old:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public override function CurrentChanged(current:QModelIndex_ITF, old:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", current, old]);
	};

	public override function CurrentChangedDefault(current:QModelIndex_ITF, old:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChangedDefault", current, old]);
	};

	public function DefaultAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultAlignment"]);
	};

	public function DefaultSectionSize():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultSectionSize"]);
	};

	public function ConnectGeometriesChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectGeometriesChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectGeometriesChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGeometriesChanged"]);
	};

	public function GeometriesChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "GeometriesChanged"]);
	};

	public function ConnectHeaderDataChanged(f:(orientation:Int, logicalFirst:Int, logicalLast:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHeaderDataChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHeaderDataChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHeaderDataChanged"]);
	};

	public function HeaderDataChanged(orientation:Int, logicalFirst:Int, logicalLast:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"HeaderDataChanged",
			orientation,
			logicalFirst,
			logicalLast
		]);
	};

	public function HeaderDataChangedDefault(orientation:Int, logicalFirst:Int, logicalLast:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"HeaderDataChangedDefault",
			orientation,
			logicalFirst,
			logicalLast
		]);
	};

	public function HiddenSectionCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HiddenSectionCount"]);
	};

	public function HideSection(logicalIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideSection", logicalIndex]);
	};

	public function HighlightSections():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HighlightSections"]);
	};

	public override function ConnectHorizontalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectHorizontalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHorizontalOffset"]);
	};

	public override function HorizontalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffset"]);
	};

	public function HorizontalOffsetDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffsetDefault"]);
	};

	public function InitStyleOption_QAbstractScrollArea(option:QStyleOptionHeader_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function IsFirstSectionMovable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsFirstSectionMovable"]);
	};

	public function IsSectionHidden(logicalIndex:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSectionHidden", logicalIndex]);
	};

	public function IsSortIndicatorShown():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSortIndicatorShown"]);
	};

	public function Length():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Length"]);
	};

	public function LogicalIndex(visualIndex:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LogicalIndex", visualIndex]);
	};

	public function LogicalIndexAt(position:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LogicalIndexAt", position]);
	};

	public function LogicalIndexAt2(x:Int, y:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LogicalIndexAt2", x, y]);
	};

	public function LogicalIndexAt3(pos:QPoint_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LogicalIndexAt3", pos]);
	};

	public function MaximumSectionSize():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSectionSize"]);
	};

	public function MinimumSectionSize():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSectionSize"]);
	};

	public function MoveSection(from:Int, to:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveSection", from, to]);
	};

	public function Offset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Offset"]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function ConnectPaintSection(f:(painter:QPainter, rect:QRect, logicalIndex:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintSection", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaintSection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintSection"]);
	};

	public function PaintSection(painter:QPainter_ITF, rect:QRect_ITF, logicalIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintSection", painter, rect, logicalIndex]);
	};

	public function PaintSectionDefault(painter:QPainter_ITF, rect:QRect_ITF, logicalIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintSectionDefault", painter, rect, logicalIndex]);
	};

	public override function ConnectReset(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectReset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectReset"]);
	};

	public override function Reset() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Reset"]);
	};

	public override function ResetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetDefault"]);
	};

	public function ResetDefaultSectionSize() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetDefaultSectionSize"]);
	};

	public function ResizeContentsPrecision():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ResizeContentsPrecision"]);
	};

	public function ResizeSection(logicalIndex:Int, size:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeSection", logicalIndex, size]);
	};

	public function ResizeSections(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeSections", mode]);
	};

	public function ConnectResizeSections2(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectResizeSections2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectResizeSections2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResizeSections2"]);
	};

	public function ResizeSections2() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeSections2"]);
	};

	public function ResizeSections2Default() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeSections2Default"]);
	};

	public function RestoreState(state:QByteArray_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RestoreState", state]);
	};

	public function SaveState():QByteArray {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SaveState"]);
	};

	public function ConnectSectionClicked(f:(logicalIndex:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSectionClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSectionClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionClicked"]);
	};

	public function SectionClicked(logicalIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SectionClicked", logicalIndex]);
	};

	public function ConnectSectionCountChanged(f:(oldCount:Int, newCount:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSectionCountChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSectionCountChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionCountChanged"]);
	};

	public function SectionCountChanged(oldCount:Int, newCount:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SectionCountChanged", oldCount, newCount]);
	};

	public function ConnectSectionDoubleClicked(f:(logicalIndex:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSectionDoubleClicked",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSectionDoubleClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionDoubleClicked"]);
	};

	public function SectionDoubleClicked(logicalIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SectionDoubleClicked", logicalIndex]);
	};

	public function ConnectSectionEntered(f:(logicalIndex:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSectionEntered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSectionEntered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionEntered"]);
	};

	public function SectionEntered(logicalIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SectionEntered", logicalIndex]);
	};

	public function ConnectSectionHandleDoubleClicked(f:(logicalIndex:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSectionHandleDoubleClicked",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSectionHandleDoubleClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionHandleDoubleClicked"]);
	};

	public function SectionHandleDoubleClicked(logicalIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SectionHandleDoubleClicked", logicalIndex]);
	};

	public function ConnectSectionMoved(f:(logicalIndex:Int, oldVisualIndex:Int, newVisualIndex:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSectionMoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSectionMoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionMoved"]);
	};

	public function SectionMoved(logicalIndex:Int, oldVisualIndex:Int, newVisualIndex:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SectionMoved",
			logicalIndex,
			oldVisualIndex,
			newVisualIndex
		]);
	};

	public function SectionPosition(logicalIndex:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionPosition", logicalIndex]);
	};

	public function ConnectSectionPressed(f:(logicalIndex:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSectionPressed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSectionPressed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionPressed"]);
	};

	public function SectionPressed(logicalIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SectionPressed", logicalIndex]);
	};

	public function SectionResizeMode(logicalIndex:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionResizeMode", logicalIndex]);
	};

	public function ConnectSectionResized(f:(logicalIndex:Int, oldSize:Int, newSize:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSectionResized", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSectionResized() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionResized"]);
	};

	public function SectionResized(logicalIndex:Int, oldSize:Int, newSize:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SectionResized", logicalIndex, oldSize, newSize]);
	};

	public function SectionSize(logicalIndex:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionSize", logicalIndex]);
	};

	public function ConnectSectionSizeFromContents(f:(logicalIndex:Int) -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSectionSizeFromContents",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSectionSizeFromContents() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionSizeFromContents"]);
	};

	public function SectionSizeFromContents(logicalIndex:Int):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionSizeFromContents", logicalIndex]);
	};

	public function SectionSizeFromContentsDefault(logicalIndex:Int):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionSizeFromContentsDefault", logicalIndex]);
	};

	public function SectionSizeHint(logicalIndex:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionSizeHint", logicalIndex]);
	};

	public function SectionViewportPosition(logicalIndex:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionViewportPosition", logicalIndex]);
	};

	public function ConnectSectionsAboutToBeRemoved(f:(parent:QModelIndex, logicalFirst:Int, logicalLast:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSectionsAboutToBeRemoved",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSectionsAboutToBeRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionsAboutToBeRemoved"]);
	};

	public function SectionsAboutToBeRemoved(parent:QModelIndex_ITF, logicalFirst:Int, logicalLast:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SectionsAboutToBeRemoved",
			parent,
			logicalFirst,
			logicalLast
		]);
	};

	public function SectionsAboutToBeRemovedDefault(parent:QModelIndex_ITF, logicalFirst:Int, logicalLast:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SectionsAboutToBeRemovedDefault",
			parent,
			logicalFirst,
			logicalLast
		]);
	};

	public function SectionsClickable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionsClickable"]);
	};

	public function SectionsHidden():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionsHidden"]);
	};

	public function ConnectSectionsInserted(f:(parent:QModelIndex, logicalFirst:Int, logicalLast:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSectionsInserted", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSectionsInserted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSectionsInserted"]);
	};

	public function SectionsInserted(parent:QModelIndex_ITF, logicalFirst:Int, logicalLast:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SectionsInserted",
			parent,
			logicalFirst,
			logicalLast
		]);
	};

	public function SectionsInsertedDefault(parent:QModelIndex_ITF, logicalFirst:Int, logicalLast:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SectionsInsertedDefault",
			parent,
			logicalFirst,
			logicalLast
		]);
	};

	public function SectionsMovable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionsMovable"]);
	};

	public function SectionsMoved():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SectionsMoved"]);
	};

	public function SetCascadingSectionResizes(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCascadingSectionResizes", enable]);
	};

	public function SetDefaultAlignment(alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultAlignment", alignment]);
	};

	public function SetDefaultSectionSize(size:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultSectionSize", size]);
	};

	public function SetFirstSectionMovable(movable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFirstSectionMovable", movable]);
	};

	public function SetHighlightSections(highlight:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHighlightSections", highlight]);
	};

	public function SetMaximumSectionSize(size:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumSectionSize", size]);
	};

	public function SetMinimumSectionSize(size:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumSectionSize", size]);
	};

	public function ConnectSetOffset(f:(offset:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetOffset", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOffset"]);
	};

	public function SetOffset(offset:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffset", offset]);
	};

	public function SetOffsetDefault(offset:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffsetDefault", offset]);
	};

	public function ConnectSetOffsetToLastSection(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetOffsetToLastSection",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetOffsetToLastSection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOffsetToLastSection"]);
	};

	public function SetOffsetToLastSection() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffsetToLastSection"]);
	};

	public function SetOffsetToLastSectionDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffsetToLastSectionDefault"]);
	};

	public function ConnectSetOffsetToSectionPosition(f:(visualSectionNumber:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetOffsetToSectionPosition",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetOffsetToSectionPosition() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOffsetToSectionPosition"]);
	};

	public function SetOffsetToSectionPosition(visualSectionNumber:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffsetToSectionPosition", visualSectionNumber]);
	};

	public function SetOffsetToSectionPositionDefault(visualSectionNumber:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SetOffsetToSectionPositionDefault",
			visualSectionNumber
		]);
	};

	public function SetResizeContentsPrecision(precision:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetResizeContentsPrecision", precision]);
	};

	public function SetSectionHidden(logicalIndex:Int, hide:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSectionHidden", logicalIndex, hide]);
	};

	public function SetSectionResizeMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSectionResizeMode", mode]);
	};

	public function SetSectionResizeMode2(logicalIndex:Int, mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSectionResizeMode2", logicalIndex, mode]);
	};

	public function SetSectionsClickable(clickable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSectionsClickable", clickable]);
	};

	public function SetSectionsMovable(movable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSectionsMovable", movable]);
	};

	public override function ConnectSetSelection(f:(rect:QRect, flags:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetSelection"]);
	};

	public override function SetSelection(rect:QRect_ITF, flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelection", rect, flags]);
	};

	public function SetSelectionDefault(rect:QRect_ITF, flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionDefault", rect, flags]);
	};

	public function SetSortIndicator(logicalIndex:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSortIndicator", logicalIndex, order]);
	};

	public function SetSortIndicatorShown(show:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSortIndicatorShown", show]);
	};

	public function SetStretchLastSection(stretch:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStretchLastSection", stretch]);
	};

	public override function ConnectSetVisible(f:(v:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetVisible"]);
	};

	public override function SetVisible(v:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisible", v]);
	};

	public override function SetVisibleDefault(v:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisibleDefault", v]);
	};

	public function ShowSection(logicalIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowSection", logicalIndex]);
	};

	public function ConnectSortIndicatorChanged(f:(logicalIndex:Int, order:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSortIndicatorChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSortIndicatorChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSortIndicatorChanged"]);
	};

	public function SortIndicatorChanged(logicalIndex:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortIndicatorChanged", logicalIndex, order]);
	};

	public function SortIndicatorOrder():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SortIndicatorOrder"]);
	};

	public function SortIndicatorSection():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SortIndicatorSection"]);
	};

	public function StretchLastSection():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StretchLastSection"]);
	};

	public function StretchSectionCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StretchSectionCount"]);
	};

	public function SwapSections(first:Int, second:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SwapSections", first, second]);
	};

	public override function ConnectVerticalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectVerticalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVerticalOffset"]);
	};

	public override function VerticalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffset"]);
	};

	public function VerticalOffsetDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffsetDefault"]);
	};

	public function VisualIndex(logicalIndex:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualIndex", logicalIndex]);
	};

	public function VisualIndexAt(position:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualIndexAt", position]);
	};

	public function ConnectDestroyQHeaderView(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQHeaderView",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQHeaderView() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQHeaderView"]);
	};

	public function DestroyQHeaderView() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQHeaderView"]);
	};

	public function DestroyQHeaderViewDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQHeaderViewDefault"]);
	};

	public override function IndexAt(point:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAt", point]);
	};

	public function IndexAtDefault(point:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAtDefault", point]);
	};

	public override function IsIndexHidden(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHidden", index]);
	};

	public function IsIndexHiddenDefault(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHiddenDefault", index]);
	};

	public override function MoveCursor(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursor", cursorAction, modifiers]);
	};

	public function MoveCursorDefault(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursorDefault", cursorAction, modifiers]);
	};

	public override function ScrollTo(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollTo", index, hint]);
	};

	public function ScrollToDefault(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToDefault", index, hint]);
	};

	public override function VisualRect(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRect", index]);
	};

	public function VisualRectDefault(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRectDefault", index]);
	};

	public override function VisualRegionForSelection(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelection", selection]);
	};

	public function VisualRegionForSelectionDefault(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelectionDefault", selection]);
	};
}

function NewQHeaderViewFromPointer(ptr:String):QHeaderView {
	final r = new QHeaderView();
	r.initFrom(ptr, "widgets.QHeaderView");
	return r;
}

function NewQHeaderView(orientation:Int, parent:QWidget_ITF):QHeaderView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQHeaderView", "", orientation, parent]);
}

interface QInputDialog_ITF extends QDialog_ITF {
	public function QInputDialog_PTR():QInputDialog;
}

class QInputDialog extends QDialog implements QInputDialog_ITF {
	public function new() {
		super();
	}

	public function QInputDialog_PTR():QInputDialog {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QInputDialog_PTR"]);
	};

	public function CancelButtonText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CancelButtonText"]);
	};

	public function ComboBoxItems():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ComboBoxItems"]);
	};

	public override function ConnectDone(f:(result:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDone() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDone"]);
	};

	public override function Done(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Done", result]);
	};

	public override function DoneDefault(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoneDefault", result]);
	};

	public function DoubleDecimals():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DoubleDecimals"]);
	};

	public function DoubleMaximum():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DoubleMaximum"]);
	};

	public function DoubleMinimum():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DoubleMinimum"]);
	};

	public function DoubleStep():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DoubleStep"]);
	};

	public function DoubleValue():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DoubleValue"]);
	};

	public function ConnectDoubleValueChanged(f:(value:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDoubleValueChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDoubleValueChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDoubleValueChanged"]);
	};

	public function DoubleValueChanged(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoubleValueChanged", value]);
	};

	public function ConnectDoubleValueSelected(f:(value:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDoubleValueSelected",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDoubleValueSelected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDoubleValueSelected"]);
	};

	public function DoubleValueSelected(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoubleValueSelected", value]);
	};

	public function GetDouble(parent:QWidget_ITF, title:String, label:String, value:Float, mi:Float, max:Float, decimals:Int, ok:Bool, flags:Int):Float {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetDouble", parent, title, label, value, mi, max, decimals, ok, flags
		]);
	};

	public function GetDouble2(parent:QWidget_ITF, title:String, label:String, value:Float, mi:Float, max:Float, decimals:Int, ok:Bool, flags:Int,
			step:Float):Float {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetDouble2", parent, title, label, value, mi, max, decimals, ok, flags, step
		]);
	};

	public function GetInt(parent:QWidget_ITF, title:String, label:String, value:Int, mi:Int, max:Int, step:Int, ok:Bool, flags:Int):Int {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetInt", parent, title, label, value, mi, max, step, ok, flags
		]);
	};

	public function GetItem(parent:QWidget_ITF, title:String, label:String, items:Array<String>, current:Int, editable:Bool, ok:Bool, flags:Int,
			inputMethodHints:Int):String {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetItem", parent, title, label, items, current, editable, ok, flags, inputMethodHints
		]);
	};

	public function GetMultiLineText(parent:QWidget_ITF, title:String, label:String, text:String, ok:Bool, flags:Int, inputMethodHints:Int):String {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetMultiLineText", parent, title, label, text, ok, flags, inputMethodHints
		]);
	};

	public function GetText(parent:QWidget_ITF, title:String, label:String, mode:Int, text:String, ok:Bool, flags:Int, inputMethodHints:Int):String {
		return Internal.callLocalFunction([
			"", Pointer(), ___className, "GetText", parent, title, label, mode, text, ok, flags, inputMethodHints
		]);
	};

	public function InputMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InputMode"]);
	};

	public function IntMaximum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IntMaximum"]);
	};

	public function IntMinimum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IntMinimum"]);
	};

	public function IntStep():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IntStep"]);
	};

	public function IntValue():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IntValue"]);
	};

	public function ConnectIntValueChanged(f:(value:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIntValueChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIntValueChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIntValueChanged"]);
	};

	public function IntValueChanged(value:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "IntValueChanged", value]);
	};

	public function ConnectIntValueSelected(f:(value:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIntValueSelected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIntValueSelected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIntValueSelected"]);
	};

	public function IntValueSelected(value:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "IntValueSelected", value]);
	};

	public function IsComboBoxEditable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsComboBoxEditable"]);
	};

	public function LabelText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LabelText"]);
	};

	public function OkButtonText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OkButtonText"]);
	};

	public function Open_QInputDialog(receiver:QObject_ITF, member:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Open", receiver, member]);
	};

	public function Options():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Options"]);
	};

	public function SetCancelButtonText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCancelButtonText", text]);
	};

	public function SetComboBoxEditable(editable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetComboBoxEditable", editable]);
	};

	public function SetComboBoxItems(items:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetComboBoxItems", items]);
	};

	public function SetDoubleDecimals(decimals:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDoubleDecimals", decimals]);
	};

	public function SetDoubleMaximum(max:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDoubleMaximum", max]);
	};

	public function SetDoubleMinimum(mi:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDoubleMinimum", mi]);
	};

	public function SetDoubleRange(mi:Float, max:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDoubleRange", mi, max]);
	};

	public function SetDoubleStep(step:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDoubleStep", step]);
	};

	public function SetDoubleValue(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDoubleValue", value]);
	};

	public function SetInputMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInputMode", mode]);
	};

	public function SetIntMaximum(max:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIntMaximum", max]);
	};

	public function SetIntMinimum(mi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIntMinimum", mi]);
	};

	public function SetIntRange(mi:Int, max:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIntRange", mi, max]);
	};

	public function SetIntStep(step:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIntStep", step]);
	};

	public function SetIntValue(value:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIntValue", value]);
	};

	public function SetLabelText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLabelText", text]);
	};

	public function SetOkButtonText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOkButtonText", text]);
	};

	public function SetOption(option:Int, on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOption", option, on]);
	};

	public function SetOptions(options:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOptions", options]);
	};

	public function SetTextEchoMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextEchoMode", mode]);
	};

	public function SetTextValue(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextValue", text]);
	};

	public function TestOption(option:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TestOption", option]);
	};

	public function TextEchoMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextEchoMode"]);
	};

	public function TextValue():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextValue"]);
	};

	public function ConnectTextValueChanged(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTextValueChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTextValueChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTextValueChanged"]);
	};

	public function TextValueChanged(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TextValueChanged", text]);
	};

	public function ConnectTextValueSelected(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTextValueSelected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTextValueSelected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTextValueSelected"]);
	};

	public function TextValueSelected(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TextValueSelected", text]);
	};

	public function ConnectDestroyQInputDialog(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQInputDialog",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQInputDialog() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQInputDialog"]);
	};

	public function DestroyQInputDialog() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQInputDialog"]);
	};

	public function DestroyQInputDialogDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQInputDialogDefault"]);
	};
}

function NewQInputDialogFromPointer(ptr:String):QInputDialog {
	final r = new QInputDialog();
	r.initFrom(ptr, "widgets.QInputDialog");
	return r;
}

function NewQInputDialog(parent:QWidget_ITF, flags:Int):QInputDialog {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQInputDialog", "", parent, flags]);
}

function QInputDialog_GetDouble(parent:QWidget_ITF, title:String, label:String, value:Float, mi:Float, max:Float, decimals:Int, ok:Bool, flags:Int):Float {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QInputDialog_GetDouble", "", parent, title, label, value, mi, max, decimals, ok, flags
	]);
}

function QInputDialog_GetDouble2(parent:QWidget_ITF, title:String, label:String, value:Float, mi:Float, max:Float, decimals:Int, ok:Bool, flags:Int,
		step:Float):Float {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QInputDialog_GetDouble2", "", parent, title, label, value, mi, max, decimals, ok, flags, step
	]);
}

function QInputDialog_GetInt(parent:QWidget_ITF, title:String, label:String, value:Int, mi:Int, max:Int, step:Int, ok:Bool, flags:Int):Int {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QInputDialog_GetInt", "", parent, title, label, value, mi, max, step, ok, flags
	]);
}

function QInputDialog_GetItem(parent:QWidget_ITF, title:String, label:String, items:Array<String>, current:Int, editable:Bool, ok:Bool, flags:Int,
		inputMethodHints:Int):String {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QInputDialog_GetItem", "", parent, title, label, items, current, editable, ok, flags, inputMethodHints
	]);
}

function QInputDialog_GetMultiLineText(parent:QWidget_ITF, title:String, label:String, text:String, ok:Bool, flags:Int, inputMethodHints:Int):String {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QInputDialog_GetMultiLineText", "", parent, title, label, text, ok, flags, inputMethodHints
	]);
}

function QInputDialog_GetText(parent:QWidget_ITF, title:String, label:String, mode:Int, text:String, ok:Bool, flags:Int, inputMethodHints:Int):String {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.QInputDialog_GetText", "", parent, title, label, mode, text, ok, flags, inputMethodHints
	]);
}

interface QItemDelegate_ITF extends QAbstractItemDelegate_ITF {
	public function QItemDelegate_PTR():QItemDelegate;
}

class QItemDelegate extends QAbstractItemDelegate implements QItemDelegate_ITF {
	public function new() {
		super();
	}

	public function QItemDelegate_PTR():QItemDelegate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QItemDelegate_PTR"]);
	};

	public function DrawBackground(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawBackground", painter, option, index]);
	};

	public function ConnectDrawCheck(f:(painter:QPainter, option:QStyleOptionViewItem, rect:QRect, state:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawCheck", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawCheck() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawCheck"]);
	};

	public function DrawCheck(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, rect:QRect_ITF, state:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawCheck", painter, option, rect, state]);
	};

	public function DrawCheckDefault(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, rect:QRect_ITF, state:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawCheckDefault", painter, option, rect, state]);
	};

	public function ConnectDrawDecoration(f:(painter:QPainter, option:QStyleOptionViewItem, rect:QRect, pixmap:QPixmap) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawDecoration", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawDecoration() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawDecoration"]);
	};

	public function DrawDecoration(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, rect:QRect_ITF, pixmap:QPixmap_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawDecoration", painter, option, rect, pixmap]);
	};

	public function DrawDecorationDefault(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, rect:QRect_ITF, pixmap:QPixmap_ITF) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"DrawDecorationDefault",
			painter,
			option,
			rect,
			pixmap
		]);
	};

	public function ConnectDrawDisplay(f:(painter:QPainter, option:QStyleOptionViewItem, rect:QRect, text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawDisplay", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawDisplay() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawDisplay"]);
	};

	public function DrawDisplay(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, rect:QRect_ITF, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawDisplay", painter, option, rect, text]);
	};

	public function DrawDisplayDefault(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, rect:QRect_ITF, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawDisplayDefault", painter, option, rect, text]);
	};

	public function ConnectDrawFocus(f:(painter:QPainter, option:QStyleOptionViewItem, rect:QRect) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawFocus", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawFocus() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawFocus"]);
	};

	public function DrawFocus(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, rect:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawFocus", painter, option, rect]);
	};

	public function DrawFocusDefault(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, rect:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawFocusDefault", painter, option, rect]);
	};

	public function HasClipping():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasClipping"]);
	};

	public function ItemEditorFactory():QItemEditorFactory {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemEditorFactory"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionViewItem, index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, index]);
	};

	public function PaintDefault(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, index]);
	};

	public function SetClipping(clip:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetClipping", clip]);
	};

	public function SetItemEditorFactory(factory:QItemEditorFactory_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemEditorFactory", factory]);
	};

	public override function ConnectSizeHint(f:(option:QStyleOptionViewItem, index:QModelIndex) -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint(option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint", option, index]);
	};

	public function SizeHintDefault(option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault", option, index]);
	};

	public function ConnectDestroyQItemDelegate(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQItemDelegate",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQItemDelegate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQItemDelegate"]);
	};

	public function DestroyQItemDelegate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQItemDelegate"]);
	};

	public function DestroyQItemDelegateDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQItemDelegateDefault"]);
	};
}

function NewQItemDelegateFromPointer(ptr:String):QItemDelegate {
	final r = new QItemDelegate();
	r.initFrom(ptr, "widgets.QItemDelegate");
	return r;
}

function NewQItemDelegate(parent:QObject_ITF):QItemDelegate {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQItemDelegate", "", parent]);
}

interface QItemEditorCreator_ITF extends QItemEditorCreatorBase_ITF {
	public function QItemEditorCreator_PTR():QItemEditorCreator;
}

class QItemEditorCreator extends QItemEditorCreatorBase implements QItemEditorCreator_ITF {
	public function new() {
		super();
	}

	public function QItemEditorCreator_PTR():QItemEditorCreator {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QItemEditorCreator_PTR"]);
	};

	public function DestroyQItemEditorCreator() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQItemEditorCreator"]);
	};
}

interface QItemEditorCreatorBase_ITF {
	public function QItemEditorCreatorBase_PTR():QItemEditorCreatorBase;
}

class QItemEditorCreatorBase extends Internal implements QItemEditorCreatorBase_ITF {
	public function new() {
		super();
	}

	public function QItemEditorCreatorBase_PTR():QItemEditorCreatorBase {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QItemEditorCreatorBase_PTR"]);
	};

	public function ConnectCreateWidget(f:(parent:QWidget) -> QWidget) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCreateWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCreateWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreateWidget"]);
	};

	public function CreateWidget(parent:QWidget_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateWidget", parent]);
	};

	public function ConnectValuePropertyName(f:() -> QByteArray) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValuePropertyName", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValuePropertyName() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValuePropertyName"]);
	};

	public function ValuePropertyName():QByteArray {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValuePropertyName"]);
	};

	public function ConnectDestroyQItemEditorCreatorBase(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQItemEditorCreatorBase",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQItemEditorCreatorBase() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQItemEditorCreatorBase"]);
	};

	public function DestroyQItemEditorCreatorBase() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQItemEditorCreatorBase"]);
	};

	public function DestroyQItemEditorCreatorBaseDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQItemEditorCreatorBaseDefault"]);
	};
}

function NewQItemEditorCreatorBaseFromPointer(ptr:String):QItemEditorCreatorBase {
	final r = new QItemEditorCreatorBase();
	r.initFrom(ptr, "widgets.QItemEditorCreatorBase");
	return r;
}

interface QItemEditorFactory_ITF {
	public function QItemEditorFactory_PTR():QItemEditorFactory;
}

class QItemEditorFactory extends Internal implements QItemEditorFactory_ITF {
	public function new() {
		super();
	}

	public function QItemEditorFactory_PTR():QItemEditorFactory {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QItemEditorFactory_PTR"]);
	};

	public function ConnectCreateEditor(f:(userType:Int, parent:QWidget) -> QWidget) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCreateEditor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCreateEditor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreateEditor"]);
	};

	public function CreateEditor(userType:Int, parent:QWidget_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateEditor", userType, parent]);
	};

	public function CreateEditorDefault(userType:Int, parent:QWidget_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateEditorDefault", userType, parent]);
	};

	public function DefaultFactory():QItemEditorFactory {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultFactory"]);
	};

	public function RegisterEditor(userType:Int, creator:QItemEditorCreatorBase_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RegisterEditor", userType, creator]);
	};

	public function SetDefaultFactory(factory:QItemEditorFactory_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultFactory", factory]);
	};

	public function ConnectValuePropertyName(f:(userType:Int) -> QByteArray) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValuePropertyName", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValuePropertyName() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValuePropertyName"]);
	};

	public function ValuePropertyName(userType:Int):QByteArray {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValuePropertyName", userType]);
	};

	public function ValuePropertyNameDefault(userType:Int):QByteArray {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValuePropertyNameDefault", userType]);
	};

	public function ConnectDestroyQItemEditorFactory(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQItemEditorFactory",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQItemEditorFactory() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQItemEditorFactory"]);
	};

	public function DestroyQItemEditorFactory() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQItemEditorFactory"]);
	};

	public function DestroyQItemEditorFactoryDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQItemEditorFactoryDefault"]);
	};
}

function NewQItemEditorFactoryFromPointer(ptr:String):QItemEditorFactory {
	final r = new QItemEditorFactory();
	r.initFrom(ptr, "widgets.QItemEditorFactory");
	return r;
}

function NewQItemEditorFactory():QItemEditorFactory {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQItemEditorFactory", ""]);
}

function QItemEditorFactory_DefaultFactory():QItemEditorFactory {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QItemEditorFactory_DefaultFactory", ""]);
}

function QItemEditorFactory_SetDefaultFactory(factory:QItemEditorFactory_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QItemEditorFactory_SetDefaultFactory", "", factory]);
}

interface QKeyEventTransition_ITF extends QEventTransition_ITF {
	public function QKeyEventTransition_PTR():QKeyEventTransition;
}

class QKeyEventTransition extends QEventTransition implements QKeyEventTransition_ITF {
	public function new() {
		super();
	}

	public function QKeyEventTransition_PTR():QKeyEventTransition {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QKeyEventTransition_PTR"]);
	};

	public override function EventTestDefault(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventTestDefault", event]);
	};

	public function Key():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Key"]);
	};

	public function ModifierMask():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ModifierMask"]);
	};

	public override function OnTransitionDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OnTransitionDefault", event]);
	};

	public function SetKey(key:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetKey", key]);
	};

	public function SetModifierMask(modifierMask:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModifierMask", modifierMask]);
	};

	public function ConnectDestroyQKeyEventTransition(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQKeyEventTransition",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQKeyEventTransition() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQKeyEventTransition"]);
	};

	public function DestroyQKeyEventTransition() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQKeyEventTransition"]);
	};

	public function DestroyQKeyEventTransitionDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQKeyEventTransitionDefault"]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQKeyEventTransitionFromPointer(ptr:String):QKeyEventTransition {
	final r = new QKeyEventTransition();
	r.initFrom(ptr, "widgets.QKeyEventTransition");
	return r;
}

function NewQKeyEventTransition(sourceState:QState_ITF):QKeyEventTransition {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQKeyEventTransition", "", sourceState]);
}

function NewQKeyEventTransition2(object:QObject_ITF, ty:Int, key:Int, sourceState:QState_ITF):QKeyEventTransition {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQKeyEventTransition2", "", object, ty, key, sourceState]);
}

interface QKeySequenceEdit_ITF extends QWidget_ITF {
	public function QKeySequenceEdit_PTR():QKeySequenceEdit;
}

class QKeySequenceEdit extends QWidget implements QKeySequenceEdit_ITF {
	public function new() {
		super();
	}

	public function QKeySequenceEdit_PTR():QKeySequenceEdit {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QKeySequenceEdit_PTR"]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function ConnectEditingFinished(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEditingFinished", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEditingFinished() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEditingFinished"]);
	};

	public function EditingFinished() {
		Internal.callLocalFunction(["", Pointer(), ___className, "EditingFinished"]);
	};

	public function KeySequence():QKeySequence {
		return Internal.callLocalFunction(["", Pointer(), ___className, "KeySequence"]);
	};

	public function ConnectKeySequenceChanged(f:(keySequence:QKeySequence) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectKeySequenceChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectKeySequenceChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectKeySequenceChanged"]);
	};

	public function KeySequenceChanged(keySequence:QKeySequence_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeySequenceChanged", keySequence]);
	};

	public function ConnectSetKeySequence(f:(keySequence:QKeySequence) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetKeySequence", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetKeySequence() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetKeySequence"]);
	};

	public function SetKeySequence(keySequence:QKeySequence_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetKeySequence", keySequence]);
	};

	public function SetKeySequenceDefault(keySequence:QKeySequence_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetKeySequenceDefault", keySequence]);
	};

	public function ConnectDestroyQKeySequenceEdit(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQKeySequenceEdit",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQKeySequenceEdit() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQKeySequenceEdit"]);
	};

	public function DestroyQKeySequenceEdit() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQKeySequenceEdit"]);
	};

	public function DestroyQKeySequenceEditDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQKeySequenceEditDefault"]);
	};
}

function NewQKeySequenceEditFromPointer(ptr:String):QKeySequenceEdit {
	final r = new QKeySequenceEdit();
	r.initFrom(ptr, "widgets.QKeySequenceEdit");
	return r;
}

function NewQKeySequenceEdit(parent:QWidget_ITF):QKeySequenceEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQKeySequenceEdit", "", parent]);
}

function NewQKeySequenceEdit2(keySequence:QKeySequence_ITF, parent:QWidget_ITF):QKeySequenceEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQKeySequenceEdit2", "", keySequence, parent]);
}

interface QLCDNumber_ITF extends QFrame_ITF {
	public function QLCDNumber_PTR():QLCDNumber;
}

class QLCDNumber extends QFrame implements QLCDNumber_ITF {
	public function new() {
		super();
	}

	public function QLCDNumber_PTR():QLCDNumber {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QLCDNumber_PTR"]);
	};

	public function CheckOverflow(num:Float):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckOverflow", num]);
	};

	public function CheckOverflow2(num:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckOverflow2", num]);
	};

	public function DigitCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DigitCount"]);
	};

	public function ConnectDisplay(f:(s:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDisplay", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDisplay() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDisplay"]);
	};

	public function Display(s:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Display", s]);
	};

	public function DisplayDefault(s:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisplayDefault", s]);
	};

	public function ConnectDisplay2(f:(num:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDisplay2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDisplay2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDisplay2"]);
	};

	public function Display2(num:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Display2", num]);
	};

	public function Display2Default(num:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Display2Default", num]);
	};

	public function ConnectDisplay3(f:(num:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDisplay3", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDisplay3() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDisplay3"]);
	};

	public function Display3(num:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Display3", num]);
	};

	public function Display3Default(num:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Display3Default", num]);
	};

	public function IntValue():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IntValue"]);
	};

	public function Mode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Mode"]);
	};

	public function ConnectOverflow(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectOverflow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectOverflow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectOverflow"]);
	};

	public function Overflow() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Overflow"]);
	};

	public function SegmentStyle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SegmentStyle"]);
	};

	public function ConnectSetBinMode(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetBinMode", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetBinMode() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetBinMode"]);
	};

	public function SetBinMode() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBinMode"]);
	};

	public function SetBinModeDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBinModeDefault"]);
	};

	public function ConnectSetDecMode(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetDecMode", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetDecMode() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetDecMode"]);
	};

	public function SetDecMode() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDecMode"]);
	};

	public function SetDecModeDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDecModeDefault"]);
	};

	public function SetDigitCount(numDigits:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDigitCount", numDigits]);
	};

	public function ConnectSetHexMode(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetHexMode", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetHexMode() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetHexMode"]);
	};

	public function SetHexMode() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHexMode"]);
	};

	public function SetHexModeDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHexModeDefault"]);
	};

	public function SetMode(vql:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMode", vql]);
	};

	public function ConnectSetOctMode(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetOctMode", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetOctMode() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOctMode"]);
	};

	public function SetOctMode() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOctMode"]);
	};

	public function SetOctModeDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOctModeDefault"]);
	};

	public function SetSegmentStyle(vql:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSegmentStyle", vql]);
	};

	public function ConnectSetSmallDecimalPoint(f:(vbo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetSmallDecimalPoint",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetSmallDecimalPoint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetSmallDecimalPoint"]);
	};

	public function SetSmallDecimalPoint(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSmallDecimalPoint", vbo]);
	};

	public function SetSmallDecimalPointDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSmallDecimalPointDefault", vbo]);
	};

	public function SmallDecimalPoint():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SmallDecimalPoint"]);
	};

	public function Value():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Value"]);
	};

	public function ConnectDestroyQLCDNumber(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQLCDNumber", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQLCDNumber() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQLCDNumber"]);
	};

	public function DestroyQLCDNumber() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQLCDNumber"]);
	};

	public function DestroyQLCDNumberDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQLCDNumberDefault"]);
	};
}

function NewQLCDNumberFromPointer(ptr:String):QLCDNumber {
	final r = new QLCDNumber();
	r.initFrom(ptr, "widgets.QLCDNumber");
	return r;
}

function NewQLCDNumber(parent:QWidget_ITF):QLCDNumber {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQLCDNumber", "", parent]);
}

function NewQLCDNumber2(numDigits:Int, parent:QWidget_ITF):QLCDNumber {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQLCDNumber2", "", numDigits, parent]);
}

interface QLabel_ITF extends QFrame_ITF {
	public function QLabel_PTR():QLabel;
}

class QLabel extends QFrame implements QLabel_ITF {
	public function new() {
		super();
	}

	public function QLabel_PTR():QLabel {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QLabel_PTR"]);
	};

	public function Alignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment"]);
	};

	public function Buddy():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Buddy"]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function HasScaledContents():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasScaledContents"]);
	};

	public function HasSelectedText():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasSelectedText"]);
	};

	public function Indent():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Indent"]);
	};

	public function ConnectLinkActivated(f:(link:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLinkActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLinkActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLinkActivated"]);
	};

	public function LinkActivated(link:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "LinkActivated", link]);
	};

	public function ConnectLinkHovered(f:(link:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLinkHovered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLinkHovered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLinkHovered"]);
	};

	public function LinkHovered(link:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "LinkHovered", link]);
	};

	public function Margin():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Margin"]);
	};

	public function Movie():QMovie {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Movie"]);
	};

	public function OpenExternalLinks():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OpenExternalLinks"]);
	};

	public function Picture():QPicture {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Picture"]);
	};

	public function Pixmap():QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pixmap"]);
	};

	public function SelectedText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedText"]);
	};

	public function SelectionStart():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionStart"]);
	};

	public function SetAlignment(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", vqt]);
	};

	public function SetBuddy(buddy:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBuddy", buddy]);
	};

	public function SetIndent(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIndent", vi]);
	};

	public function SetMargin(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMargin", vi]);
	};

	public function ConnectSetMovie(f:(movie:QMovie) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetMovie", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetMovie() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetMovie"]);
	};

	public function SetMovie(movie:QMovie_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMovie", movie]);
	};

	public function SetMovieDefault(movie:QMovie_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMovieDefault", movie]);
	};

	public function ConnectSetNum(f:(num:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetNum", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetNum() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetNum"]);
	};

	public function SetNum(num:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNum", num]);
	};

	public function SetNumDefault(num:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNumDefault", num]);
	};

	public function ConnectSetNum2(f:(num:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetNum2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetNum2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetNum2"]);
	};

	public function SetNum2(num:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNum2", num]);
	};

	public function SetNum2Default(num:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNum2Default", num]);
	};

	public function SetOpenExternalLinks(open:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpenExternalLinks", open]);
	};

	public function ConnectSetPicture(f:(picture:QPicture) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetPicture", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetPicture() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetPicture"]);
	};

	public function SetPicture(picture:QPicture_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPicture", picture]);
	};

	public function SetPictureDefault(picture:QPicture_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPictureDefault", picture]);
	};

	public function ConnectSetPixmap(f:(vqp:QPixmap) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetPixmap", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetPixmap() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetPixmap"]);
	};

	public function SetPixmap(vqp:QPixmap_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPixmap", vqp]);
	};

	public function SetPixmapDefault(vqp:QPixmap_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPixmapDefault", vqp]);
	};

	public function SetScaledContents(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetScaledContents", vbo]);
	};

	public function SetSelection(start:Int, length:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelection", start, length]);
	};

	public function ConnectSetText(f:(vqs:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetText"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function SetTextDefault(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextDefault", vqs]);
	};

	public function SetTextFormat(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextFormat", vqt]);
	};

	public function SetTextInteractionFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextInteractionFlags", flags]);
	};

	public function SetWordWrap(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWordWrap", on]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function TextFormat():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextFormat"]);
	};

	public function TextInteractionFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextInteractionFlags"]);
	};

	public function WordWrap():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WordWrap"]);
	};

	public function ConnectDestroyQLabel(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQLabel", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQLabel() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQLabel"]);
	};

	public function DestroyQLabel() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQLabel"]);
	};

	public function DestroyQLabelDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQLabelDefault"]);
	};
}

function NewQLabelFromPointer(ptr:String):QLabel {
	final r = new QLabel();
	r.initFrom(ptr, "widgets.QLabel");
	return r;
}

function NewQLabel(parent:QWidget_ITF, ff:Int):QLabel {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQLabel", "", parent, ff]);
}

function NewQLabel2(text:String, parent:QWidget_ITF, ff:Int):QLabel {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQLabel2", "", text, parent, ff]);
}

interface QLayout_ITF extends QLayoutItem_ITF {
	public function QLayout_PTR():QLayout;
	public function QObject_PTR():QObject;
}

class QLayout extends QLayoutItem implements QLayout_ITF {
	public function QObject_PTR():QObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QObject_PTR"]);
	}

	public function new() {
		super();
	}

	public function QLayout_PTR():QLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QLayout_PTR"]);
	};

	public function Activate():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Activate"]);
	};

	public function AddChildLayout(l:QLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddChildLayout", l]);
	};

	public function AddChildWidget(w:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddChildWidget", w]);
	};

	public function ConnectAddItem(f:(item:QLayoutItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAddItem", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAddItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAddItem"]);
	};

	public function AddItem(item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem", item]);
	};

	public function AddWidget(w:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddWidget", w]);
	};

	public function AlignmentRect(r:QRect_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AlignmentRect", r]);
	};

	public function ConnectChildEvent(f:(e:QChildEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectChildEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectChildEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectChildEvent"]);
	};

	public function ChildEvent(e:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEvent", e]);
	};

	public function ChildEventDefault(e:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", e]);
	};

	public function ClosestAcceptableSize(widget:QWidget_ITF, size:QSize_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ClosestAcceptableSize", widget, size]);
	};

	public function ContentsMargins():QMargins {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ContentsMargins"]);
	};

	public function ContentsRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ContentsRect"]);
	};

	public function ConnectCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCount"]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public override function ConnectExpandingDirections(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectExpandingDirections",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectExpandingDirections() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExpandingDirections"]);
	};

	public override function ExpandingDirections():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExpandingDirections"]);
	};

	public function ExpandingDirectionsDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExpandingDirectionsDefault"]);
	};

	public override function ConnectGeometry(f:() -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectGeometry", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGeometry"]);
	};

	public override function Geometry():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Geometry"]);
	};

	public function GeometryDefault():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GeometryDefault"]);
	};

	public function GetContentsMargins(left:Int, top:Int, right:Int, bottom:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GetContentsMargins", left, top, right, bottom]);
	};

	public function ConnectIndexOf(f:(widget:QWidget) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndexOf", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIndexOf() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndexOf"]);
	};

	public function IndexOf(widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOf", widget]);
	};

	public function IndexOfDefault(widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOfDefault", widget]);
	};

	public function IndexOf2(layoutItem:QLayoutItem_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOf2", layoutItem]);
	};

	public override function ConnectIsEmpty(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsEmpty", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIsEmpty() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsEmpty"]);
	};

	public override function IsEmpty():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEmpty"]);
	};

	public function IsEmptyDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEmptyDefault"]);
	};

	public function IsEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEnabled"]);
	};

	public function ConnectItemAt(f:(index:Int) -> QLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemAt"]);
	};

	public function ItemAt(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", index]);
	};

	public override function ConnectMaximumSize(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMaximumSize", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMaximumSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMaximumSize"]);
	};

	public override function MaximumSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSize"]);
	};

	public function MaximumSizeDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSizeDefault"]);
	};

	public function MenuBar():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MenuBar"]);
	};

	public override function ConnectMinimumSize(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMinimumSize", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMinimumSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMinimumSize"]);
	};

	public override function MinimumSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSize"]);
	};

	public function MinimumSizeDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSizeDefault"]);
	};

	public function ParentWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentWidget"]);
	};

	public function RemoveItem(item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveItem", item]);
	};

	public function RemoveWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveWidget", widget]);
	};

	public function ReplaceWidget(from:QWidget_ITF, to:QWidget_ITF, options:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ReplaceWidget", from, to, options]);
	};

	public function SetAlignment_QObject(w:QWidget_ITF, alignment:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", w, alignment]);
	};

	public function SetAlignment2(l:QLayout_ITF, alignment:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment2", l, alignment]);
	};

	public function SetContentsMargins(left:Int, top:Int, right:Int, bottom:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetContentsMargins", left, top, right, bottom]);
	};

	public function SetContentsMargins2(margins:QMargins_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetContentsMargins2", margins]);
	};

	public function SetEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabled", enable]);
	};

	public override function ConnectSetGeometry(f:(r:QRect) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetGeometry", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetGeometry"]);
	};

	public override function SetGeometry(r:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometry", r]);
	};

	public function SetGeometryDefault(r:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometryDefault", r]);
	};

	public function SetMenuBar(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMenuBar", widget]);
	};

	public function SetSizeConstraint(vql:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizeConstraint", vql]);
	};

	public function SetSpacing(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSpacing", vi]);
	};

	public function SizeConstraint():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeConstraint"]);
	};

	public function Spacing():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Spacing"]);
	};

	public function ConnectTakeAt(f:(index:Int) -> QLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTakeAt", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTakeAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTakeAt"]);
	};

	public function TakeAt(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeAt", index]);
	};

	public function Update() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update"]);
	};

	public function ConnectNotify(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotify", sign]);
	};

	public function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public function CustomEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEvent", event]);
	};

	public function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public function DeleteLater() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLater"]);
	};

	public function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public function DisconnectNotify(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotify", sign]);
	};

	public function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public function Event(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Event", e]);
	};

	public function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public function EventFilter(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilter", watched, event]);
	};

	public function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public function MetaObject():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObject"]);
	};

	public function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public function TimerEvent(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEvent", event]);
	};

	public function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};

	public override function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public function SizeHintDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault"]);
	};
}

function NewQLayoutFromPointer(ptr:String):QLayout {
	final r = new QLayout();
	r.initFrom(ptr, "widgets.QLayout");
	return r;
}

function NewQLayout(parent:QWidget_ITF):QLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQLayout", "", parent]);
}

function NewQLayout2():QLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQLayout2", ""]);
}

function QLayout_ClosestAcceptableSize(widget:QWidget_ITF, size:QSize_ITF):QSize {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QLayout_ClosestAcceptableSize", "", widget, size]);
}

interface QLayoutItem_ITF {
	public function QLayoutItem_PTR():QLayoutItem;
}

class QLayoutItem extends Internal implements QLayoutItem_ITF {
	public function new() {
		super();
	}

	public function QLayoutItem_PTR():QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QLayoutItem_PTR"]);
	};

	public function Alignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment"]);
	};

	public function ConnectControlTypes(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectControlTypes", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectControlTypes() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectControlTypes"]);
	};

	public function ControlTypes():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ControlTypes"]);
	};

	public function ControlTypesDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ControlTypesDefault"]);
	};

	public function ConnectExpandingDirections(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectExpandingDirections",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectExpandingDirections() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExpandingDirections"]);
	};

	public function ExpandingDirections():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExpandingDirections"]);
	};

	public function ConnectGeometry(f:() -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectGeometry", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGeometry"]);
	};

	public function Geometry():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Geometry"]);
	};

	public function ConnectHasHeightForWidth(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHasHeightForWidth", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHasHeightForWidth() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHasHeightForWidth"]);
	};

	public function HasHeightForWidth():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasHeightForWidth"]);
	};

	public function HasHeightForWidthDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasHeightForWidthDefault"]);
	};

	public function ConnectHeightForWidth(f:(vi:Int) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHeightForWidth", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHeightForWidth() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHeightForWidth"]);
	};

	public function HeightForWidth(vi:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HeightForWidth", vi]);
	};

	public function HeightForWidthDefault(vi:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HeightForWidthDefault", vi]);
	};

	public function ConnectInvalidate(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInvalidate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInvalidate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInvalidate"]);
	};

	public function Invalidate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Invalidate"]);
	};

	public function InvalidateDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "InvalidateDefault"]);
	};

	public function ConnectIsEmpty(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsEmpty", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIsEmpty() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsEmpty"]);
	};

	public function IsEmpty():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEmpty"]);
	};

	public function ConnectLayout(f:() -> QLayout) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLayout", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLayout"]);
	};

	public function Layout():QLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Layout"]);
	};

	public function LayoutDefault():QLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LayoutDefault"]);
	};

	public function ConnectMaximumSize(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMaximumSize", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMaximumSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMaximumSize"]);
	};

	public function MaximumSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSize"]);
	};

	public function ConnectMinimumHeightForWidth(f:(w:Int) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectMinimumHeightForWidth",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectMinimumHeightForWidth() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMinimumHeightForWidth"]);
	};

	public function MinimumHeightForWidth(w:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumHeightForWidth", w]);
	};

	public function MinimumHeightForWidthDefault(w:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumHeightForWidthDefault", w]);
	};

	public function ConnectMinimumSize(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMinimumSize", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMinimumSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMinimumSize"]);
	};

	public function MinimumSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSize"]);
	};

	public function SetAlignment(alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", alignment]);
	};

	public function ConnectSetGeometry(f:(r:QRect) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetGeometry", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetGeometry"]);
	};

	public function SetGeometry(r:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometry", r]);
	};

	public function ConnectSizeHint(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public function ConnectSpacerItem(f:() -> QSpacerItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSpacerItem", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSpacerItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSpacerItem"]);
	};

	public function SpacerItem():QSpacerItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SpacerItem"]);
	};

	public function SpacerItemDefault():QSpacerItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SpacerItemDefault"]);
	};

	public function ConnectWidget(f:() -> QWidget) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWidget"]);
	};

	public function Widget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget"]);
	};

	public function WidgetDefault():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WidgetDefault"]);
	};

	public function ConnectDestroyQLayoutItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQLayoutItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQLayoutItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQLayoutItem"]);
	};

	public function DestroyQLayoutItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQLayoutItem"]);
	};

	public function DestroyQLayoutItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQLayoutItemDefault"]);
	};
}

function NewQLayoutItemFromPointer(ptr:String):QLayoutItem {
	final r = new QLayoutItem();
	r.initFrom(ptr, "widgets.QLayoutItem");
	return r;
}

function NewQLayoutItem(alignment:Int):QLayoutItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQLayoutItem", "", alignment]);
}

interface QLineEdit_ITF extends QWidget_ITF {
	public function QLineEdit_PTR():QLineEdit;
}

class QLineEdit extends QWidget implements QLineEdit_ITF {
	public function new() {
		super();
	}

	public function QLineEdit_PTR():QLineEdit {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QLineEdit_PTR"]);
	};

	public function AddAction_QLineEdit(action:QAction_ITF, position:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddAction", action, position]);
	};

	public function AddAction2(icon:QIcon_ITF, position:Int):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction2", icon, position]);
	};

	public function Alignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment"]);
	};

	public function Backspace() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Backspace"]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function Completer():QCompleter {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Completer"]);
	};

	public function ConnectCopy(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCopy", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCopy() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCopy"]);
	};

	public function Copy() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Copy"]);
	};

	public function CopyDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CopyDefault"]);
	};

	public function CreateStandardContextMenu():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateStandardContextMenu"]);
	};

	public function CursorBackward(mark:Bool, steps:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CursorBackward", mark, steps]);
	};

	public function CursorForward(mark:Bool, steps:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CursorForward", mark, steps]);
	};

	public function CursorMoveStyle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorMoveStyle"]);
	};

	public function CursorPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorPosition"]);
	};

	public function CursorPositionAt(pos:QPoint_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorPositionAt", pos]);
	};

	public function ConnectCursorPositionChanged(f:(oldPos:Int, newPos:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCursorPositionChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCursorPositionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCursorPositionChanged"]);
	};

	public function CursorPositionChanged(oldPos:Int, newPos:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CursorPositionChanged", oldPos, newPos]);
	};

	public function CursorRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorRect"]);
	};

	public function CursorWordBackward(mark:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CursorWordBackward", mark]);
	};

	public function CursorWordForward(mark:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CursorWordForward", mark]);
	};

	public function ConnectCut(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCut", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCut() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCut"]);
	};

	public function Cut() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Cut"]);
	};

	public function CutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CutDefault"]);
	};

	public function Del() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Del"]);
	};

	public function Deselect() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Deselect"]);
	};

	public function DisplayText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DisplayText"]);
	};

	public function DragEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DragEnabled"]);
	};

	public function EchoMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EchoMode"]);
	};

	public function ConnectEditingFinished(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEditingFinished", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEditingFinished() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEditingFinished"]);
	};

	public function EditingFinished() {
		Internal.callLocalFunction(["", Pointer(), ___className, "EditingFinished"]);
	};

	public function End(mark:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "End", mark]);
	};

	public function GetTextMargins(left:Int, top:Int, right:Int, bottom:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GetTextMargins", left, top, right, bottom]);
	};

	public function HasAcceptableInput():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasAcceptableInput"]);
	};

	public function HasFrame():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasFrame"]);
	};

	public function HasSelectedText():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasSelectedText"]);
	};

	public function Home(mark:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Home", mark]);
	};

	public function InitStyleOption(option:QStyleOptionFrame_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function InputMask():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InputMask"]);
	};

	public function ConnectInputRejected(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInputRejected", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInputRejected() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInputRejected"]);
	};

	public function InputRejected() {
		Internal.callLocalFunction(["", Pointer(), ___className, "InputRejected"]);
	};

	public function Insert(newText:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Insert", newText]);
	};

	public function IsClearButtonEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsClearButtonEnabled"]);
	};

	public function IsModified():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsModified"]);
	};

	public function IsReadOnly():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsReadOnly"]);
	};

	public function IsRedoAvailable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsRedoAvailable"]);
	};

	public function IsUndoAvailable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsUndoAvailable"]);
	};

	public function MaxLength():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaxLength"]);
	};

	public function ConnectPaste(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaste", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaste() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaste"]);
	};

	public function Paste() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paste"]);
	};

	public function PasteDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "PasteDefault"]);
	};

	public function PlaceholderText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PlaceholderText"]);
	};

	public function ConnectRedo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRedo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRedo"]);
	};

	public function Redo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Redo"]);
	};

	public function RedoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RedoDefault"]);
	};

	public function ConnectReturnPressed(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectReturnPressed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectReturnPressed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectReturnPressed"]);
	};

	public function ReturnPressed() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ReturnPressed"]);
	};

	public function ConnectSelectAll(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectAll() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectAll"]);
	};

	public function SelectAll() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAll"]);
	};

	public function SelectAllDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAllDefault"]);
	};

	public function SelectedText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedText"]);
	};

	public function ConnectSelectionChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectionChanged"]);
	};

	public function SelectionChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChanged"]);
	};

	public function SelectionEnd():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionEnd"]);
	};

	public function SelectionLength():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionLength"]);
	};

	public function SelectionStart():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionStart"]);
	};

	public function SetAlignment(flag:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", flag]);
	};

	public function SetClearButtonEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetClearButtonEnabled", enable]);
	};

	public function SetCompleter(c:QCompleter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCompleter", c]);
	};

	public function SetCursorMoveStyle(style:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCursorMoveStyle", style]);
	};

	public function SetCursorPosition(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCursorPosition", vi]);
	};

	public function SetDragEnabled(b:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDragEnabled", b]);
	};

	public function SetEchoMode(vql:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEchoMode", vql]);
	};

	public function SetFrame(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFrame", vbo]);
	};

	public function SetInputMask(inputMask:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInputMask", inputMask]);
	};

	public function SetMaxLength(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaxLength", vi]);
	};

	public function SetModified(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModified", vbo]);
	};

	public function SetPlaceholderText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPlaceholderText", vqs]);
	};

	public function SetReadOnly(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetReadOnly", vbo]);
	};

	public function SetSelection(start:Int, length:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelection", start, length]);
	};

	public function ConnectSetText(f:(vqs:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetText"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function SetTextDefault(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextDefault", vqs]);
	};

	public function SetTextMargins(left:Int, top:Int, right:Int, bottom:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextMargins", left, top, right, bottom]);
	};

	public function SetTextMargins2(margins:QMargins_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextMargins2", margins]);
	};

	public function SetValidator(v:QValidator_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValidator", v]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function ConnectTextChanged(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTextChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTextChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTextChanged"]);
	};

	public function TextChanged(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TextChanged", text]);
	};

	public function ConnectTextEdited(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTextEdited", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTextEdited() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTextEdited"]);
	};

	public function TextEdited(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TextEdited", text]);
	};

	public function TextMargins():QMargins {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextMargins"]);
	};

	public function ConnectUndo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUndo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUndo"]);
	};

	public function Undo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Undo"]);
	};

	public function UndoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UndoDefault"]);
	};

	public function Validator():QValidator {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Validator"]);
	};

	public function ConnectDestroyQLineEdit(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQLineEdit", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQLineEdit() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQLineEdit"]);
	};

	public function DestroyQLineEdit() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQLineEdit"]);
	};

	public function DestroyQLineEditDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQLineEditDefault"]);
	};
}

function NewQLineEditFromPointer(ptr:String):QLineEdit {
	final r = new QLineEdit();
	r.initFrom(ptr, "widgets.QLineEdit");
	return r;
}

function NewQLineEdit(parent:QWidget_ITF):QLineEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQLineEdit", "", parent]);
}

function NewQLineEdit2(contents:String, parent:QWidget_ITF):QLineEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQLineEdit2", "", contents, parent]);
}

interface QListView_ITF extends QAbstractItemView_ITF {
	public function QListView_PTR():QListView;
}

class QListView extends QAbstractItemView implements QListView_ITF {
	public function new() {
		super();
	}

	public function QListView_PTR():QListView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QListView_PTR"]);
	};

	public function BatchSize():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BatchSize"]);
	};

	public function ClearPropertyFlags() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearPropertyFlags"]);
	};

	public override function ConnectCurrentChanged(f:(current:QModelIndex, previous:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public override function CurrentChanged(current:QModelIndex_ITF, previous:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", current, previous]);
	};

	public override function CurrentChangedDefault(current:QModelIndex_ITF, previous:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChangedDefault", current, previous]);
	};

	public override function ConnectDataChanged(f:(topLeft:QModelIndex, bottomRight:QModelIndex, roles:Array<Int>) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDataChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDataChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDataChanged"]);
	};

	public override function DataChanged(topLeft:QModelIndex_ITF, bottomRight:QModelIndex_ITF, roles:Array<Int>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DataChanged", topLeft, bottomRight, roles]);
	};

	public override function DataChangedDefault(topLeft:QModelIndex_ITF, bottomRight:QModelIndex_ITF, roles:Array<Int>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DataChangedDefault", topLeft, bottomRight, roles]);
	};

	public function Flow():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Flow"]);
	};

	public function GridSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GridSize"]);
	};

	public override function ConnectHorizontalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectHorizontalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHorizontalOffset"]);
	};

	public override function HorizontalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffset"]);
	};

	public function HorizontalOffsetDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffsetDefault"]);
	};

	public override function ConnectIndexAt(f:(p:QPoint) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndexAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIndexAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndexAt"]);
	};

	public override function IndexAt(p:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAt", p]);
	};

	public function IndexAtDefault(p:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAtDefault", p]);
	};

	public override function ConnectIsIndexHidden(f:(index:QModelIndex) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsIndexHidden", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIsIndexHidden() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsIndexHidden"]);
	};

	public override function IsIndexHidden(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHidden", index]);
	};

	public function IsIndexHiddenDefault(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHiddenDefault", index]);
	};

	public function IsRowHidden(row:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsRowHidden", row]);
	};

	public function IsSelectionRectVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSelectionRectVisible"]);
	};

	public function IsWrapping():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsWrapping"]);
	};

	public function ItemAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAlignment"]);
	};

	public function LayoutMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LayoutMode"]);
	};

	public function ModelColumn():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ModelColumn"]);
	};

	public override function ConnectMoveCursor(f:(cursorAction:Int, modifiers:Int) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMoveCursor", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMoveCursor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMoveCursor"]);
	};

	public override function MoveCursor(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursor", cursorAction, modifiers]);
	};

	public function MoveCursorDefault(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursorDefault", cursorAction, modifiers]);
	};

	public function Movement():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Movement"]);
	};

	public function RectForIndex(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RectForIndex", index]);
	};

	public function ResizeMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ResizeMode"]);
	};

	public override function ConnectRowsAboutToBeRemoved(f:(parent:QModelIndex, start:Int, end:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectRowsAboutToBeRemoved",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectRowsAboutToBeRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowsAboutToBeRemoved"]);
	};

	public override function RowsAboutToBeRemoved(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsAboutToBeRemoved", parent, start, end]);
	};

	public override function RowsAboutToBeRemovedDefault(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsAboutToBeRemovedDefault", parent, start, end]);
	};

	public override function ConnectRowsInserted(f:(parent:QModelIndex, start:Int, end:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRowsInserted", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectRowsInserted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowsInserted"]);
	};

	public override function RowsInserted(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsInserted", parent, start, end]);
	};

	public override function RowsInsertedDefault(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsInsertedDefault", parent, start, end]);
	};

	public override function ConnectScrollTo(f:(index:QModelIndex, hint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollTo", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectScrollTo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollTo"]);
	};

	public override function ScrollTo(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollTo", index, hint]);
	};

	public function ScrollToDefault(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToDefault", index, hint]);
	};

	public override function ConnectSelectionChanged(f:(selected:QItemSelection, deselected:QItemSelection) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectionChanged"]);
	};

	public override function SelectionChanged(selected:QItemSelection_ITF, deselected:QItemSelection_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChanged", selected, deselected]);
	};

	public override function SelectionChangedDefault(selected:QItemSelection_ITF, deselected:QItemSelection_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChangedDefault", selected, deselected]);
	};

	public function SetBatchSize(batchSize:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBatchSize", batchSize]);
	};

	public function SetFlow(flow:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFlow", flow]);
	};

	public function SetGridSize(size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGridSize", size]);
	};

	public function SetItemAlignment(alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemAlignment", alignment]);
	};

	public function SetLayoutMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLayoutMode", mode]);
	};

	public function SetModelColumn(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModelColumn", column]);
	};

	public function SetMovement(movement:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMovement", movement]);
	};

	public function SetPositionForIndex(position:QPoint_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPositionForIndex", position, index]);
	};

	public function SetResizeMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetResizeMode", mode]);
	};

	public function SetRowHidden(row:Int, hide:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowHidden", row, hide]);
	};

	public override function ConnectSetSelection(f:(rect:QRect, command:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetSelection"]);
	};

	public override function SetSelection(rect:QRect_ITF, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelection", rect, command]);
	};

	public function SetSelectionDefault(rect:QRect_ITF, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionDefault", rect, command]);
	};

	public function SetSelectionRectVisible(show:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionRectVisible", show]);
	};

	public function SetSpacing(space:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSpacing", space]);
	};

	public function SetUniformItemSizes(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUniformItemSizes", enable]);
	};

	public function SetViewMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetViewMode", mode]);
	};

	public function SetWordWrap(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWordWrap", on]);
	};

	public function SetWrapping(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWrapping", enable]);
	};

	public function Spacing():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Spacing"]);
	};

	public function UniformItemSizes():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UniformItemSizes"]);
	};

	public override function ConnectUpdateGeometries(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdateGeometries", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectUpdateGeometries() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateGeometries"]);
	};

	public override function UpdateGeometries() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometries"]);
	};

	public override function UpdateGeometriesDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometriesDefault"]);
	};

	public override function ConnectVerticalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectVerticalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVerticalOffset"]);
	};

	public override function VerticalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffset"]);
	};

	public function VerticalOffsetDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffsetDefault"]);
	};

	public function ViewMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewMode"]);
	};

	public override function ConnectVisualRect(f:(index:QModelIndex) -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVisualRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectVisualRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisualRect"]);
	};

	public override function VisualRect(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRect", index]);
	};

	public function VisualRectDefault(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRectDefault", index]);
	};

	public override function ConnectVisualRegionForSelection(f:(selection:QItemSelection) -> QRegion) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectVisualRegionForSelection",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectVisualRegionForSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisualRegionForSelection"]);
	};

	public override function VisualRegionForSelection(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelection", selection]);
	};

	public function VisualRegionForSelectionDefault(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelectionDefault", selection]);
	};

	public function WordWrap():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WordWrap"]);
	};

	public function ConnectDestroyQListView(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQListView", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQListView() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQListView"]);
	};

	public function DestroyQListView() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQListView"]);
	};

	public function DestroyQListViewDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQListViewDefault"]);
	};
}

function NewQListViewFromPointer(ptr:String):QListView {
	final r = new QListView();
	r.initFrom(ptr, "widgets.QListView");
	return r;
}

function NewQListView(parent:QWidget_ITF):QListView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQListView", "", parent]);
}

interface QListWidget_ITF extends QListView_ITF {
	public function QListWidget_PTR():QListWidget;
}

class QListWidget extends QListView implements QListWidget_ITF {
	public function new() {
		super();
	}

	public function QListWidget_PTR():QListWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QListWidget_PTR"]);
	};

	public function AddItem(label:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem", label]);
	};

	public function AddItem2(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem2", item]);
	};

	public function AddItems(labels:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItems", labels]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function ClosePersistentEditor_QListView(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClosePersistentEditor", item]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function CurrentItem():QListWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentItem"]);
	};

	public function ConnectCurrentItemChanged(f:(current:QListWidgetItem, previous:QListWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentItemChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentItemChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentItemChanged"]);
	};

	public function CurrentItemChanged(current:QListWidgetItem_ITF, previous:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentItemChanged", current, previous]);
	};

	public function CurrentRow():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentRow"]);
	};

	public function ConnectCurrentRowChanged(f:(currentRow:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentRowChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCurrentRowChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentRowChanged"]);
	};

	public function CurrentRowChanged(currentRow:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentRowChanged", currentRow]);
	};

	public function ConnectCurrentTextChanged(f:(currentText:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentTextChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentTextChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentTextChanged"]);
	};

	public function CurrentTextChanged(currentText:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentTextChanged", currentText]);
	};

	public function ConnectDropMimeData(f:(index:Int, data:QMimeData, action:Int) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDropMimeData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDropMimeData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDropMimeData"]);
	};

	public function DropMimeData(index:Int, data:QMimeData_ITF, action:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DropMimeData", index, data, action]);
	};

	public function DropMimeDataDefault(index:Int, data:QMimeData_ITF, action:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DropMimeDataDefault", index, data, action]);
	};

	public function EditItem(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EditItem", item]);
	};

	public function FindItems(text:String, flags:Int):Array<QListWidgetItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FindItems", text, flags]);
	};

	public function IndexFromItem(item:QListWidgetItem_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexFromItem", item]);
	};

	public function InsertItem(row:Int, item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertItem", row, item]);
	};

	public function InsertItem2(row:Int, label:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertItem2", row, label]);
	};

	public function InsertItems(row:Int, labels:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertItems", row, labels]);
	};

	public function IsPersistentEditorOpen_QListView(item:QListWidgetItem_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsPersistentEditorOpen", item]);
	};

	public function IsSortingEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSortingEnabled"]);
	};

	public function Item(row:Int):QListWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Item", row]);
	};

	public function ConnectItemActivated(f:(item:QListWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemActivated"]);
	};

	public function ItemActivated(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemActivated", item]);
	};

	public function ItemAt(p:QPoint_ITF):QListWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", p]);
	};

	public function ItemAt2(x:Int, y:Int):QListWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt2", x, y]);
	};

	public function ConnectItemChanged(f:(item:QListWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemChanged"]);
	};

	public function ItemChanged(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemChanged", item]);
	};

	public function ConnectItemClicked(f:(item:QListWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemClicked"]);
	};

	public function ItemClicked(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemClicked", item]);
	};

	public function ConnectItemDoubleClicked(f:(item:QListWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemDoubleClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemDoubleClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemDoubleClicked"]);
	};

	public function ItemDoubleClicked(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemDoubleClicked", item]);
	};

	public function ConnectItemEntered(f:(item:QListWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemEntered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemEntered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemEntered"]);
	};

	public function ItemEntered(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemEntered", item]);
	};

	public function ItemFromIndex(index:QModelIndex_ITF):QListWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemFromIndex", index]);
	};

	public function ConnectItemPressed(f:(item:QListWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemPressed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemPressed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemPressed"]);
	};

	public function ItemPressed(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemPressed", item]);
	};

	public function ConnectItemSelectionChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectItemSelectionChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectItemSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemSelectionChanged"]);
	};

	public function ItemSelectionChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemSelectionChanged"]);
	};

	public function ItemWidget(item:QListWidgetItem_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemWidget", item]);
	};

	public function Items(data:QMimeData_ITF):Array<QListWidgetItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items", data]);
	};

	public function ConnectMimeData(f:(items:Array<QListWidgetItem>) -> QMimeData) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMimeData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMimeData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMimeData"]);
	};

	public function MimeData(items:Array<QListWidgetItem>):QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeData", items]);
	};

	public function MimeDataDefault(items:Array<QListWidgetItem>):QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeDataDefault", items]);
	};

	public function ConnectMimeTypes(f:() -> Array<String>) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMimeTypes", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMimeTypes() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMimeTypes"]);
	};

	public function MimeTypes():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeTypes"]);
	};

	public function MimeTypesDefault():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeTypesDefault"]);
	};

	public function OpenPersistentEditor_QListView(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OpenPersistentEditor", item]);
	};

	public function RemoveItemWidget(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveItemWidget", item]);
	};

	public function Row(item:QListWidgetItem_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Row", item]);
	};

	public function ConnectScrollToItem(f:(item:QListWidgetItem, hint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollToItem", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScrollToItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollToItem"]);
	};

	public function ScrollToItem(item:QListWidgetItem_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToItem", item, hint]);
	};

	public function ScrollToItemDefault(item:QListWidgetItem_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToItemDefault", item, hint]);
	};

	public function SelectedItems():Array<QListWidgetItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedItems"]);
	};

	public function SetCurrentItem(item:QListWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentItem", item]);
	};

	public function SetCurrentItem2(item:QListWidgetItem_ITF, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentItem2", item, command]);
	};

	public function SetCurrentRow(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentRow", row]);
	};

	public function SetCurrentRow2(row:Int, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentRow2", row, command]);
	};

	public function SetItemWidget(item:QListWidgetItem_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemWidget", item, widget]);
	};

	public function SetSortingEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSortingEnabled", enable]);
	};

	public function SortItems(order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortItems", order]);
	};

	public function ConnectSupportedDropActions(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSupportedDropActions",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSupportedDropActions() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSupportedDropActions"]);
	};

	public function SupportedDropActions():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedDropActions"]);
	};

	public function SupportedDropActionsDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedDropActionsDefault"]);
	};

	public function TakeItem(row:Int):QListWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeItem", row]);
	};

	public function VisualItemRect(item:QListWidgetItem_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualItemRect", item]);
	};

	public function ConnectDestroyQListWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQListWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQListWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQListWidget"]);
	};

	public function DestroyQListWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQListWidget"]);
	};

	public function DestroyQListWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQListWidgetDefault"]);
	};
}

function NewQListWidgetFromPointer(ptr:String):QListWidget {
	final r = new QListWidget();
	r.initFrom(ptr, "widgets.QListWidget");
	return r;
}

function NewQListWidget(parent:QWidget_ITF):QListWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQListWidget", "", parent]);
}

interface QListWidgetItem_ITF {
	public function QListWidgetItem_PTR():QListWidgetItem;
}

class QListWidgetItem extends Internal implements QListWidgetItem_ITF {
	public function new() {
		super();
	}

	public function QListWidgetItem_PTR():QListWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QListWidgetItem_PTR"]);
	};

	public function Background():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Background"]);
	};

	public function CheckState():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckState"]);
	};

	public function ConnectClone(f:() -> QListWidgetItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClone", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClone() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClone"]);
	};

	public function Clone():QListWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Clone"]);
	};

	public function CloneDefault():QListWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CloneDefault"]);
	};

	public function ConnectData(f:(role:Int) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectData"]);
	};

	public function Data(role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Data", role]);
	};

	public function DataDefault(role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DataDefault", role]);
	};

	public function Flags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Flags"]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function Foreground():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Foreground"]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function IsHidden():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsHidden"]);
	};

	public function IsSelected():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSelected"]);
	};

	public function ListWidget():QListWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ListWidget"]);
	};

	public function ConnectRead(f:(i:QDataStream) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRead", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRead() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRead"]);
	};

	public function Read(i:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Read", i]);
	};

	public function ReadDefault(i:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ReadDefault", i]);
	};

	public function SetBackground(brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBackground", brush]);
	};

	public function SetCheckState(state:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckState", state]);
	};

	public function ConnectSetData(f:(role:Int, value:QVariant) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetData"]);
	};

	public function SetData(role:Int, value:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetData", role, value]);
	};

	public function SetDataDefault(role:Int, value:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDataDefault", role, value]);
	};

	public function SetFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFlags", flags]);
	};

	public function SetFont(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", font]);
	};

	public function SetForeground(brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetForeground", brush]);
	};

	public function SetHidden(hide:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHidden", hide]);
	};

	public function SetIcon(icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", icon]);
	};

	public function SetSelected(sele:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelected", sele]);
	};

	public function SetSizeHint(size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizeHint", size]);
	};

	public function SetStatusTip(statusTip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStatusTip", statusTip]);
	};

	public function SetText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", text]);
	};

	public function SetTextAlignment(alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextAlignment", alignment]);
	};

	public function SetToolTip(toolTip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolTip", toolTip]);
	};

	public function SetWhatsThis(whatsThis:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWhatsThis", whatsThis]);
	};

	public function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public function StatusTip():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StatusTip"]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function TextAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextAlignment"]);
	};

	public function ToolTip():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolTip"]);
	};

	public function Type():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Type"]);
	};

	public function WhatsThis():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WhatsThis"]);
	};

	public function ConnectWrite(f:(out:QDataStream) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWrite", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWrite() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWrite"]);
	};

	public function Write(out:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Write", out]);
	};

	public function WriteDefault(out:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WriteDefault", out]);
	};

	public function ConnectDestroyQListWidgetItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQListWidgetItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQListWidgetItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQListWidgetItem"]);
	};

	public function DestroyQListWidgetItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQListWidgetItem"]);
	};

	public function DestroyQListWidgetItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQListWidgetItemDefault"]);
	};
}

function NewQListWidgetItemFromPointer(ptr:String):QListWidgetItem {
	final r = new QListWidgetItem();
	r.initFrom(ptr, "widgets.QListWidgetItem");
	return r;
}

function NewQListWidgetItem(parent:QListWidget_ITF, ty:Int):QListWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQListWidgetItem", "", parent, ty]);
}

function NewQListWidgetItem2(text:String, parent:QListWidget_ITF, ty:Int):QListWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQListWidgetItem2", "", text, parent, ty]);
}

function NewQListWidgetItem3(icon:QIcon_ITF, text:String, parent:QListWidget_ITF, ty:Int):QListWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQListWidgetItem3", "", icon, text, parent, ty]);
}

function NewQListWidgetItem4(other:QListWidgetItem_ITF):QListWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQListWidgetItem4", "", other]);
}

interface QMainWindow_ITF extends QWidget_ITF {
	public function QMainWindow_PTR():QMainWindow;
}

class QMainWindow extends QWidget implements QMainWindow_ITF {
	public function new() {
		super();
	}

	public function QMainWindow_PTR():QMainWindow {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QMainWindow_PTR"]);
	};

	public function AddDockWidget(area:Int, dockwidget:QDockWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddDockWidget", area, dockwidget]);
	};

	public function AddDockWidget2(area:Int, dockwidget:QDockWidget_ITF, orientation:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddDockWidget2", area, dockwidget, orientation]);
	};

	public function AddToolBar(area:Int, toolbar:QToolBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddToolBar", area, toolbar]);
	};

	public function AddToolBar2(toolbar:QToolBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddToolBar2", toolbar]);
	};

	public function AddToolBar3(title:String):QToolBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddToolBar3", title]);
	};

	public function AddToolBarBreak(area:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddToolBarBreak", area]);
	};

	public function CentralWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CentralWidget"]);
	};

	public function Corner(corner:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Corner", corner]);
	};

	public function ConnectCreatePopupMenu(f:() -> QMenu) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCreatePopupMenu", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCreatePopupMenu() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreatePopupMenu"]);
	};

	public function CreatePopupMenu():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreatePopupMenu"]);
	};

	public function CreatePopupMenuDefault():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreatePopupMenuDefault"]);
	};

	public function DockOptions():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DockOptions"]);
	};

	public function DockWidgetArea(dockwidget:QDockWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DockWidgetArea", dockwidget]);
	};

	public function DocumentMode():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DocumentMode"]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function ConnectIconSizeChanged(f:(iconSize:QSize) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIconSizeChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIconSizeChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIconSizeChanged"]);
	};

	public function IconSizeChanged(iconSize:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "IconSizeChanged", iconSize]);
	};

	public function InsertToolBar(before:QToolBar_ITF, toolbar:QToolBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertToolBar", before, toolbar]);
	};

	public function InsertToolBarBreak(before:QToolBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertToolBarBreak", before]);
	};

	public function IsAnimated():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsAnimated"]);
	};

	public function IsDockNestingEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsDockNestingEnabled"]);
	};

	public function MenuBar():QMenuBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MenuBar"]);
	};

	public function MenuWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MenuWidget"]);
	};

	public function RemoveDockWidget(dockwidget:QDockWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveDockWidget", dockwidget]);
	};

	public function RemoveToolBar(toolbar:QToolBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveToolBar", toolbar]);
	};

	public function RemoveToolBarBreak(before:QToolBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveToolBarBreak", before]);
	};

	public function ResizeDocks(docks:Array<QDockWidget>, sizes:Array<Int>, orientation:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeDocks", docks, sizes, orientation]);
	};

	public function RestoreDockWidget(dockwidget:QDockWidget_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RestoreDockWidget", dockwidget]);
	};

	public function RestoreState(state:QByteArray_ITF, version:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RestoreState", state, version]);
	};

	public function SaveState(version:Int):QByteArray {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SaveState", version]);
	};

	public function ConnectSetAnimated(f:(enabled:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetAnimated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetAnimated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetAnimated"]);
	};

	public function SetAnimated(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAnimated", enabled]);
	};

	public function SetAnimatedDefault(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAnimatedDefault", enabled]);
	};

	public function SetCentralWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCentralWidget", widget]);
	};

	public function SetCorner(corner:Int, area:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCorner", corner, area]);
	};

	public function ConnectSetDockNestingEnabled(f:(enabled:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetDockNestingEnabled",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetDockNestingEnabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetDockNestingEnabled"]);
	};

	public function SetDockNestingEnabled(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDockNestingEnabled", enabled]);
	};

	public function SetDockNestingEnabledDefault(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDockNestingEnabledDefault", enabled]);
	};

	public function SetDockOptions(options:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDockOptions", options]);
	};

	public function SetDocumentMode(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocumentMode", enabled]);
	};

	public function SetIconSize(iconSize:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", iconSize]);
	};

	public function SetMenuBar(menuBar:QMenuBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMenuBar", menuBar]);
	};

	public function SetMenuWidget(menuBar:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMenuWidget", menuBar]);
	};

	public function SetStatusBar(statusbar:QStatusBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStatusBar", statusbar]);
	};

	public function SetTabPosition(areas:Int, tabPosition:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabPosition", areas, tabPosition]);
	};

	public function SetTabShape(tabShape:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabShape", tabShape]);
	};

	public function SetToolButtonStyle(toolButtonStyle:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolButtonStyle", toolButtonStyle]);
	};

	public function ConnectSetUnifiedTitleAndToolBarOnMac(f:(set:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetUnifiedTitleAndToolBarOnMac",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetUnifiedTitleAndToolBarOnMac() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetUnifiedTitleAndToolBarOnMac"]);
	};

	public function SetUnifiedTitleAndToolBarOnMac(set:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUnifiedTitleAndToolBarOnMac", set]);
	};

	public function SetUnifiedTitleAndToolBarOnMacDefault(set:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUnifiedTitleAndToolBarOnMacDefault", set]);
	};

	public function SplitDockWidget(first:QDockWidget_ITF, second:QDockWidget_ITF, orientation:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SplitDockWidget", first, second, orientation]);
	};

	public function StatusBar():QStatusBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StatusBar"]);
	};

	public function TabPosition(area:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabPosition", area]);
	};

	public function TabShape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabShape"]);
	};

	public function ConnectTabifiedDockWidgetActivated(f:(dockWidget:QDockWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectTabifiedDockWidgetActivated",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectTabifiedDockWidgetActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabifiedDockWidgetActivated"]);
	};

	public function TabifiedDockWidgetActivated(dockWidget:QDockWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabifiedDockWidgetActivated", dockWidget]);
	};

	public function TabifiedDockWidgets(dockwidget:QDockWidget_ITF):Array<QDockWidget> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabifiedDockWidgets", dockwidget]);
	};

	public function TabifyDockWidget(first:QDockWidget_ITF, second:QDockWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabifyDockWidget", first, second]);
	};

	public function TakeCentralWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeCentralWidget"]);
	};

	public function ToolBarArea(toolbar:QToolBar_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolBarArea", toolbar]);
	};

	public function ToolBarBreak(toolbar:QToolBar_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolBarBreak", toolbar]);
	};

	public function ToolButtonStyle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolButtonStyle"]);
	};

	public function ConnectToolButtonStyleChanged(f:(toolButtonStyle:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectToolButtonStyleChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectToolButtonStyleChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToolButtonStyleChanged"]);
	};

	public function ToolButtonStyleChanged(toolButtonStyle:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToolButtonStyleChanged", toolButtonStyle]);
	};

	public function UnifiedTitleAndToolBarOnMac():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UnifiedTitleAndToolBarOnMac"]);
	};

	public function ConnectDestroyQMainWindow(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQMainWindow",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQMainWindow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQMainWindow"]);
	};

	public function DestroyQMainWindow() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMainWindow"]);
	};

	public function DestroyQMainWindowDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMainWindowDefault"]);
	};
}

function NewQMainWindowFromPointer(ptr:String):QMainWindow {
	final r = new QMainWindow();
	r.initFrom(ptr, "widgets.QMainWindow");
	return r;
}

function NewQMainWindow(parent:QWidget_ITF, flags:Int):QMainWindow {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQMainWindow", "", parent, flags]);
}

interface QMdiArea_ITF extends QAbstractScrollArea_ITF {
	public function QMdiArea_PTR():QMdiArea;
}

class QMdiArea extends QAbstractScrollArea implements QMdiArea_ITF {
	public function new() {
		super();
	}

	public function QMdiArea_PTR():QMdiArea {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QMdiArea_PTR"]);
	};

	public function ConnectActivateNextSubWindow(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectActivateNextSubWindow",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectActivateNextSubWindow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivateNextSubWindow"]);
	};

	public function ActivateNextSubWindow() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActivateNextSubWindow"]);
	};

	public function ActivateNextSubWindowDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActivateNextSubWindowDefault"]);
	};

	public function ConnectActivatePreviousSubWindow(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectActivatePreviousSubWindow",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectActivatePreviousSubWindow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivatePreviousSubWindow"]);
	};

	public function ActivatePreviousSubWindow() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActivatePreviousSubWindow"]);
	};

	public function ActivatePreviousSubWindowDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActivatePreviousSubWindowDefault"]);
	};

	public function ActivationOrder():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActivationOrder"]);
	};

	public function ActiveSubWindow():QMdiSubWindow {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActiveSubWindow"]);
	};

	public function AddSubWindow(widget:QWidget_ITF, windowFlags:Int):QMdiSubWindow {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddSubWindow", widget, windowFlags]);
	};

	public function Background():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Background"]);
	};

	public function ConnectCascadeSubWindows(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCascadeSubWindows", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCascadeSubWindows() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCascadeSubWindows"]);
	};

	public function CascadeSubWindows() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CascadeSubWindows"]);
	};

	public function CascadeSubWindowsDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CascadeSubWindowsDefault"]);
	};

	public function ConnectCloseActiveSubWindow(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCloseActiveSubWindow",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCloseActiveSubWindow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCloseActiveSubWindow"]);
	};

	public function CloseActiveSubWindow() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseActiveSubWindow"]);
	};

	public function CloseActiveSubWindowDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseActiveSubWindowDefault"]);
	};

	public function ConnectCloseAllSubWindows(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCloseAllSubWindows",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCloseAllSubWindows() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCloseAllSubWindows"]);
	};

	public function CloseAllSubWindows() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseAllSubWindows"]);
	};

	public function CloseAllSubWindowsDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseAllSubWindowsDefault"]);
	};

	public function CurrentSubWindow():QMdiSubWindow {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentSubWindow"]);
	};

	public function DocumentMode():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DocumentMode"]);
	};

	public function RemoveSubWindow(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveSubWindow", widget]);
	};

	public function SetActivationOrder(order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActivationOrder", order]);
	};

	public function ConnectSetActiveSubWindow(f:(window:QMdiSubWindow) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetActiveSubWindow",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetActiveSubWindow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetActiveSubWindow"]);
	};

	public function SetActiveSubWindow(window:QMdiSubWindow_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActiveSubWindow", window]);
	};

	public function SetActiveSubWindowDefault(window:QMdiSubWindow_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActiveSubWindowDefault", window]);
	};

	public function SetBackground(background:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBackground", background]);
	};

	public function SetDocumentMode(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocumentMode", enabled]);
	};

	public function SetOption(option:Int, on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOption", option, on]);
	};

	public function SetTabPosition(position:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabPosition", position]);
	};

	public function SetTabShape(shape:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabShape", shape]);
	};

	public function SetTabsClosable(closable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabsClosable", closable]);
	};

	public function SetTabsMovable(movable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabsMovable", movable]);
	};

	public function SetViewMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetViewMode", mode]);
	};

	public override function ConnectSetupViewport(f:(viewport:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetupViewport", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetupViewport() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetupViewport"]);
	};

	public override function SetupViewport(viewport:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetupViewport", viewport]);
	};

	public override function SetupViewportDefault(viewport:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetupViewportDefault", viewport]);
	};

	public function ConnectSubWindowActivated(f:(window:QMdiSubWindow) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSubWindowActivated",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSubWindowActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSubWindowActivated"]);
	};

	public function SubWindowActivated(window:QMdiSubWindow_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SubWindowActivated", window]);
	};

	public function SubWindowList(order:Int):Array<QMdiSubWindow> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubWindowList", order]);
	};

	public function TabPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabPosition"]);
	};

	public function TabShape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabShape"]);
	};

	public function TabsClosable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabsClosable"]);
	};

	public function TabsMovable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabsMovable"]);
	};

	public function TestOption(option:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TestOption", option]);
	};

	public function ConnectTileSubWindows(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTileSubWindows", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTileSubWindows() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTileSubWindows"]);
	};

	public function TileSubWindows() {
		Internal.callLocalFunction(["", Pointer(), ___className, "TileSubWindows"]);
	};

	public function TileSubWindowsDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "TileSubWindowsDefault"]);
	};

	public function ViewMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewMode"]);
	};

	public function ConnectDestroyQMdiArea(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQMdiArea", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQMdiArea() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQMdiArea"]);
	};

	public function DestroyQMdiArea() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMdiArea"]);
	};

	public function DestroyQMdiAreaDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMdiAreaDefault"]);
	};
}

function NewQMdiAreaFromPointer(ptr:String):QMdiArea {
	final r = new QMdiArea();
	r.initFrom(ptr, "widgets.QMdiArea");
	return r;
}

function NewQMdiArea(parent:QWidget_ITF):QMdiArea {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQMdiArea", "", parent]);
}

interface QMdiSubWindow_ITF extends QWidget_ITF {
	public function QMdiSubWindow_PTR():QMdiSubWindow;
}

class QMdiSubWindow extends QWidget implements QMdiSubWindow_ITF {
	public function new() {
		super();
	}

	public function QMdiSubWindow_PTR():QMdiSubWindow {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QMdiSubWindow_PTR"]);
	};

	public function ConnectAboutToActivate(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAboutToActivate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAboutToActivate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAboutToActivate"]);
	};

	public function AboutToActivate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AboutToActivate"]);
	};

	public function IsShaded():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsShaded"]);
	};

	public function KeyboardPageStep():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "KeyboardPageStep"]);
	};

	public function KeyboardSingleStep():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "KeyboardSingleStep"]);
	};

	public function MdiArea():QMdiArea {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MdiArea"]);
	};

	public function SetKeyboardPageStep(step:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetKeyboardPageStep", step]);
	};

	public function SetKeyboardSingleStep(step:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetKeyboardSingleStep", step]);
	};

	public function SetOption(option:Int, on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOption", option, on]);
	};

	public function SetSystemMenu(systemMenu:QMenu_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSystemMenu", systemMenu]);
	};

	public function SetWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWidget", widget]);
	};

	public function ConnectShowShaded(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowShaded", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowShaded() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowShaded"]);
	};

	public function ShowShaded() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowShaded"]);
	};

	public function ShowShadedDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowShadedDefault"]);
	};

	public function ConnectShowSystemMenu(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowSystemMenu", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowSystemMenu() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowSystemMenu"]);
	};

	public function ShowSystemMenu() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowSystemMenu"]);
	};

	public function ShowSystemMenuDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowSystemMenuDefault"]);
	};

	public function SystemMenu():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SystemMenu"]);
	};

	public function TestOption(option:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TestOption", option]);
	};

	public function Widget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget"]);
	};

	public function ConnectWindowStateChanged(f:(oldState:Int, newState:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectWindowStateChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectWindowStateChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWindowStateChanged"]);
	};

	public function WindowStateChanged(oldState:Int, newState:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WindowStateChanged", oldState, newState]);
	};

	public function ConnectDestroyQMdiSubWindow(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQMdiSubWindow",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQMdiSubWindow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQMdiSubWindow"]);
	};

	public function DestroyQMdiSubWindow() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMdiSubWindow"]);
	};

	public function DestroyQMdiSubWindowDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMdiSubWindowDefault"]);
	};
}

function NewQMdiSubWindowFromPointer(ptr:String):QMdiSubWindow {
	final r = new QMdiSubWindow();
	r.initFrom(ptr, "widgets.QMdiSubWindow");
	return r;
}

function NewQMdiSubWindow(parent:QWidget_ITF, flags:Int):QMdiSubWindow {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQMdiSubWindow", "", parent, flags]);
}

interface QMenu_ITF extends QWidget_ITF {
	public function QMenu_PTR():QMenu;
}

class QMenu extends QWidget implements QMenu_ITF {
	public function new() {
		super();
	}

	public function QMenu_PTR():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QMenu_PTR"]);
	};

	public function ConnectAboutToHide(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAboutToHide", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAboutToHide() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAboutToHide"]);
	};

	public function AboutToHide() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AboutToHide"]);
	};

	public function ConnectAboutToShow(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAboutToShow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAboutToShow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAboutToShow"]);
	};

	public function AboutToShow() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AboutToShow"]);
	};

	public function ActionAt(pt:QPoint_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActionAt", pt]);
	};

	public function ActionGeometry(act:QAction_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActionGeometry", act]);
	};

	public function ActiveAction():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActiveAction"]);
	};

	public function AddAction_QMenu(text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction", text]);
	};

	public function AddAction2(icon:QIcon_ITF, text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction2", icon, text]);
	};

	public function AddAction3(text:String, receiver:QObject_ITF, member:String, shortcut:QKeySequence_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction3", text, receiver, member, shortcut]);
	};

	public function AddAction4(icon:QIcon_ITF, text:String, receiver:QObject_ITF, member:String, shortcut:QKeySequence_ITF):QAction {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"AddAction4",
			icon,
			text,
			receiver,
			member,
			shortcut
		]);
	};

	public function AddMenu(menu:QMenu_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddMenu", menu]);
	};

	public function AddMenu2(title:String):QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddMenu2", title]);
	};

	public function AddMenu3(icon:QIcon_ITF, title:String):QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddMenu3", icon, title]);
	};

	public function AddSection(text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddSection", text]);
	};

	public function AddSection2(icon:QIcon_ITF, text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddSection2", icon, text]);
	};

	public function AddSeparator():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddSeparator"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ColumnCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCount"]);
	};

	public function DefaultAction():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultAction"]);
	};

	public function Exec():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Exec"]);
	};

	public function Exec2(p:QPoint_ITF, action:QAction_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Exec2", p, action]);
	};

	public function Exec3(actions:Array<QAction>, pos:QPoint_ITF, at:QAction_ITF, parent:QWidget_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Exec3", actions, pos, at, parent]);
	};

	public function HideTearOffMenu() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideTearOffMenu"]);
	};

	public function ConnectHovered(f:(action:QAction) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHovered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHovered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHovered"]);
	};

	public function Hovered(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Hovered", action]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function InitStyleOption(option:QStyleOptionMenuItem_ITF, action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option, action]);
	};

	public function InsertMenu(before:QAction_ITF, menu:QMenu_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertMenu", before, menu]);
	};

	public function InsertSection(before:QAction_ITF, text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertSection", before, text]);
	};

	public function InsertSection2(before:QAction_ITF, icon:QIcon_ITF, text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertSection2", before, icon, text]);
	};

	public function InsertSeparator(before:QAction_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertSeparator", before]);
	};

	public function IsEmpty():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEmpty"]);
	};

	public function IsTearOffEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsTearOffEnabled"]);
	};

	public function IsTearOffMenuVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsTearOffMenuVisible"]);
	};

	public function MenuAction():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MenuAction"]);
	};

	public function Popup(p:QPoint_ITF, atAction:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Popup", p, atAction]);
	};

	public function SeparatorsCollapsible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SeparatorsCollapsible"]);
	};

	public function SetActiveAction(act:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActiveAction", act]);
	};

	public function SetAsDockMenu() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAsDockMenu"]);
	};

	public function SetDefaultAction(act:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultAction", act]);
	};

	public function SetIcon(icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", icon]);
	};

	public function SetSeparatorsCollapsible(collapse:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSeparatorsCollapsible", collapse]);
	};

	public function SetTearOffEnabled(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTearOffEnabled", vbo]);
	};

	public function SetTitle(title:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTitle", title]);
	};

	public function SetToolTipsVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolTipsVisible", visible]);
	};

	public function ShowTearOffMenu(pos:QPoint_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowTearOffMenu", pos]);
	};

	public function ShowTearOffMenu2() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowTearOffMenu2"]);
	};

	public function Title():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Title"]);
	};

	public function ToolTipsVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolTipsVisible"]);
	};

	public function ConnectTriggered(f:(action:QAction) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTriggered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTriggered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTriggered"]);
	};

	public function Triggered(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Triggered", action]);
	};

	public function ConnectDestroyQMenu(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQMenu", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQMenu() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQMenu"]);
	};

	public function DestroyQMenu() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMenu"]);
	};

	public function DestroyQMenuDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMenuDefault"]);
	};
}

function NewQMenuFromPointer(ptr:String):QMenu {
	final r = new QMenu();
	r.initFrom(ptr, "widgets.QMenu");
	return r;
}

function NewQMenu(parent:QWidget_ITF):QMenu {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQMenu", "", parent]);
}

function NewQMenu2(title:String, parent:QWidget_ITF):QMenu {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQMenu2", "", title, parent]);
}

function QMenu_Exec3(actions:Array<QAction>, pos:QPoint_ITF, at:QAction_ITF, parent:QWidget_ITF):QAction {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QMenu_Exec3", "", actions, pos, at, parent]);
}

interface QMenuBar_ITF extends QWidget_ITF {
	public function QMenuBar_PTR():QMenuBar;
}

class QMenuBar extends QWidget implements QMenuBar_ITF {
	public function new() {
		super();
	}

	public function QMenuBar_PTR():QMenuBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QMenuBar_PTR"]);
	};

	public function ActionAt(pt:QPoint_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActionAt", pt]);
	};

	public function ActionGeometry(act:QAction_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActionGeometry", act]);
	};

	public function ActiveAction():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActiveAction"]);
	};

	public function AddAction_QMenuBar(text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction", text]);
	};

	public function AddAction2(text:String, receiver:QObject_ITF, member:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction2", text, receiver, member]);
	};

	public function AddMenu(menu:QMenu_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddMenu", menu]);
	};

	public function AddMenu2(title:String):QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddMenu2", title]);
	};

	public function AddMenu3(icon:QIcon_ITF, title:String):QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddMenu3", icon, title]);
	};

	public function AddSeparator():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddSeparator"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function CornerWidget(corner:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CornerWidget", corner]);
	};

	public function ConnectHovered(f:(action:QAction) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHovered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHovered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHovered"]);
	};

	public function Hovered(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Hovered", action]);
	};

	public function InitStyleOption(option:QStyleOptionMenuItem_ITF, action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option, action]);
	};

	public function InsertMenu(before:QAction_ITF, menu:QMenu_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertMenu", before, menu]);
	};

	public function InsertSeparator(before:QAction_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertSeparator", before]);
	};

	public function IsDefaultUp():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsDefaultUp"]);
	};

	public function IsNativeMenuBar():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsNativeMenuBar"]);
	};

	public function SetActiveAction(act:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActiveAction", act]);
	};

	public function SetCornerWidget(widget:QWidget_ITF, corner:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCornerWidget", widget, corner]);
	};

	public function SetDefaultUp(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultUp", vbo]);
	};

	public function SetNativeMenuBar(nativeMenuBar:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNativeMenuBar", nativeMenuBar]);
	};

	public function ConnectTriggered(f:(action:QAction) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTriggered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTriggered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTriggered"]);
	};

	public function Triggered(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Triggered", action]);
	};

	public function ConnectDestroyQMenuBar(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQMenuBar", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQMenuBar() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQMenuBar"]);
	};

	public function DestroyQMenuBar() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMenuBar"]);
	};

	public function DestroyQMenuBarDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMenuBarDefault"]);
	};
}

function NewQMenuBarFromPointer(ptr:String):QMenuBar {
	final r = new QMenuBar();
	r.initFrom(ptr, "widgets.QMenuBar");
	return r;
}

function NewQMenuBar(parent:QWidget_ITF):QMenuBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQMenuBar", "", parent]);
}

interface QMessageBox_ITF extends QDialog_ITF {
	public function QMessageBox_PTR():QMessageBox;
}

class QMessageBox extends QDialog implements QMessageBox_ITF {
	public function new() {
		super();
	}

	public function QMessageBox_PTR():QMessageBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QMessageBox_PTR"]);
	};

	public function About(parent:QWidget_ITF, title:String, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "About", parent, title, text]);
	};

	public function AboutQt(parent:QWidget_ITF, title:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AboutQt", parent, title]);
	};

	public function AddButton(button:QAbstractButton_ITF, role:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddButton", button, role]);
	};

	public function AddButton2(text:String, role:Int):QPushButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddButton2", text, role]);
	};

	public function AddButton3(button:Int):QPushButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddButton3", button]);
	};

	public function Button(which:Int):QAbstractButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Button", which]);
	};

	public function ConnectButtonClicked(f:(button:QAbstractButton) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectButtonClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectButtonClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectButtonClicked"]);
	};

	public function ButtonClicked(button:QAbstractButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ButtonClicked", button]);
	};

	public function ButtonRole(button:QAbstractButton_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ButtonRole", button]);
	};

	public function Buttons():Array<QAbstractButton> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Buttons"]);
	};

	public function CheckBox():QCheckBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckBox"]);
	};

	public function ClickedButton():QAbstractButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ClickedButton"]);
	};

	public function Critical(parent:QWidget_ITF, title:String, text:String, buttons:Int, defaultButton:Int):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"Critical",
			parent,
			title,
			text,
			buttons,
			defaultButton
		]);
	};

	public function DefaultButton():QPushButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultButton"]);
	};

	public function DetailedText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DetailedText"]);
	};

	public function EscapeButton():QAbstractButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EscapeButton"]);
	};

	public function Icon():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function IconPixmap():QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconPixmap"]);
	};

	public function Information(parent:QWidget_ITF, title:String, text:String, buttons:Int, defaultButton:Int):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"Information",
			parent,
			title,
			text,
			buttons,
			defaultButton
		]);
	};

	public function InformativeText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InformativeText"]);
	};

	public function Open_QMessageBox(receiver:QObject_ITF, member:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Open", receiver, member]);
	};

	public function Question(parent:QWidget_ITF, title:String, text:String, buttons:Int, defaultButton:Int):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"Question",
			parent,
			title,
			text,
			buttons,
			defaultButton
		]);
	};

	public function RemoveButton(button:QAbstractButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveButton", button]);
	};

	public function SetCheckBox(cb:QCheckBox_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckBox", cb]);
	};

	public function SetDefaultButton(button:QPushButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultButton", button]);
	};

	public function SetDefaultButton2(button:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultButton2", button]);
	};

	public function SetDetailedText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDetailedText", text]);
	};

	public function SetEscapeButton(button:QAbstractButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEscapeButton", button]);
	};

	public function SetEscapeButton2(button:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEscapeButton2", button]);
	};

	public function SetIcon(vqm:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", vqm]);
	};

	public function SetIconPixmap(pixmap:QPixmap_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconPixmap", pixmap]);
	};

	public function SetInformativeText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInformativeText", text]);
	};

	public function SetStandardButtons(buttons:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStandardButtons", buttons]);
	};

	public function SetText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", text]);
	};

	public function SetTextFormat(format:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextFormat", format]);
	};

	public function SetTextInteractionFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextInteractionFlags", flags]);
	};

	public override function SetWindowTitle(title:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowTitle", title]);
	};

	public function StandardButton(button:QAbstractButton_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardButton", button]);
	};

	public function StandardButtons():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardButtons"]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function TextFormat():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextFormat"]);
	};

	public function TextInteractionFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextInteractionFlags"]);
	};

	public function Warning(parent:QWidget_ITF, title:String, text:String, buttons:Int, defaultButton:Int):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"Warning",
			parent,
			title,
			text,
			buttons,
			defaultButton
		]);
	};

	public function ConnectDestroyQMessageBox(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQMessageBox",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQMessageBox() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQMessageBox"]);
	};

	public function DestroyQMessageBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMessageBox"]);
	};

	public function DestroyQMessageBoxDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMessageBoxDefault"]);
	};
}

function NewQMessageBoxFromPointer(ptr:String):QMessageBox {
	final r = new QMessageBox();
	r.initFrom(ptr, "widgets.QMessageBox");
	return r;
}

function NewQMessageBox(parent:QWidget_ITF):QMessageBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQMessageBox", "", parent]);
}

function NewQMessageBox2(icon:Int, title:String, text:String, buttons:Int, parent:QWidget_ITF, ff:Int):QMessageBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQMessageBox2", "", icon, title, text, buttons, parent, ff]);
}

function QMessageBox_About(parent:QWidget_ITF, title:String, text:String) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QMessageBox_About", "", parent, title, text]);
}

function QMessageBox_AboutQt(parent:QWidget_ITF, title:String) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QMessageBox_AboutQt", "", parent, title]);
}

function QMessageBox_Critical(parent:QWidget_ITF, title:String, text:String, buttons:Int, defaultButton:Int):Int {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QMessageBox_Critical",
		"",
		parent,
		title,
		text,
		buttons,
		defaultButton
	]);
}

function QMessageBox_Information(parent:QWidget_ITF, title:String, text:String, buttons:Int, defaultButton:Int):Int {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QMessageBox_Information",
		"",
		parent,
		title,
		text,
		buttons,
		defaultButton
	]);
}

function QMessageBox_Question(parent:QWidget_ITF, title:String, text:String, buttons:Int, defaultButton:Int):Int {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QMessageBox_Question",
		"",
		parent,
		title,
		text,
		buttons,
		defaultButton
	]);
}

function QMessageBox_Warning(parent:QWidget_ITF, title:String, text:String, buttons:Int, defaultButton:Int):Int {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QMessageBox_Warning",
		"",
		parent,
		title,
		text,
		buttons,
		defaultButton
	]);
}

interface QMouseEventTransition_ITF extends QEventTransition_ITF {
	public function QMouseEventTransition_PTR():QMouseEventTransition;
}

class QMouseEventTransition extends QEventTransition implements QMouseEventTransition_ITF {
	public function new() {
		super();
	}

	public function QMouseEventTransition_PTR():QMouseEventTransition {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QMouseEventTransition_PTR"]);
	};

	public function Button():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Button"]);
	};

	public override function EventTestDefault(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventTestDefault", event]);
	};

	public function HitTestPath():QPainterPath {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HitTestPath"]);
	};

	public function ModifierMask():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ModifierMask"]);
	};

	public override function OnTransitionDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OnTransitionDefault", event]);
	};

	public function SetButton(button:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetButton", button]);
	};

	public function SetHitTestPath(path:QPainterPath_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHitTestPath", path]);
	};

	public function SetModifierMask(modifierMask:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetModifierMask", modifierMask]);
	};

	public function ConnectDestroyQMouseEventTransition(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQMouseEventTransition",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQMouseEventTransition() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQMouseEventTransition"]);
	};

	public function DestroyQMouseEventTransition() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMouseEventTransition"]);
	};

	public function DestroyQMouseEventTransitionDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQMouseEventTransitionDefault"]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQMouseEventTransitionFromPointer(ptr:String):QMouseEventTransition {
	final r = new QMouseEventTransition();
	r.initFrom(ptr, "widgets.QMouseEventTransition");
	return r;
}

function NewQMouseEventTransition(sourceState:QState_ITF):QMouseEventTransition {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQMouseEventTransition", "", sourceState]);
}

function NewQMouseEventTransition2(object:QObject_ITF, ty:Int, button:Int, sourceState:QState_ITF):QMouseEventTransition {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQMouseEventTransition2", "", object, ty, button, sourceState]);
}

interface QOpenGLWidget_ITF extends QWidget_ITF {
	public function QOpenGLWidget_PTR():QOpenGLWidget;
}

class QOpenGLWidget extends QWidget implements QOpenGLWidget_ITF {
	public function new() {
		super();
	}

	public function QOpenGLWidget_PTR():QOpenGLWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QOpenGLWidget_PTR"]);
	};

	public function ConnectAboutToCompose(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAboutToCompose", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAboutToCompose() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAboutToCompose"]);
	};

	public function AboutToCompose() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AboutToCompose"]);
	};

	public function ConnectAboutToResize(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAboutToResize", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAboutToResize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAboutToResize"]);
	};

	public function AboutToResize() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AboutToResize"]);
	};

	public function Context():QOpenGLContext {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Context"]);
	};

	public function DefaultFramebufferObject():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultFramebufferObject"]);
	};

	public function DoneCurrent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoneCurrent"]);
	};

	public function Format():QSurfaceFormat {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Format"]);
	};

	public function ConnectFrameSwapped(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFrameSwapped", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFrameSwapped() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFrameSwapped"]);
	};

	public function FrameSwapped() {
		Internal.callLocalFunction(["", Pointer(), ___className, "FrameSwapped"]);
	};

	public function GrabFramebuffer():QImage {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GrabFramebuffer"]);
	};

	public function ConnectInitializeGL(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInitializeGL", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInitializeGL() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInitializeGL"]);
	};

	public function InitializeGL() {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitializeGL"]);
	};

	public function InitializeGLDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitializeGLDefault"]);
	};

	public function IsValid():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsValid"]);
	};

	public function MakeCurrent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "MakeCurrent"]);
	};

	public function ConnectPaintGL(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintGL", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaintGL() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintGL"]);
	};

	public function PaintGL() {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintGL"]);
	};

	public function PaintGLDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintGLDefault"]);
	};

	public function ConnectResizeGL(f:(w:Int, h:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectResizeGL", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectResizeGL() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResizeGL"]);
	};

	public function ResizeGL(w:Int, h:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeGL", w, h]);
	};

	public function ResizeGLDefault(w:Int, h:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeGLDefault", w, h]);
	};

	public function ConnectResized(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectResized", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectResized() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResized"]);
	};

	public function Resized() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Resized"]);
	};

	public function SetFormat(format:QSurfaceFormat_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFormat", format]);
	};

	public function SetTextureFormat(texFormat:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextureFormat", texFormat]);
	};

	public function SetUpdateBehavior(updateBehavior:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUpdateBehavior", updateBehavior]);
	};

	public function TextureFormat():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextureFormat"]);
	};

	public function UpdateBehavior():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UpdateBehavior"]);
	};

	public function ConnectDestroyQOpenGLWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQOpenGLWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQOpenGLWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQOpenGLWidget"]);
	};

	public function DestroyQOpenGLWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQOpenGLWidget"]);
	};

	public function DestroyQOpenGLWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQOpenGLWidgetDefault"]);
	};
}

function NewQOpenGLWidgetFromPointer(ptr:String):QOpenGLWidget {
	final r = new QOpenGLWidget();
	r.initFrom(ptr, "widgets.QOpenGLWidget");
	return r;
}

function NewQOpenGLWidget(parent:QWidget_ITF, ff:Int):QOpenGLWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQOpenGLWidget", "", parent, ff]);
}

interface QPanGesture_ITF extends QGesture_ITF {
	public function QPanGesture_PTR():QPanGesture;
}

class QPanGesture extends QGesture implements QPanGesture_ITF {
	public function new() {
		super();
	}

	public function QPanGesture_PTR():QPanGesture {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QPanGesture_PTR"]);
	};

	public function Acceleration():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Acceleration"]);
	};

	public function Delta():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Delta"]);
	};

	public function LastOffset():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastOffset"]);
	};

	public function Offset():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Offset"]);
	};

	public function SetAcceleration(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAcceleration", value]);
	};

	public function SetLastOffset(value:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLastOffset", value]);
	};

	public function SetOffset(value:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOffset", value]);
	};

	public function ConnectDestroyQPanGesture(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQPanGesture",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQPanGesture() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQPanGesture"]);
	};

	public function DestroyQPanGesture() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQPanGesture"]);
	};

	public function DestroyQPanGestureDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQPanGestureDefault"]);
	};
}

function NewQPanGestureFromPointer(ptr:String):QPanGesture {
	final r = new QPanGesture();
	r.initFrom(ptr, "widgets.QPanGesture");
	return r;
}

interface QPinchGesture_ITF extends QGesture_ITF {
	public function QPinchGesture_PTR():QPinchGesture;
}

class QPinchGesture extends QGesture implements QPinchGesture_ITF {
	public function new() {
		super();
	}

	public function QPinchGesture_PTR():QPinchGesture {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QPinchGesture_PTR"]);
	};

	public function CenterPoint():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CenterPoint"]);
	};

	public function ChangeFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChangeFlags"]);
	};

	public function LastCenterPoint():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastCenterPoint"]);
	};

	public function LastRotationAngle():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastRotationAngle"]);
	};

	public function LastScaleFactor():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LastScaleFactor"]);
	};

	public function RotationAngle():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RotationAngle"]);
	};

	public function ScaleFactor():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScaleFactor"]);
	};

	public function SetCenterPoint(value:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCenterPoint", value]);
	};

	public function SetChangeFlags(value:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetChangeFlags", value]);
	};

	public function SetLastCenterPoint(value:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLastCenterPoint", value]);
	};

	public function SetLastRotationAngle(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLastRotationAngle", value]);
	};

	public function SetLastScaleFactor(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLastScaleFactor", value]);
	};

	public function SetRotationAngle(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRotationAngle", value]);
	};

	public function SetScaleFactor(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetScaleFactor", value]);
	};

	public function SetStartCenterPoint(value:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStartCenterPoint", value]);
	};

	public function SetTotalChangeFlags(value:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTotalChangeFlags", value]);
	};

	public function SetTotalRotationAngle(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTotalRotationAngle", value]);
	};

	public function SetTotalScaleFactor(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTotalScaleFactor", value]);
	};

	public function StartCenterPoint():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StartCenterPoint"]);
	};

	public function TotalChangeFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TotalChangeFlags"]);
	};

	public function TotalRotationAngle():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TotalRotationAngle"]);
	};

	public function TotalScaleFactor():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TotalScaleFactor"]);
	};

	public function ConnectDestroyQPinchGesture(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQPinchGesture",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQPinchGesture() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQPinchGesture"]);
	};

	public function DestroyQPinchGesture() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQPinchGesture"]);
	};

	public function DestroyQPinchGestureDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQPinchGestureDefault"]);
	};
}

function NewQPinchGestureFromPointer(ptr:String):QPinchGesture {
	final r = new QPinchGesture();
	r.initFrom(ptr, "widgets.QPinchGesture");
	return r;
}

interface QPlainTextDocumentLayout_ITF extends QAbstractTextDocumentLayout_ITF {
	public function QPlainTextDocumentLayout_PTR():QPlainTextDocumentLayout;
}

class QPlainTextDocumentLayout extends QAbstractTextDocumentLayout implements QPlainTextDocumentLayout_ITF {
	public function new() {
		super();
	}

	public function QPlainTextDocumentLayout_PTR():QPlainTextDocumentLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QPlainTextDocumentLayout_PTR"]);
	};

	public override function ConnectBlockBoundingRect(f:(block:QTextBlock) -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBlockBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectBlockBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBlockBoundingRect"]);
	};

	public override function BlockBoundingRect(block:QTextBlock_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BlockBoundingRect", block]);
	};

	public function BlockBoundingRectDefault(block:QTextBlock_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BlockBoundingRectDefault", block]);
	};

	public function CursorWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorWidth"]);
	};

	public override function ConnectDocumentChanged(f:(from:Int, charsRemoved:Int, charsAdded:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDocumentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDocumentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDocumentChanged"]);
	};

	public override function DocumentChanged(from:Int, charsRemoved:Int, charsAdded:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DocumentChanged", from, charsRemoved, charsAdded]);
	};

	public function DocumentChangedDefault(from:Int, charsRemoved:Int, charsAdded:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"DocumentChangedDefault",
			from,
			charsRemoved,
			charsAdded
		]);
	};

	public override function ConnectDocumentSize(f:() -> QSizeF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDocumentSize", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDocumentSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDocumentSize"]);
	};

	public override function DocumentSize():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DocumentSize"]);
	};

	public function DocumentSizeDefault():QSizeF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DocumentSizeDefault"]);
	};

	public function EnsureBlockLayout(block:QTextBlock_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureBlockLayout", block]);
	};

	public override function ConnectFrameBoundingRect(f:(vqt:QTextFrame) -> QRectF) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFrameBoundingRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectFrameBoundingRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFrameBoundingRect"]);
	};

	public override function FrameBoundingRect(vqt:QTextFrame_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FrameBoundingRect", vqt]);
	};

	public function FrameBoundingRectDefault(vqt:QTextFrame_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FrameBoundingRectDefault", vqt]);
	};

	public override function ConnectHitTest(f:(vqp:QPointF, vqt:Int) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHitTest", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectHitTest() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHitTest"]);
	};

	public override function HitTest(vqp:QPointF_ITF, vqt:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HitTest", vqp, vqt]);
	};

	public function HitTestDefault(vqp:QPointF_ITF, vqt:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HitTestDefault", vqp, vqt]);
	};

	public override function ConnectPageCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPageCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPageCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPageCount"]);
	};

	public override function PageCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PageCount"]);
	};

	public function PageCountDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PageCountDefault"]);
	};

	public function RequestUpdate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RequestUpdate"]);
	};

	public function SetCursorWidth(width:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCursorWidth", width]);
	};

	public function ConnectDestroyQPlainTextDocumentLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQPlainTextDocumentLayout",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQPlainTextDocumentLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQPlainTextDocumentLayout"]);
	};

	public function DestroyQPlainTextDocumentLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQPlainTextDocumentLayout"]);
	};

	public function DestroyQPlainTextDocumentLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQPlainTextDocumentLayoutDefault"]);
	};

	public override function DrawInlineObjectDefault(painter:QPainter_ITF, rect:QRectF_ITF, object:QTextInlineObject_ITF, posInDocument:Int,
			format:QTextFormat_ITF) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"DrawInlineObjectDefault",
			painter,
			rect,
			object,
			posInDocument,
			format
		]);
	};

	public override function PositionInlineObjectDefault(item:QTextInlineObject_ITF, posInDocument:Int, format:QTextFormat_ITF) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"PositionInlineObjectDefault",
			item,
			posInDocument,
			format
		]);
	};

	public override function ResizeInlineObjectDefault(item:QTextInlineObject_ITF, posInDocument:Int, format:QTextFormat_ITF) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"ResizeInlineObjectDefault",
			item,
			posInDocument,
			format
		]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQPlainTextDocumentLayoutFromPointer(ptr:String):QPlainTextDocumentLayout {
	final r = new QPlainTextDocumentLayout();
	r.initFrom(ptr, "widgets.QPlainTextDocumentLayout");
	return r;
}

function NewQPlainTextDocumentLayout(document:QTextDocument_ITF):QPlainTextDocumentLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQPlainTextDocumentLayout", "", document]);
}

interface QPlainTextEdit_ITF extends QAbstractScrollArea_ITF {
	public function QPlainTextEdit_PTR():QPlainTextEdit;
}

class QPlainTextEdit extends QAbstractScrollArea implements QPlainTextEdit_ITF {
	public function new() {
		super();
	}

	public function QPlainTextEdit_PTR():QPlainTextEdit {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QPlainTextEdit_PTR"]);
	};

	public function AnchorAt(pos:QPoint_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AnchorAt", pos]);
	};

	public function ConnectAppendHtml(f:(html:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAppendHtml", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAppendHtml() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAppendHtml"]);
	};

	public function AppendHtml(html:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AppendHtml", html]);
	};

	public function AppendHtmlDefault(html:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AppendHtmlDefault", html]);
	};

	public function ConnectAppendPlainText(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAppendPlainText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAppendPlainText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAppendPlainText"]);
	};

	public function AppendPlainText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AppendPlainText", text]);
	};

	public function AppendPlainTextDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AppendPlainTextDefault", text]);
	};

	public function BackgroundVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BackgroundVisible"]);
	};

	public function BlockBoundingGeometry(block:QTextBlock_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BlockBoundingGeometry", block]);
	};

	public function BlockBoundingRect(block:QTextBlock_ITF):QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BlockBoundingRect", block]);
	};

	public function BlockCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BlockCount"]);
	};

	public function ConnectBlockCountChanged(f:(newBlockCount:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBlockCountChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBlockCountChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBlockCountChanged"]);
	};

	public function BlockCountChanged(newBlockCount:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "BlockCountChanged", newBlockCount]);
	};

	public function ConnectCanInsertFromMimeData(f:(source:QMimeData) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCanInsertFromMimeData",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCanInsertFromMimeData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCanInsertFromMimeData"]);
	};

	public function CanInsertFromMimeData(source:QMimeData_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanInsertFromMimeData", source]);
	};

	public function CanInsertFromMimeDataDefault(source:QMimeData_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanInsertFromMimeDataDefault", source]);
	};

	public function CanPaste():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanPaste"]);
	};

	public function ConnectCenterCursor(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCenterCursor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCenterCursor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCenterCursor"]);
	};

	public function CenterCursor() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CenterCursor"]);
	};

	public function CenterCursorDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CenterCursorDefault"]);
	};

	public function CenterOnScroll():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CenterOnScroll"]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function ContentOffset():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ContentOffset"]);
	};

	public function ConnectCopy(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCopy", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCopy() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCopy"]);
	};

	public function Copy() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Copy"]);
	};

	public function CopyDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CopyDefault"]);
	};

	public function ConnectCopyAvailable(f:(yes:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCopyAvailable", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCopyAvailable() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCopyAvailable"]);
	};

	public function CopyAvailable(yes:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CopyAvailable", yes]);
	};

	public function ConnectCreateMimeDataFromSelection(f:() -> QMimeData) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCreateMimeDataFromSelection",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCreateMimeDataFromSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreateMimeDataFromSelection"]);
	};

	public function CreateMimeDataFromSelection():QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateMimeDataFromSelection"]);
	};

	public function CreateMimeDataFromSelectionDefault():QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateMimeDataFromSelectionDefault"]);
	};

	public function CreateStandardContextMenu():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateStandardContextMenu"]);
	};

	public function CreateStandardContextMenu2(position:QPoint_ITF):QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateStandardContextMenu2", position]);
	};

	public function CurrentCharFormat():QTextCharFormat {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentCharFormat"]);
	};

	public function CursorForPosition(pos:QPoint_ITF):QTextCursor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorForPosition", pos]);
	};

	public function ConnectCursorPositionChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCursorPositionChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCursorPositionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCursorPositionChanged"]);
	};

	public function CursorPositionChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CursorPositionChanged"]);
	};

	public function CursorRect(cursor:QTextCursor_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorRect", cursor]);
	};

	public function CursorRect2():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorRect2"]);
	};

	public function CursorWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorWidth"]);
	};

	public function ConnectCut(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCut", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCut() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCut"]);
	};

	public function Cut() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Cut"]);
	};

	public function CutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CutDefault"]);
	};

	public function Document():QTextDocument {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Document"]);
	};

	public function DocumentTitle():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DocumentTitle"]);
	};

	public function EnsureCursorVisible() {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureCursorVisible"]);
	};

	public function Find_QFrame(exp:String, options:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Find", exp, options]);
	};

	public function Find2(exp:QRegExp_ITF, options:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Find2", exp, options]);
	};

	public function Find3(exp:QRegularExpression_ITF, options:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Find3", exp, options]);
	};

	public function FirstVisibleBlock():QTextBlock {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FirstVisibleBlock"]);
	};

	public function ConnectInsertFromMimeData(f:(source:QMimeData) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectInsertFromMimeData",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectInsertFromMimeData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInsertFromMimeData"]);
	};

	public function InsertFromMimeData(source:QMimeData_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertFromMimeData", source]);
	};

	public function InsertFromMimeDataDefault(source:QMimeData_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertFromMimeDataDefault", source]);
	};

	public function ConnectInsertPlainText(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInsertPlainText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInsertPlainText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInsertPlainText"]);
	};

	public function InsertPlainText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertPlainText", text]);
	};

	public function InsertPlainTextDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertPlainTextDefault", text]);
	};

	public function IsReadOnly():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsReadOnly"]);
	};

	public function IsUndoRedoEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsUndoRedoEnabled"]);
	};

	public function LineWrapMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LineWrapMode"]);
	};

	public function ConnectLoadResource(f:(ty:Int, name:QUrl) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLoadResource", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLoadResource() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLoadResource"]);
	};

	public function LoadResource(ty:Int, name:QUrl_ITF):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LoadResource", ty, name]);
	};

	public function LoadResourceDefault(ty:Int, name:QUrl_ITF):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LoadResourceDefault", ty, name]);
	};

	public function MaximumBlockCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumBlockCount"]);
	};

	public function MergeCurrentCharFormat(modifier:QTextCharFormat_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MergeCurrentCharFormat", modifier]);
	};

	public function ConnectModificationChanged(f:(changed:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectModificationChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectModificationChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectModificationChanged"]);
	};

	public function ModificationChanged(changed:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ModificationChanged", changed]);
	};

	public function MoveCursor(operation:Int, mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursor", operation, mode]);
	};

	public function OverwriteMode():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OverwriteMode"]);
	};

	public function ConnectPaste(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaste", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaste() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaste"]);
	};

	public function Paste() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paste"]);
	};

	public function PasteDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "PasteDefault"]);
	};

	public function PlaceholderText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PlaceholderText"]);
	};

	public function Print(printer:QPagedPaintDevice_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Print", printer]);
	};

	public function ConnectRedo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRedo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRedo"]);
	};

	public function Redo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Redo"]);
	};

	public function RedoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RedoDefault"]);
	};

	public function ConnectRedoAvailable(f:(available:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRedoAvailable", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRedoAvailable() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRedoAvailable"]);
	};

	public function RedoAvailable(available:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RedoAvailable", available]);
	};

	public function ConnectSelectAll(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectAll() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectAll"]);
	};

	public function SelectAll() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAll"]);
	};

	public function SelectAllDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAllDefault"]);
	};

	public function ConnectSelectionChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectionChanged"]);
	};

	public function SelectionChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChanged"]);
	};

	public function SetBackgroundVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBackgroundVisible", visible]);
	};

	public function SetCenterOnScroll(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCenterOnScroll", enabled]);
	};

	public function SetCurrentCharFormat(format:QTextCharFormat_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentCharFormat", format]);
	};

	public function SetCursorWidth(width:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCursorWidth", width]);
	};

	public function SetDocument(document:QTextDocument_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocument", document]);
	};

	public function SetDocumentTitle(title:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocumentTitle", title]);
	};

	public function SetLineWrapMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLineWrapMode", mode]);
	};

	public function SetMaximumBlockCount(maximum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumBlockCount", maximum]);
	};

	public function SetOverwriteMode(overwrite:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOverwriteMode", overwrite]);
	};

	public function SetPlaceholderText(placeholderText:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPlaceholderText", placeholderText]);
	};

	public function ConnectSetPlainText(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetPlainText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetPlainText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetPlainText"]);
	};

	public function SetPlainText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPlainText", text]);
	};

	public function SetPlainTextDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPlainTextDefault", text]);
	};

	public function SetReadOnly(ro:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetReadOnly", ro]);
	};

	public function SetTabChangesFocus(b:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabChangesFocus", b]);
	};

	public function SetTabStopDistance(distance:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabStopDistance", distance]);
	};

	public function SetTabStopWidth(width:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabStopWidth", width]);
	};

	public function SetTextCursor(cursor:QTextCursor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextCursor", cursor]);
	};

	public function SetTextInteractionFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextInteractionFlags", flags]);
	};

	public function SetUndoRedoEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUndoRedoEnabled", enable]);
	};

	public function SetWordWrapMode(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWordWrapMode", policy]);
	};

	public function TabChangesFocus():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabChangesFocus"]);
	};

	public function TabStopDistance():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabStopDistance"]);
	};

	public function TabStopWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabStopWidth"]);
	};

	public function ConnectTextChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTextChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTextChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTextChanged"]);
	};

	public function TextChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "TextChanged"]);
	};

	public function TextCursor():QTextCursor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextCursor"]);
	};

	public function TextInteractionFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextInteractionFlags"]);
	};

	public function ToPlainText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToPlainText"]);
	};

	public function ConnectUndo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUndo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUndo"]);
	};

	public function Undo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Undo"]);
	};

	public function UndoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UndoDefault"]);
	};

	public function ConnectUndoAvailable(f:(available:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUndoAvailable", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUndoAvailable() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUndoAvailable"]);
	};

	public function UndoAvailable(available:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UndoAvailable", available]);
	};

	public function ConnectUpdateRequest(f:(rect:QRect, dy:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdateRequest", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdateRequest() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateRequest"]);
	};

	public function UpdateRequest(rect:QRect_ITF, dy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateRequest", rect, dy]);
	};

	public function WordWrapMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WordWrapMode"]);
	};

	public function ConnectZoomIn(f:(ran:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectZoomIn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectZoomIn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectZoomIn"]);
	};

	public function ZoomIn(ran:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ZoomIn", ran]);
	};

	public function ZoomInDefault(ran:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ZoomInDefault", ran]);
	};

	public function ConnectZoomOut(f:(ran:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectZoomOut", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectZoomOut() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectZoomOut"]);
	};

	public function ZoomOut(ran:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ZoomOut", ran]);
	};

	public function ZoomOutDefault(ran:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ZoomOutDefault", ran]);
	};

	public function ConnectDestroyQPlainTextEdit(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQPlainTextEdit",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQPlainTextEdit() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQPlainTextEdit"]);
	};

	public function DestroyQPlainTextEdit() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQPlainTextEdit"]);
	};

	public function DestroyQPlainTextEditDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQPlainTextEditDefault"]);
	};
}

function NewQPlainTextEditFromPointer(ptr:String):QPlainTextEdit {
	final r = new QPlainTextEdit();
	r.initFrom(ptr, "widgets.QPlainTextEdit");
	return r;
}

function NewQPlainTextEdit(parent:QWidget_ITF):QPlainTextEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQPlainTextEdit", "", parent]);
}

function NewQPlainTextEdit2(text:String, parent:QWidget_ITF):QPlainTextEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQPlainTextEdit2", "", text, parent]);
}

interface QProgressBar_ITF extends QWidget_ITF {
	public function QProgressBar_PTR():QProgressBar;
}

class QProgressBar extends QWidget implements QProgressBar_ITF {
	public function new() {
		super();
	}

	public function QProgressBar_PTR():QProgressBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QProgressBar_PTR"]);
	};

	public function Alignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment"]);
	};

	public function Format():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Format"]);
	};

	public function InitStyleOption(option:QStyleOptionProgressBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function InvertedAppearance():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InvertedAppearance"]);
	};

	public function IsTextVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsTextVisible"]);
	};

	public function Maximum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Maximum"]);
	};

	public function Minimum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Minimum"]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function ConnectReset(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectReset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectReset"]);
	};

	public function Reset() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Reset"]);
	};

	public function ResetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetDefault"]);
	};

	public function ResetFormat() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetFormat"]);
	};

	public function SetAlignment(alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", alignment]);
	};

	public function SetFormat(format:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFormat", format]);
	};

	public function SetInvertedAppearance(invert:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInvertedAppearance", invert]);
	};

	public function ConnectSetMaximum(f:(maximum:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetMaximum", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetMaximum() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetMaximum"]);
	};

	public function SetMaximum(maximum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximum", maximum]);
	};

	public function SetMaximumDefault(maximum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumDefault", maximum]);
	};

	public function ConnectSetMinimum(f:(minimum:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetMinimum", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetMinimum() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetMinimum"]);
	};

	public function SetMinimum(minimum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimum", minimum]);
	};

	public function SetMinimumDefault(minimum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumDefault", minimum]);
	};

	public function ConnectSetOrientation(f:(vqt:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetOrientation", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetOrientation() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetOrientation"]);
	};

	public function SetOrientation(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientation", vqt]);
	};

	public function SetOrientationDefault(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientationDefault", vqt]);
	};

	public function ConnectSetRange(f:(minimum:Int, maximum:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetRange", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetRange() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetRange"]);
	};

	public function SetRange(minimum:Int, maximum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRange", minimum, maximum]);
	};

	public function SetRangeDefault(minimum:Int, maximum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRangeDefault", minimum, maximum]);
	};

	public function SetTextDirection(textDirection:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextDirection", textDirection]);
	};

	public function SetTextVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextVisible", visible]);
	};

	public function ConnectSetValue(f:(value:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetValue", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetValue() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetValue"]);
	};

	public function SetValue(value:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValue", value]);
	};

	public function SetValueDefault(value:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValueDefault", value]);
	};

	public function ConnectText(f:() -> String) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectText"]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function TextDefault():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextDefault"]);
	};

	public function TextDirection():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextDirection"]);
	};

	public function Value():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Value"]);
	};

	public function ConnectValueChanged(f:(value:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValueChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValueChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValueChanged"]);
	};

	public function ValueChanged(value:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ValueChanged", value]);
	};

	public function ConnectDestroyQProgressBar(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQProgressBar",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQProgressBar() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQProgressBar"]);
	};

	public function DestroyQProgressBar() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQProgressBar"]);
	};

	public function DestroyQProgressBarDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQProgressBarDefault"]);
	};
}

function NewQProgressBarFromPointer(ptr:String):QProgressBar {
	final r = new QProgressBar();
	r.initFrom(ptr, "widgets.QProgressBar");
	return r;
}

function NewQProgressBar(parent:QWidget_ITF):QProgressBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQProgressBar", "", parent]);
}

interface QProgressDialog_ITF extends QDialog_ITF {
	public function QProgressDialog_PTR():QProgressDialog;
}

class QProgressDialog extends QDialog implements QProgressDialog_ITF {
	public function new() {
		super();
	}

	public function QProgressDialog_PTR():QProgressDialog {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QProgressDialog_PTR"]);
	};

	public function AutoClose():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoClose"]);
	};

	public function AutoReset():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoReset"]);
	};

	public function ConnectCancel(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCancel", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCancel() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCancel"]);
	};

	public function Cancel() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Cancel"]);
	};

	public function CancelDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CancelDefault"]);
	};

	public function ConnectCanceled(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCanceled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCanceled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCanceled"]);
	};

	public function Canceled() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Canceled"]);
	};

	public function ConnectForceShow(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectForceShow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectForceShow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectForceShow"]);
	};

	public function ForceShow() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ForceShow"]);
	};

	public function ForceShowDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ForceShowDefault"]);
	};

	public function LabelText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LabelText"]);
	};

	public function Maximum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Maximum"]);
	};

	public function Minimum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Minimum"]);
	};

	public function MinimumDuration():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumDuration"]);
	};

	public function Open_QProgressDialog(receiver:QObject_ITF, member:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Open", receiver, member]);
	};

	public function ConnectReset(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectReset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectReset"]);
	};

	public function Reset() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Reset"]);
	};

	public function ResetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetDefault"]);
	};

	public function SetAutoClose(close:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoClose", close]);
	};

	public function SetAutoReset(reset:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoReset", reset]);
	};

	public function SetBar(bar:QProgressBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBar", bar]);
	};

	public function SetCancelButton(cancelButton:QPushButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCancelButton", cancelButton]);
	};

	public function ConnectSetCancelButtonText(f:(cancelButtonText:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetCancelButtonText",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetCancelButtonText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCancelButtonText"]);
	};

	public function SetCancelButtonText(cancelButtonText:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCancelButtonText", cancelButtonText]);
	};

	public function SetCancelButtonTextDefault(cancelButtonText:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCancelButtonTextDefault", cancelButtonText]);
	};

	public function SetLabel(label:QLabel_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLabel", label]);
	};

	public function ConnectSetLabelText(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetLabelText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetLabelText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetLabelText"]);
	};

	public function SetLabelText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLabelText", text]);
	};

	public function SetLabelTextDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLabelTextDefault", text]);
	};

	public function ConnectSetMaximum(f:(maximum:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetMaximum", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetMaximum() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetMaximum"]);
	};

	public function SetMaximum(maximum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximum", maximum]);
	};

	public function SetMaximumDefault(maximum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumDefault", maximum]);
	};

	public function ConnectSetMinimum(f:(minimum:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetMinimum", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetMinimum() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetMinimum"]);
	};

	public function SetMinimum(minimum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimum", minimum]);
	};

	public function SetMinimumDefault(minimum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumDefault", minimum]);
	};

	public function ConnectSetMinimumDuration(f:(ms:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetMinimumDuration",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetMinimumDuration() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetMinimumDuration"]);
	};

	public function SetMinimumDuration(ms:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumDuration", ms]);
	};

	public function SetMinimumDurationDefault(ms:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumDurationDefault", ms]);
	};

	public function ConnectSetRange(f:(minimum:Int, maximum:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetRange", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetRange() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetRange"]);
	};

	public function SetRange(minimum:Int, maximum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRange", minimum, maximum]);
	};

	public function SetRangeDefault(minimum:Int, maximum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRangeDefault", minimum, maximum]);
	};

	public function ConnectSetValue(f:(progress:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetValue", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetValue() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetValue"]);
	};

	public function SetValue(progress:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValue", progress]);
	};

	public function SetValueDefault(progress:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValueDefault", progress]);
	};

	public function Value():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Value"]);
	};

	public function WasCanceled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WasCanceled"]);
	};

	public function ConnectDestroyQProgressDialog(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQProgressDialog",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQProgressDialog() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQProgressDialog"]);
	};

	public function DestroyQProgressDialog() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQProgressDialog"]);
	};

	public function DestroyQProgressDialogDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQProgressDialogDefault"]);
	};
}

function NewQProgressDialogFromPointer(ptr:String):QProgressDialog {
	final r = new QProgressDialog();
	r.initFrom(ptr, "widgets.QProgressDialog");
	return r;
}

function NewQProgressDialog(parent:QWidget_ITF, ff:Int):QProgressDialog {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQProgressDialog", "", parent, ff]);
}

function NewQProgressDialog2(labelText:String, cancelButtonText:String, minimum:Int, maximum:Int, parent:QWidget_ITF, ff:Int):QProgressDialog {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"", "", "widgets.NewQProgressDialog2", "", labelText, cancelButtonText, minimum, maximum, parent, ff
	]);
}

interface QProxyStyle_ITF extends QCommonStyle_ITF {
	public function QProxyStyle_PTR():QProxyStyle;
}

class QProxyStyle extends QCommonStyle implements QProxyStyle_ITF {
	public function new() {
		super();
	}

	public function QProxyStyle_PTR():QProxyStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QProxyStyle_PTR"]);
	};

	public function BaseStyle():QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BaseStyle"]);
	};

	public function SetBaseStyle(style:QStyle_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBaseStyle", style]);
	};

	public override function ConnectStandardIcon(f:(standardIcon:Int, option:QStyleOption, widget:QWidget) -> QIcon) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStandardIcon", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectStandardIcon() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStandardIcon"]);
	};

	public override function StandardIcon(standardIcon:Int, option:QStyleOption_ITF, widget:QWidget_ITF):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardIcon", standardIcon, option, widget]);
	};

	public override function StandardIconDefault(standardIcon:Int, option:QStyleOption_ITF, widget:QWidget_ITF):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardIconDefault", standardIcon, option, widget]);
	};

	public function ConnectDestroyQProxyStyle(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQProxyStyle",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQProxyStyle() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQProxyStyle"]);
	};

	public function DestroyQProxyStyle() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQProxyStyle"]);
	};

	public function DestroyQProxyStyleDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQProxyStyleDefault"]);
	};
}

function NewQProxyStyleFromPointer(ptr:String):QProxyStyle {
	final r = new QProxyStyle();
	r.initFrom(ptr, "widgets.QProxyStyle");
	return r;
}

function NewQProxyStyle(style:QStyle_ITF):QProxyStyle {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQProxyStyle", "", style]);
}

function NewQProxyStyle2(key:String):QProxyStyle {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQProxyStyle2", "", key]);
}

interface QPushButton_ITF extends QAbstractButton_ITF {
	public function QPushButton_PTR():QPushButton;
}

class QPushButton extends QAbstractButton implements QPushButton_ITF {
	public function new() {
		super();
	}

	public function QPushButton_PTR():QPushButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QPushButton_PTR"]);
	};

	public function AutoDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoDefault"]);
	};

	public function InitStyleOption(option:QStyleOptionButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function IsDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsDefault"]);
	};

	public function IsFlat():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsFlat"]);
	};

	public function Menu():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Menu"]);
	};

	public override function ConnectPaintEvent(f:(vqp:QPaintEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaintEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintEvent"]);
	};

	public override function PaintEvent(vqp:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEvent", vqp]);
	};

	public override function PaintEventDefault(vqp:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEventDefault", vqp]);
	};

	public function SetAutoDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoDefault", vbo]);
	};

	public function SetDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefault", vbo]);
	};

	public function SetFlat(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFlat", vbo]);
	};

	public function SetMenu(menu:QMenu_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMenu", menu]);
	};

	public function ConnectShowMenu(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowMenu", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowMenu() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowMenu"]);
	};

	public function ShowMenu() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMenu"]);
	};

	public function ShowMenuDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMenuDefault"]);
	};

	public function ConnectDestroyQPushButton(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQPushButton",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQPushButton() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQPushButton"]);
	};

	public function DestroyQPushButton() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQPushButton"]);
	};

	public function DestroyQPushButtonDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQPushButtonDefault"]);
	};
}

function NewQPushButtonFromPointer(ptr:String):QPushButton {
	final r = new QPushButton();
	r.initFrom(ptr, "widgets.QPushButton");
	return r;
}

function NewQPushButton(parent:QWidget_ITF):QPushButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQPushButton", "", parent]);
}

function NewQPushButton2(text:String, parent:QWidget_ITF):QPushButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQPushButton2", "", text, parent]);
}

function NewQPushButton3(icon:QIcon_ITF, text:String, parent:QWidget_ITF):QPushButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQPushButton3", "", icon, text, parent]);
}

interface QRadioButton_ITF extends QAbstractButton_ITF {
	public function QRadioButton_PTR():QRadioButton;
}

class QRadioButton extends QAbstractButton implements QRadioButton_ITF {
	public function new() {
		super();
	}

	public function QRadioButton_PTR():QRadioButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QRadioButton_PTR"]);
	};

	public function InitStyleOption(option:QStyleOptionButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public override function ConnectPaintEvent(f:(vqp:QPaintEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaintEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintEvent"]);
	};

	public override function PaintEvent(vqp:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEvent", vqp]);
	};

	public override function PaintEventDefault(vqp:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEventDefault", vqp]);
	};

	public function ConnectDestroyQRadioButton(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQRadioButton",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQRadioButton() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQRadioButton"]);
	};

	public function DestroyQRadioButton() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQRadioButton"]);
	};

	public function DestroyQRadioButtonDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQRadioButtonDefault"]);
	};
}

function NewQRadioButtonFromPointer(ptr:String):QRadioButton {
	final r = new QRadioButton();
	r.initFrom(ptr, "widgets.QRadioButton");
	return r;
}

function NewQRadioButton(parent:QWidget_ITF):QRadioButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQRadioButton", "", parent]);
}

function NewQRadioButton2(text:String, parent:QWidget_ITF):QRadioButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQRadioButton2", "", text, parent]);
}

interface QRubberBand_ITF extends QWidget_ITF {
	public function QRubberBand_PTR():QRubberBand;
}

class QRubberBand extends QWidget implements QRubberBand_ITF {
	public function new() {
		super();
	}

	public function QRubberBand_PTR():QRubberBand {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QRubberBand_PTR"]);
	};

	public function InitStyleOption(option:QStyleOptionRubberBand_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function Shape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Shape"]);
	};

	public function ConnectDestroyQRubberBand(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQRubberBand",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQRubberBand() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQRubberBand"]);
	};

	public function DestroyQRubberBand() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQRubberBand"]);
	};

	public function DestroyQRubberBandDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQRubberBandDefault"]);
	};
}

function NewQRubberBandFromPointer(ptr:String):QRubberBand {
	final r = new QRubberBand();
	r.initFrom(ptr, "widgets.QRubberBand");
	return r;
}

function NewQRubberBand(s:Int, p:QWidget_ITF):QRubberBand {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQRubberBand", "", s, p]);
}

interface QScrollArea_ITF extends QAbstractScrollArea_ITF {
	public function QScrollArea_PTR():QScrollArea;
}

class QScrollArea extends QAbstractScrollArea implements QScrollArea_ITF {
	public function new() {
		super();
	}

	public function QScrollArea_PTR():QScrollArea {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QScrollArea_PTR"]);
	};

	public function Alignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment"]);
	};

	public function EnsureVisible(x:Int, y:Int, xmargi:Int, ymargi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureVisible", x, y, xmargi, ymargi]);
	};

	public function EnsureWidgetVisible(childWidget:QWidget_ITF, xmargi:Int, ymargi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureWidgetVisible", childWidget, xmargi, ymargi]);
	};

	public function SetAlignment(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", vqt]);
	};

	public function SetWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWidget", widget]);
	};

	public function SetWidgetResizable(resizable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWidgetResizable", resizable]);
	};

	public function TakeWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeWidget"]);
	};

	public function Widget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget"]);
	};

	public function WidgetResizable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WidgetResizable"]);
	};

	public function ConnectDestroyQScrollArea(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQScrollArea",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQScrollArea() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQScrollArea"]);
	};

	public function DestroyQScrollArea() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQScrollArea"]);
	};

	public function DestroyQScrollAreaDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQScrollAreaDefault"]);
	};
}

function NewQScrollAreaFromPointer(ptr:String):QScrollArea {
	final r = new QScrollArea();
	r.initFrom(ptr, "widgets.QScrollArea");
	return r;
}

function NewQScrollArea(parent:QWidget_ITF):QScrollArea {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQScrollArea", "", parent]);
}

interface QScrollBar_ITF extends QAbstractSlider_ITF {
	public function QScrollBar_PTR():QScrollBar;
}

class QScrollBar extends QAbstractSlider implements QScrollBar_ITF {
	public function new() {
		super();
	}

	public function QScrollBar_PTR():QScrollBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QScrollBar_PTR"]);
	};

	public function InitStyleOption(option:QStyleOptionSlider_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function ConnectDestroyQScrollBar(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQScrollBar", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQScrollBar() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQScrollBar"]);
	};

	public function DestroyQScrollBar() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQScrollBar"]);
	};

	public function DestroyQScrollBarDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQScrollBarDefault"]);
	};
}

function NewQScrollBarFromPointer(ptr:String):QScrollBar {
	final r = new QScrollBar();
	r.initFrom(ptr, "widgets.QScrollBar");
	return r;
}

function NewQScrollBar(parent:QWidget_ITF):QScrollBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQScrollBar", "", parent]);
}

function NewQScrollBar2(orientation:Int, parent:QWidget_ITF):QScrollBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQScrollBar2", "", orientation, parent]);
}

interface QScroller_ITF extends QObject_ITF {
	public function QScroller_PTR():QScroller;
}

class QScroller extends QObject implements QScroller_ITF {
	public function new() {
		super();
	}

	public function QScroller_PTR():QScroller {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QScroller_PTR"]);
	};

	public function ActiveScrollers():Array<QScroller> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActiveScrollers"]);
	};

	public function ConnectEnsureVisible(f:(rect:QRectF, xmargi:Float, ymargi:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEnsureVisible", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEnsureVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEnsureVisible"]);
	};

	public function EnsureVisible(rect:QRectF_ITF, xmargi:Float, ymargi:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureVisible", rect, xmargi, ymargi]);
	};

	public function EnsureVisibleDefault(rect:QRectF_ITF, xmargi:Float, ymargi:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureVisibleDefault", rect, xmargi, ymargi]);
	};

	public function ConnectEnsureVisible2(f:(rect:QRectF, xmargi:Float, ymargi:Float, scrollTime:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEnsureVisible2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEnsureVisible2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEnsureVisible2"]);
	};

	public function EnsureVisible2(rect:QRectF_ITF, xmargi:Float, ymargi:Float, scrollTime:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureVisible2", rect, xmargi, ymargi, scrollTime]);
	};

	public function EnsureVisible2Default(rect:QRectF_ITF, xmargi:Float, ymargi:Float, scrollTime:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"EnsureVisible2Default",
			rect,
			xmargi,
			ymargi,
			scrollTime
		]);
	};

	public function FinalPosition():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FinalPosition"]);
	};

	public function GrabGesture(target:QObject_ITF, scrollGestureType:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GrabGesture", target, scrollGestureType]);
	};

	public function GrabbedGesture(target:QObject_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GrabbedGesture", target]);
	};

	public function HandleInput(input:Int, position:QPointF_ITF, timestamp:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HandleInput", input, position, timestamp]);
	};

	public function HasScroller(target:QObject_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasScroller", target]);
	};

	public function PixelPerMeter():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PixelPerMeter"]);
	};

	public function ConnectResendPrepareEvent(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectResendPrepareEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectResendPrepareEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResendPrepareEvent"]);
	};

	public function ResendPrepareEvent() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResendPrepareEvent"]);
	};

	public function ResendPrepareEventDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResendPrepareEventDefault"]);
	};

	public function ConnectScrollTo(f:(pos:QPointF) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollTo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScrollTo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollTo"]);
	};

	public function ScrollTo(pos:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollTo", pos]);
	};

	public function ScrollToDefault(pos:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToDefault", pos]);
	};

	public function ConnectScrollTo2(f:(pos:QPointF, scrollTime:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollTo2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScrollTo2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollTo2"]);
	};

	public function ScrollTo2(pos:QPointF_ITF, scrollTime:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollTo2", pos, scrollTime]);
	};

	public function ScrollTo2Default(pos:QPointF_ITF, scrollTime:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollTo2Default", pos, scrollTime]);
	};

	public function Scroller(target:QObject_ITF):QScroller {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Scroller", target]);
	};

	public function Scroller2(target:QObject_ITF):QScroller {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Scroller2", target]);
	};

	public function ScrollerProperties():QScrollerProperties {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScrollerProperties"]);
	};

	public function ConnectScrollerPropertiesChanged(f:(newProperties:QScrollerProperties) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectScrollerPropertiesChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectScrollerPropertiesChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollerPropertiesChanged"]);
	};

	public function ScrollerPropertiesChanged(newProperties:QScrollerProperties_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollerPropertiesChanged", newProperties]);
	};

	public function ConnectSetScrollerProperties(f:(prop:QScrollerProperties) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetScrollerProperties",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetScrollerProperties() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetScrollerProperties"]);
	};

	public function SetScrollerProperties(prop:QScrollerProperties_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetScrollerProperties", prop]);
	};

	public function SetScrollerPropertiesDefault(prop:QScrollerProperties_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetScrollerPropertiesDefault", prop]);
	};

	public function SetSnapPositionsX(positions:Array<Float>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSnapPositionsX", positions]);
	};

	public function SetSnapPositionsX2(first:Float, interval:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSnapPositionsX2", first, interval]);
	};

	public function SetSnapPositionsY(positions:Array<Float>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSnapPositionsY", positions]);
	};

	public function SetSnapPositionsY2(first:Float, interval:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSnapPositionsY2", first, interval]);
	};

	public function State():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "State"]);
	};

	public function ConnectStateChanged(f:(newState:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStateChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStateChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStateChanged"]);
	};

	public function StateChanged(newState:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "StateChanged", newState]);
	};

	public function Stop() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Stop"]);
	};

	public function Target():QObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Target"]);
	};

	public function UngrabGesture(target:QObject_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UngrabGesture", target]);
	};

	public function Velocity():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Velocity"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQScrollerFromPointer(ptr:String):QScroller {
	final r = new QScroller();
	r.initFrom(ptr, "widgets.QScroller");
	return r;
}

function QScroller_ActiveScrollers():Array<QScroller> {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QScroller_ActiveScrollers", ""]);
}

function QScroller_GrabGesture(target:QObject_ITF, scrollGestureType:Int):Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QScroller_GrabGesture", "", target, scrollGestureType]);
}

function QScroller_GrabbedGesture(target:QObject_ITF):Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QScroller_GrabbedGesture", "", target]);
}

function QScroller_HasScroller(target:QObject_ITF):Bool {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QScroller_HasScroller", "", target]);
}

function QScroller_Scroller(target:QObject_ITF):QScroller {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QScroller_Scroller", "", target]);
}

function QScroller_Scroller2(target:QObject_ITF):QScroller {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QScroller_Scroller2", "", target]);
}

function QScroller_UngrabGesture(target:QObject_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QScroller_UngrabGesture", "", target]);
}

interface QScrollerProperties_ITF {
	public function QScrollerProperties_PTR():QScrollerProperties;
}

class QScrollerProperties extends Internal implements QScrollerProperties_ITF {
	public function new() {
		super();
	}

	public function QScrollerProperties_PTR():QScrollerProperties {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QScrollerProperties_PTR"]);
	};

	public function ScrollMetric(metric:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ScrollMetric", metric]);
	};

	public function SetDefaultScrollerProperties(sp:QScrollerProperties_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultScrollerProperties", sp]);
	};

	public function SetScrollMetric(metric:Int, value:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetScrollMetric", metric, value]);
	};

	public function UnsetDefaultScrollerProperties() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnsetDefaultScrollerProperties"]);
	};

	public function ConnectDestroyQScrollerProperties(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQScrollerProperties",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQScrollerProperties() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQScrollerProperties"]);
	};

	public function DestroyQScrollerProperties() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQScrollerProperties"]);
	};

	public function DestroyQScrollerPropertiesDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQScrollerPropertiesDefault"]);
	};
}

function NewQScrollerPropertiesFromPointer(ptr:String):QScrollerProperties {
	final r = new QScrollerProperties();
	r.initFrom(ptr, "widgets.QScrollerProperties");
	return r;
}

function NewQScrollerProperties():QScrollerProperties {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQScrollerProperties", ""]);
}

function NewQScrollerProperties2(sp:QScrollerProperties_ITF):QScrollerProperties {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQScrollerProperties2", "", sp]);
}

function QScrollerProperties_SetDefaultScrollerProperties(sp:QScrollerProperties_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QScrollerProperties_SetDefaultScrollerProperties", "", sp]);
}

function QScrollerProperties_UnsetDefaultScrollerProperties() {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QScrollerProperties_UnsetDefaultScrollerProperties", ""]);
}

interface QShortcut_ITF extends QObject_ITF {
	public function QShortcut_PTR():QShortcut;
}

class QShortcut extends QObject implements QShortcut_ITF {
	public function new() {
		super();
	}

	public function QShortcut_PTR():QShortcut {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QShortcut_PTR"]);
	};

	public function ConnectActivated(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivated"]);
	};

	public function Activated() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Activated"]);
	};

	public function ConnectActivatedAmbiguously(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectActivatedAmbiguously",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectActivatedAmbiguously() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivatedAmbiguously"]);
	};

	public function ActivatedAmbiguously() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActivatedAmbiguously"]);
	};

	public function AutoRepeat():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoRepeat"]);
	};

	public function Context():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Context"]);
	};

	public function Id():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Id"]);
	};

	public function IsEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEnabled"]);
	};

	public function Key():QKeySequence {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Key"]);
	};

	public function ParentWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentWidget"]);
	};

	public function SetAutoRepeat(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoRepeat", on]);
	};

	public function SetContext(context:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetContext", context]);
	};

	public function SetEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabled", enable]);
	};

	public function SetKey(key:QKeySequence_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetKey", key]);
	};

	public function SetWhatsThis(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWhatsThis", text]);
	};

	public function WhatsThis():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WhatsThis"]);
	};

	public function ConnectDestroyQShortcut(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQShortcut", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQShortcut() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQShortcut"]);
	};

	public function DestroyQShortcut() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQShortcut"]);
	};

	public function DestroyQShortcutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQShortcutDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQShortcutFromPointer(ptr:String):QShortcut {
	final r = new QShortcut();
	r.initFrom(ptr, "widgets.QShortcut");
	return r;
}

function NewQShortcut(parent:QWidget_ITF):QShortcut {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQShortcut", "", parent]);
}

function NewQShortcut2(key:QKeySequence_ITF, parent:QWidget_ITF, member:String, ambiguousMember:String, context:Int):QShortcut {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.NewQShortcut2",
		"",
		key,
		parent,
		member,
		ambiguousMember,
		context
	]);
}

interface QSizeGrip_ITF extends QWidget_ITF {
	public function QSizeGrip_PTR():QSizeGrip;
}

class QSizeGrip extends QWidget implements QSizeGrip_ITF {
	public function new() {
		super();
	}

	public function QSizeGrip_PTR():QSizeGrip {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QSizeGrip_PTR"]);
	};

	public override function ConnectSetVisible(f:(visible:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetVisible"]);
	};

	public override function SetVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisible", visible]);
	};

	public override function SetVisibleDefault(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisibleDefault", visible]);
	};

	public function ConnectDestroyQSizeGrip(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQSizeGrip", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQSizeGrip() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQSizeGrip"]);
	};

	public function DestroyQSizeGrip() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSizeGrip"]);
	};

	public function DestroyQSizeGripDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSizeGripDefault"]);
	};
}

function NewQSizeGripFromPointer(ptr:String):QSizeGrip {
	final r = new QSizeGrip();
	r.initFrom(ptr, "widgets.QSizeGrip");
	return r;
}

function NewQSizeGrip(parent:QWidget_ITF):QSizeGrip {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSizeGrip", "", parent]);
}

interface QSizePolicy_ITF {
	public function QSizePolicy_PTR():QSizePolicy;
}

class QSizePolicy extends Internal implements QSizePolicy_ITF {
	public function new() {
		super();
	}

	public function QSizePolicy_PTR():QSizePolicy {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QSizePolicy_PTR"]);
	};

	public function DestroyQSizePolicy() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSizePolicy"]);
	};

	public function ControlType():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ControlType"]);
	};

	public function ExpandingDirections():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExpandingDirections"]);
	};

	public function HasHeightForWidth():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasHeightForWidth"]);
	};

	public function HasWidthForHeight():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasWidthForHeight"]);
	};

	public function HorizontalPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalPolicy"]);
	};

	public function HorizontalStretch():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalStretch"]);
	};

	public function RetainSizeWhenHidden():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RetainSizeWhenHidden"]);
	};

	public function SetControlType(ty:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetControlType", ty]);
	};

	public function SetHeightForWidth(dependent:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHeightForWidth", dependent]);
	};

	public function SetHorizontalPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalPolicy", policy]);
	};

	public function SetHorizontalStretch(stretchFactor:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalStretch", stretchFactor]);
	};

	public function SetRetainSizeWhenHidden(retainSize:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRetainSizeWhenHidden", retainSize]);
	};

	public function SetVerticalPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalPolicy", policy]);
	};

	public function SetVerticalStretch(stretchFactor:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalStretch", stretchFactor]);
	};

	public function SetWidthForHeight(dependent:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWidthForHeight", dependent]);
	};

	public function Transpose() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Transpose"]);
	};

	public function Transposed():QSizePolicy {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Transposed"]);
	};

	public function VerticalPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalPolicy"]);
	};

	public function VerticalStretch():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalStretch"]);
	};
}

function NewQSizePolicyFromPointer(ptr:String):QSizePolicy {
	final r = new QSizePolicy();
	r.initFrom(ptr, "widgets.QSizePolicy");
	return r;
}

function NewQSizePolicy():QSizePolicy {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSizePolicy", ""]);
}

function NewQSizePolicy2(horizontal:Int, vertical:Int, ty:Int):QSizePolicy {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSizePolicy2", "", horizontal, vertical, ty]);
}

interface QSlider_ITF extends QAbstractSlider_ITF {
	public function QSlider_PTR():QSlider;
}

class QSlider extends QAbstractSlider implements QSlider_ITF {
	public function new() {
		super();
	}

	public function QSlider_PTR():QSlider {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QSlider_PTR"]);
	};

	public function InitStyleOption(option:QStyleOptionSlider_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function SetTickInterval(ti:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTickInterval", ti]);
	};

	public function SetTickPosition(position:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTickPosition", position]);
	};

	public function TickInterval():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TickInterval"]);
	};

	public function TickPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TickPosition"]);
	};

	public function ConnectDestroyQSlider(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQSlider", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQSlider() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQSlider"]);
	};

	public function DestroyQSlider() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSlider"]);
	};

	public function DestroyQSliderDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSliderDefault"]);
	};
}

function NewQSliderFromPointer(ptr:String):QSlider {
	final r = new QSlider();
	r.initFrom(ptr, "widgets.QSlider");
	return r;
}

function NewQSlider(parent:QWidget_ITF):QSlider {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSlider", "", parent]);
}

function NewQSlider2(orientation:Int, parent:QWidget_ITF):QSlider {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSlider2", "", orientation, parent]);
}

interface QSpacerItem_ITF extends QLayoutItem_ITF {
	public function QSpacerItem_PTR():QSpacerItem;
}

class QSpacerItem extends QLayoutItem implements QSpacerItem_ITF {
	public function new() {
		super();
	}

	public function QSpacerItem_PTR():QSpacerItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QSpacerItem_PTR"]);
	};

	public function ChangeSize(w:Int, h:Int, hPolicy:Int, vPolicy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChangeSize", w, h, hPolicy, vPolicy]);
	};

	public override function ConnectExpandingDirections(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectExpandingDirections",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectExpandingDirections() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExpandingDirections"]);
	};

	public override function ExpandingDirections():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExpandingDirections"]);
	};

	public function ExpandingDirectionsDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExpandingDirectionsDefault"]);
	};

	public override function ConnectGeometry(f:() -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectGeometry", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGeometry"]);
	};

	public override function Geometry():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Geometry"]);
	};

	public function GeometryDefault():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GeometryDefault"]);
	};

	public override function ConnectIsEmpty(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsEmpty", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIsEmpty() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsEmpty"]);
	};

	public override function IsEmpty():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEmpty"]);
	};

	public function IsEmptyDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEmptyDefault"]);
	};

	public override function ConnectMaximumSize(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMaximumSize", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMaximumSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMaximumSize"]);
	};

	public override function MaximumSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSize"]);
	};

	public function MaximumSizeDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSizeDefault"]);
	};

	public override function ConnectMinimumSize(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMinimumSize", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMinimumSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMinimumSize"]);
	};

	public override function MinimumSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSize"]);
	};

	public function MinimumSizeDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSizeDefault"]);
	};

	public override function ConnectSetGeometry(f:(r:QRect) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetGeometry", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetGeometry"]);
	};

	public override function SetGeometry(r:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometry", r]);
	};

	public function SetGeometryDefault(r:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometryDefault", r]);
	};

	public override function ConnectSizeHint(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public function SizeHintDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault"]);
	};

	public function SizePolicy():QSizePolicy {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizePolicy"]);
	};

	public function ConnectDestroyQSpacerItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQSpacerItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQSpacerItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQSpacerItem"]);
	};

	public function DestroyQSpacerItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSpacerItem"]);
	};

	public function DestroyQSpacerItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSpacerItemDefault"]);
	};
}

function NewQSpacerItemFromPointer(ptr:String):QSpacerItem {
	final r = new QSpacerItem();
	r.initFrom(ptr, "widgets.QSpacerItem");
	return r;
}

function NewQSpacerItem(w:Int, h:Int, hPolicy:Int, vPolicy:Int):QSpacerItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSpacerItem", "", w, h, hPolicy, vPolicy]);
}

interface QSpinBox_ITF extends QAbstractSpinBox_ITF {
	public function QSpinBox_PTR():QSpinBox;
}

class QSpinBox extends QAbstractSpinBox implements QSpinBox_ITF {
	public function new() {
		super();
	}

	public function QSpinBox_PTR():QSpinBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QSpinBox_PTR"]);
	};

	public function CleanText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CleanText"]);
	};

	public function DisplayIntegerBase():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DisplayIntegerBase"]);
	};

	public function Maximum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Maximum"]);
	};

	public function Minimum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Minimum"]);
	};

	public function Prefix():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Prefix"]);
	};

	public function SetDisplayIntegerBase(base:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDisplayIntegerBase", base]);
	};

	public function SetMaximum(max:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximum", max]);
	};

	public function SetMinimum(mi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimum", mi]);
	};

	public function SetPrefix(prefix:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPrefix", prefix]);
	};

	public function SetRange(minimum:Int, maximum:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRange", minimum, maximum]);
	};

	public function SetSingleStep(val:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSingleStep", val]);
	};

	public function SetStepType(stepType:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStepType", stepType]);
	};

	public function SetSuffix(suffix:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSuffix", suffix]);
	};

	public function ConnectSetValue(f:(val:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetValue", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetValue() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetValue"]);
	};

	public function SetValue(val:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValue", val]);
	};

	public function SetValueDefault(val:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetValueDefault", val]);
	};

	public function SingleStep():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SingleStep"]);
	};

	public function StepType():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StepType"]);
	};

	public function Suffix():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Suffix"]);
	};

	public function ConnectTextFromValue(f:(value:Int) -> String) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTextFromValue", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTextFromValue() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTextFromValue"]);
	};

	public function TextFromValue(value:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextFromValue", value]);
	};

	public function TextFromValueDefault(value:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextFromValueDefault", value]);
	};

	public function Value():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Value"]);
	};

	public function ConnectValueChanged(f:(i:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValueChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValueChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValueChanged"]);
	};

	public function ValueChanged(i:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ValueChanged", i]);
	};

	public function ConnectValueChanged2(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValueChanged2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValueChanged2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValueChanged2"]);
	};

	public function ValueChanged2(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ValueChanged2", text]);
	};

	public function ConnectValueFromText(f:(text:String) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValueFromText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValueFromText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValueFromText"]);
	};

	public function ValueFromText(text:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValueFromText", text]);
	};

	public function ValueFromTextDefault(text:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValueFromTextDefault", text]);
	};

	public function ConnectDestroyQSpinBox(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQSpinBox", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQSpinBox() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQSpinBox"]);
	};

	public function DestroyQSpinBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSpinBox"]);
	};

	public function DestroyQSpinBoxDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSpinBoxDefault"]);
	};
}

function NewQSpinBoxFromPointer(ptr:String):QSpinBox {
	final r = new QSpinBox();
	r.initFrom(ptr, "widgets.QSpinBox");
	return r;
}

function NewQSpinBox(parent:QWidget_ITF):QSpinBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSpinBox", "", parent]);
}

interface QSplashScreen_ITF extends QWidget_ITF {
	public function QSplashScreen_PTR():QSplashScreen;
}

class QSplashScreen extends QWidget implements QSplashScreen_ITF {
	public function new() {
		super();
	}

	public function QSplashScreen_PTR():QSplashScreen {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QSplashScreen_PTR"]);
	};

	public function ConnectClearMessage(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClearMessage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClearMessage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClearMessage"]);
	};

	public function ClearMessage() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMessage"]);
	};

	public function ClearMessageDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMessageDefault"]);
	};

	public function ConnectDrawContents(f:(painter:QPainter) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawContents", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawContents() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawContents"]);
	};

	public function DrawContents(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawContents", painter]);
	};

	public function DrawContentsDefault(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawContentsDefault", painter]);
	};

	public function Finish(mainWi:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Finish", mainWi]);
	};

	public function Message():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Message"]);
	};

	public function ConnectMessageChanged(f:(message:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMessageChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMessageChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMessageChanged"]);
	};

	public function MessageChanged(message:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MessageChanged", message]);
	};

	public function Pixmap():QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pixmap"]);
	};

	public override function Repaint() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Repaint"]);
	};

	public function SetPixmap(pixmap:QPixmap_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPixmap", pixmap]);
	};

	public function ConnectShowMessage(f:(message:String, alignment:Int, color:QColor) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowMessage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowMessage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowMessage"]);
	};

	public function ShowMessage(message:String, alignment:Int, color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMessage", message, alignment, color]);
	};

	public function ShowMessageDefault(message:String, alignment:Int, color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMessageDefault", message, alignment, color]);
	};

	public function ConnectDestroyQSplashScreen(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQSplashScreen",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQSplashScreen() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQSplashScreen"]);
	};

	public function DestroyQSplashScreen() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSplashScreen"]);
	};

	public function DestroyQSplashScreenDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSplashScreenDefault"]);
	};
}

function NewQSplashScreenFromPointer(ptr:String):QSplashScreen {
	final r = new QSplashScreen();
	r.initFrom(ptr, "widgets.QSplashScreen");
	return r;
}

function NewQSplashScreen(pixmap:QPixmap_ITF, ff:Int):QSplashScreen {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSplashScreen", "", pixmap, ff]);
}

function NewQSplashScreen2(parent:QWidget_ITF, pixmap:QPixmap_ITF, ff:Int):QSplashScreen {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSplashScreen2", "", parent, pixmap, ff]);
}

interface QSplitter_ITF extends QFrame_ITF {
	public function QSplitter_PTR():QSplitter;
}

class QSplitter extends QFrame implements QSplitter_ITF {
	public function new() {
		super();
	}

	public function QSplitter_PTR():QSplitter {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QSplitter_PTR"]);
	};

	public function AddWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddWidget", widget]);
	};

	public function ChildrenCollapsible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildrenCollapsible"]);
	};

	public function ClosestLegalPosition(pos:Int, index:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ClosestLegalPosition", pos, index]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function ConnectCreateHandle(f:() -> QSplitterHandle) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCreateHandle", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCreateHandle() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreateHandle"]);
	};

	public function CreateHandle():QSplitterHandle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateHandle"]);
	};

	public function CreateHandleDefault():QSplitterHandle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateHandleDefault"]);
	};

	public function GetRange(index:Int, mi:Int, max:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GetRange", index, mi, max]);
	};

	public function Handle(index:Int):QSplitterHandle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Handle", index]);
	};

	public function HandleWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HandleWidth"]);
	};

	public function IndexOf(widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOf", widget]);
	};

	public function InsertWidget(index:Int, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertWidget", index, widget]);
	};

	public function IsCollapsible(index:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsCollapsible", index]);
	};

	public function MoveSplitter(pos:Int, index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveSplitter", pos, index]);
	};

	public function OpaqueResize():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OpaqueResize"]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function Refresh() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Refresh"]);
	};

	public function ReplaceWidget(index:Int, widget:QWidget_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ReplaceWidget", index, widget]);
	};

	public function RestoreState(state:QByteArray_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RestoreState", state]);
	};

	public function SaveState():QByteArray {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SaveState"]);
	};

	public function SetChildrenCollapsible(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetChildrenCollapsible", vbo]);
	};

	public function SetCollapsible(index:Int, collapse:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCollapsible", index, collapse]);
	};

	public function SetHandleWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHandleWidth", vi]);
	};

	public function SetOpaqueResize(opaque:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpaqueResize", opaque]);
	};

	public function SetOrientation(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientation", vqt]);
	};

	public function SetRubberBand(pos:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRubberBand", pos]);
	};

	public function SetSizes(list:Array<Int>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizes", list]);
	};

	public function SetStretchFactor(index:Int, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStretchFactor", index, stretch]);
	};

	public function Sizes():Array<Int> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Sizes"]);
	};

	public function ConnectSplitterMoved(f:(pos:Int, index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSplitterMoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSplitterMoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSplitterMoved"]);
	};

	public function SplitterMoved(pos:Int, index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SplitterMoved", pos, index]);
	};

	public function Widget(index:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget", index]);
	};

	public function ConnectDestroyQSplitter(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQSplitter", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQSplitter() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQSplitter"]);
	};

	public function DestroyQSplitter() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSplitter"]);
	};

	public function DestroyQSplitterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSplitterDefault"]);
	};
}

function NewQSplitterFromPointer(ptr:String):QSplitter {
	final r = new QSplitter();
	r.initFrom(ptr, "widgets.QSplitter");
	return r;
}

function NewQSplitter(parent:QWidget_ITF):QSplitter {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSplitter", "", parent]);
}

function NewQSplitter2(orientation:Int, parent:QWidget_ITF):QSplitter {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSplitter2", "", orientation, parent]);
}

interface QSplitterHandle_ITF extends QWidget_ITF {
	public function QSplitterHandle_PTR():QSplitterHandle;
}

class QSplitterHandle extends QWidget implements QSplitterHandle_ITF {
	public function new() {
		super();
	}

	public function QSplitterHandle_PTR():QSplitterHandle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QSplitterHandle_PTR"]);
	};

	public function ClosestLegalPosition(pos:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ClosestLegalPosition", pos]);
	};

	public function MoveSplitter(pos:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveSplitter", pos]);
	};

	public function OpaqueResize():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OpaqueResize"]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function SetOrientation(orientation:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientation", orientation]);
	};

	public function Splitter():QSplitter {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Splitter"]);
	};

	public function ConnectDestroyQSplitterHandle(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQSplitterHandle",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQSplitterHandle() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQSplitterHandle"]);
	};

	public function DestroyQSplitterHandle() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSplitterHandle"]);
	};

	public function DestroyQSplitterHandleDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSplitterHandleDefault"]);
	};
}

function NewQSplitterHandleFromPointer(ptr:String):QSplitterHandle {
	final r = new QSplitterHandle();
	r.initFrom(ptr, "widgets.QSplitterHandle");
	return r;
}

function NewQSplitterHandle(orientation:Int, parent:QSplitter_ITF):QSplitterHandle {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSplitterHandle", "", orientation, parent]);
}

interface QStackedLayout_ITF extends QLayout_ITF {
	public function QStackedLayout_PTR():QStackedLayout;
}

class QStackedLayout extends QLayout implements QStackedLayout_ITF {
	public function new() {
		super();
	}

	public function QStackedLayout_PTR():QStackedLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStackedLayout_PTR"]);
	};

	public override function ConnectAddItem(f:(item:QLayoutItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAddItem", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectAddItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAddItem"]);
	};

	public override function AddItem(item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItem", item]);
	};

	public function AddItemDefault(item:QLayoutItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddItemDefault", item]);
	};

	public function AddWidget_QStackedLayout(widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddWidget", widget]);
	};

	public override function ConnectCount(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCount", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCount() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCount"]);
	};

	public override function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function CountDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CountDefault"]);
	};

	public function ConnectCurrentChanged(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public function CurrentChanged(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", index]);
	};

	public function CurrentIndex():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndex"]);
	};

	public function CurrentWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentWidget"]);
	};

	public function InsertWidget(index:Int, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertWidget", index, widget]);
	};

	public override function ConnectItemAt(f:(index:Int) -> QLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectItemAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemAt"]);
	};

	public override function ItemAt(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", index]);
	};

	public function ItemAtDefault(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAtDefault", index]);
	};

	public function ConnectSetCurrentIndex(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentIndex"]);
	};

	public function SetCurrentIndex(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndex", index]);
	};

	public function SetCurrentIndexDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndexDefault", index]);
	};

	public function ConnectSetCurrentWidget(f:(widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentWidget"]);
	};

	public function SetCurrentWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentWidget", widget]);
	};

	public function SetCurrentWidgetDefault(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentWidgetDefault", widget]);
	};

	public function SetStackingMode(stackingMode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStackingMode", stackingMode]);
	};

	public override function ConnectSizeHint(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public override function SizeHintDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault"]);
	};

	public function StackingMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StackingMode"]);
	};

	public override function ConnectTakeAt(f:(index:Int) -> QLayoutItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTakeAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectTakeAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTakeAt"]);
	};

	public override function TakeAt(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeAt", index]);
	};

	public function TakeAtDefault(index:Int):QLayoutItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeAtDefault", index]);
	};

	public function Widget_QObject(index:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget", index]);
	};

	public function ConnectWidgetRemoved(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWidgetRemoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWidgetRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWidgetRemoved"]);
	};

	public function WidgetRemoved(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WidgetRemoved", index]);
	};

	public function ConnectDestroyQStackedLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQStackedLayout",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQStackedLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQStackedLayout"]);
	};

	public function DestroyQStackedLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStackedLayout"]);
	};

	public function DestroyQStackedLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStackedLayoutDefault"]);
	};
}

function NewQStackedLayoutFromPointer(ptr:String):QStackedLayout {
	final r = new QStackedLayout();
	r.initFrom(ptr, "widgets.QStackedLayout");
	return r;
}

function NewQStackedLayout():QStackedLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStackedLayout", ""]);
}

function NewQStackedLayout2(parent:QWidget_ITF):QStackedLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStackedLayout2", "", parent]);
}

function NewQStackedLayout3(parentLayout:QLayout_ITF):QStackedLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStackedLayout3", "", parentLayout]);
}

interface QStackedWidget_ITF extends QFrame_ITF {
	public function QStackedWidget_PTR():QStackedWidget;
}

class QStackedWidget extends QFrame implements QStackedWidget_ITF {
	public function new() {
		super();
	}

	public function QStackedWidget_PTR():QStackedWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStackedWidget_PTR"]);
	};

	public function AddWidget(widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddWidget", widget]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function ConnectCurrentChanged(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public function CurrentChanged(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", index]);
	};

	public function CurrentIndex():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndex"]);
	};

	public function CurrentWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentWidget"]);
	};

	public function IndexOf(widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOf", widget]);
	};

	public function InsertWidget(index:Int, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertWidget", index, widget]);
	};

	public function RemoveWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveWidget", widget]);
	};

	public function ConnectSetCurrentIndex(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentIndex"]);
	};

	public function SetCurrentIndex(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndex", index]);
	};

	public function SetCurrentIndexDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndexDefault", index]);
	};

	public function ConnectSetCurrentWidget(f:(widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentWidget"]);
	};

	public function SetCurrentWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentWidget", widget]);
	};

	public function SetCurrentWidgetDefault(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentWidgetDefault", widget]);
	};

	public function Widget(index:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget", index]);
	};

	public function ConnectWidgetRemoved(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWidgetRemoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWidgetRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWidgetRemoved"]);
	};

	public function WidgetRemoved(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WidgetRemoved", index]);
	};

	public function ConnectDestroyQStackedWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQStackedWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQStackedWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQStackedWidget"]);
	};

	public function DestroyQStackedWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStackedWidget"]);
	};

	public function DestroyQStackedWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStackedWidgetDefault"]);
	};
}

function NewQStackedWidgetFromPointer(ptr:String):QStackedWidget {
	final r = new QStackedWidget();
	r.initFrom(ptr, "widgets.QStackedWidget");
	return r;
}

function NewQStackedWidget(parent:QWidget_ITF):QStackedWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStackedWidget", "", parent]);
}

interface QStandardItemEditorCreator_ITF extends QItemEditorCreatorBase_ITF {
	public function QStandardItemEditorCreator_PTR():QStandardItemEditorCreator;
}

class QStandardItemEditorCreator extends QItemEditorCreatorBase implements QStandardItemEditorCreator_ITF {
	public function new() {
		super();
	}

	public function QStandardItemEditorCreator_PTR():QStandardItemEditorCreator {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStandardItemEditorCreator_PTR"]);
	};

	public function DestroyQStandardItemEditorCreator() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStandardItemEditorCreator"]);
	};
}

interface QStatusBar_ITF extends QWidget_ITF {
	public function QStatusBar_PTR():QStatusBar;
}

class QStatusBar extends QWidget implements QStatusBar_ITF {
	public function new() {
		super();
	}

	public function QStatusBar_PTR():QStatusBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStatusBar_PTR"]);
	};

	public function AddPermanentWidget(widget:QWidget_ITF, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddPermanentWidget", widget, stretch]);
	};

	public function AddWidget(widget:QWidget_ITF, stretch:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddWidget", widget, stretch]);
	};

	public function ConnectClearMessage(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClearMessage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClearMessage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClearMessage"]);
	};

	public function ClearMessage() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMessage"]);
	};

	public function ClearMessageDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMessageDefault"]);
	};

	public function CurrentMessage():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentMessage"]);
	};

	public function HideOrShow() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideOrShow"]);
	};

	public function InsertPermanentWidget(index:Int, widget:QWidget_ITF, stretch:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertPermanentWidget", index, widget, stretch]);
	};

	public function InsertWidget(index:Int, widget:QWidget_ITF, stretch:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertWidget", index, widget, stretch]);
	};

	public function IsSizeGripEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSizeGripEnabled"]);
	};

	public function ConnectMessageChanged(f:(message:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMessageChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMessageChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMessageChanged"]);
	};

	public function MessageChanged(message:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MessageChanged", message]);
	};

	public function Reformat() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Reformat"]);
	};

	public function RemoveWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveWidget", widget]);
	};

	public function SetSizeGripEnabled(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizeGripEnabled", vbo]);
	};

	public function ConnectShowMessage(f:(message:String, timeout:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowMessage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowMessage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowMessage"]);
	};

	public function ShowMessage(message:String, timeout:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMessage", message, timeout]);
	};

	public function ShowMessageDefault(message:String, timeout:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMessageDefault", message, timeout]);
	};

	public function ConnectDestroyQStatusBar(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQStatusBar", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQStatusBar() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQStatusBar"]);
	};

	public function DestroyQStatusBar() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStatusBar"]);
	};

	public function DestroyQStatusBarDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStatusBarDefault"]);
	};
}

function NewQStatusBarFromPointer(ptr:String):QStatusBar {
	final r = new QStatusBar();
	r.initFrom(ptr, "widgets.QStatusBar");
	return r;
}

function NewQStatusBar(parent:QWidget_ITF):QStatusBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStatusBar", "", parent]);
}

interface QStyle_ITF extends QObject_ITF {
	public function QStyle_PTR():QStyle;
}

class QStyle extends QObject implements QStyle_ITF {
	public function new() {
		super();
	}

	public function QStyle_PTR():QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyle_PTR"]);
	};

	public function AlignedRect(direction:Int, alignment:Int, size:QSize_ITF, rectangle:QRect_ITF):QRect {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"AlignedRect",
			direction,
			alignment,
			size,
			rectangle
		]);
	};

	public function CombinedLayoutSpacing(controls1:Int, controls2:Int, orientation:Int, option:QStyleOption_ITF, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"CombinedLayoutSpacing",
			controls1,
			controls2,
			orientation,
			option,
			widget
		]);
	};

	public function ConnectDrawComplexControl(f:(control:Int, option:QStyleOptionComplex, painter:QPainter, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDrawComplexControl",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDrawComplexControl() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawComplexControl"]);
	};

	public function DrawComplexControl(control:Int, option:QStyleOptionComplex_ITF, painter:QPainter_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"DrawComplexControl",
			control,
			option,
			painter,
			widget
		]);
	};

	public function ConnectDrawControl(f:(element:Int, option:QStyleOption, painter:QPainter, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawControl", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawControl() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawControl"]);
	};

	public function DrawControl(element:Int, option:QStyleOption_ITF, painter:QPainter_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawControl", element, option, painter, widget]);
	};

	public function ConnectDrawItemPixmap(f:(painter:QPainter, rectangle:QRect, alignment:Int, pixmap:QPixmap) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawItemPixmap", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawItemPixmap() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawItemPixmap"]);
	};

	public function DrawItemPixmap(painter:QPainter_ITF, rectangle:QRect_ITF, alignment:Int, pixmap:QPixmap_ITF) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"DrawItemPixmap",
			painter,
			rectangle,
			alignment,
			pixmap
		]);
	};

	public function DrawItemPixmapDefault(painter:QPainter_ITF, rectangle:QRect_ITF, alignment:Int, pixmap:QPixmap_ITF) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"DrawItemPixmapDefault",
			painter,
			rectangle,
			alignment,
			pixmap
		]);
	};

	public function ConnectDrawItemText(f:(painter:QPainter, rectangle:QRect, alignment:Int, palette:QPalette, enabled:Bool, text:String,
		textRole:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawItemText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawItemText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawItemText"]);
	};

	public function DrawItemText(painter:QPainter_ITF, rectangle:QRect_ITF, alignment:Int, palette:QPalette_ITF, enabled:Bool, text:String, textRole:Int) {
		Internal.callLocalFunction([
			"", Pointer(), ___className, "DrawItemText", painter, rectangle, alignment, palette, enabled, text, textRole
		]);
	};

	public function DrawItemTextDefault(painter:QPainter_ITF, rectangle:QRect_ITF, alignment:Int, palette:QPalette_ITF, enabled:Bool, text:String,
			textRole:Int) {
		Internal.callLocalFunction([
			"", Pointer(), ___className, "DrawItemTextDefault", painter, rectangle, alignment, palette, enabled, text, textRole
		]);
	};

	public function ConnectDrawPrimitive(f:(element:Int, option:QStyleOption, painter:QPainter, widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawPrimitive", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawPrimitive() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawPrimitive"]);
	};

	public function DrawPrimitive(element:Int, option:QStyleOption_ITF, painter:QPainter_ITF, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawPrimitive", element, option, painter, widget]);
	};

	public function ConnectGeneratedIconPixmap(f:(iconMode:Int, pixmap:QPixmap, option:QStyleOption) -> QPixmap) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectGeneratedIconPixmap",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectGeneratedIconPixmap() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGeneratedIconPixmap"]);
	};

	public function GeneratedIconPixmap(iconMode:Int, pixmap:QPixmap_ITF, option:QStyleOption_ITF):QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GeneratedIconPixmap", iconMode, pixmap, option]);
	};

	public function ConnectHitTestComplexControl(f:(control:Int, option:QStyleOptionComplex, position:QPoint, widget:QWidget) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectHitTestComplexControl",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectHitTestComplexControl() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHitTestComplexControl"]);
	};

	public function HitTestComplexControl(control:Int, option:QStyleOptionComplex_ITF, position:QPoint_ITF, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"HitTestComplexControl",
			control,
			option,
			position,
			widget
		]);
	};

	public function ConnectItemPixmapRect(f:(rectangle:QRect, alignment:Int, pixmap:QPixmap) -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemPixmapRect", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemPixmapRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemPixmapRect"]);
	};

	public function ItemPixmapRect(rectangle:QRect_ITF, alignment:Int, pixmap:QPixmap_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemPixmapRect", rectangle, alignment, pixmap]);
	};

	public function ItemPixmapRectDefault(rectangle:QRect_ITF, alignment:Int, pixmap:QPixmap_ITF):QRect {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"ItemPixmapRectDefault",
			rectangle,
			alignment,
			pixmap
		]);
	};

	public function ConnectItemTextRect(f:(metrics:QFontMetrics, rectangle:QRect, alignment:Int, enabled:Bool, text:String) -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemTextRect", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemTextRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemTextRect"]);
	};

	public function ItemTextRect(metrics:QFontMetrics_ITF, rectangle:QRect_ITF, alignment:Int, enabled:Bool, text:String):QRect {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"ItemTextRect",
			metrics,
			rectangle,
			alignment,
			enabled,
			text
		]);
	};

	public function ItemTextRectDefault(metrics:QFontMetrics_ITF, rectangle:QRect_ITF, alignment:Int, enabled:Bool, text:String):QRect {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"ItemTextRectDefault",
			metrics,
			rectangle,
			alignment,
			enabled,
			text
		]);
	};

	public function ConnectLayoutSpacing(f:(control1:Int, control2:Int, orientation:Int, option:QStyleOption, widget:QWidget) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLayoutSpacing", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLayoutSpacing() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLayoutSpacing"]);
	};

	public function LayoutSpacing(control1:Int, control2:Int, orientation:Int, option:QStyleOption_ITF, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"LayoutSpacing",
			control1,
			control2,
			orientation,
			option,
			widget
		]);
	};

	public function ConnectPixelMetric(f:(metric:Int, option:QStyleOption, widget:QWidget) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPixelMetric", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPixelMetric() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPixelMetric"]);
	};

	public function PixelMetric(metric:Int, option:QStyleOption_ITF, widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PixelMetric", metric, option, widget]);
	};

	public function ConnectPolish(f:(widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPolish", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPolish() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPolish"]);
	};

	public function Polish(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Polish", widget]);
	};

	public function PolishDefault(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PolishDefault", widget]);
	};

	public function ConnectPolish2(f:(application:QApplication) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPolish2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPolish2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPolish2"]);
	};

	public function Polish2(application:QApplication_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Polish2", application]);
	};

	public function Polish2Default(application:QApplication_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Polish2Default", application]);
	};

	public function ConnectPolish3(f:(palette:QPalette) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPolish3", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPolish3() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPolish3"]);
	};

	public function Polish3(palette:QPalette_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Polish3", palette]);
	};

	public function Polish3Default(palette:QPalette_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Polish3Default", palette]);
	};

	public function Proxy():QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Proxy"]);
	};

	public function ConnectSizeFromContents(f:(ty:Int, option:QStyleOption, contentsSize:QSize, widget:QWidget) -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeFromContents", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSizeFromContents() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeFromContents"]);
	};

	public function SizeFromContents(ty:Int, option:QStyleOption_ITF, contentsSize:QSize_ITF, widget:QWidget_ITF):QSize {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SizeFromContents",
			ty,
			option,
			contentsSize,
			widget
		]);
	};

	public function SliderPositionFromValue(mi:Int, max:Int, logicalValue:Int, span:Int, upsideDown:Bool):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SliderPositionFromValue",
			mi,
			max,
			logicalValue,
			span,
			upsideDown
		]);
	};

	public function SliderValueFromPosition(mi:Int, max:Int, position:Int, span:Int, upsideDown:Bool):Int {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SliderValueFromPosition",
			mi,
			max,
			position,
			span,
			upsideDown
		]);
	};

	public function ConnectStandardIcon(f:(standardIcon:Int, option:QStyleOption, widget:QWidget) -> QIcon) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStandardIcon", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStandardIcon() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStandardIcon"]);
	};

	public function StandardIcon(standardIcon:Int, option:QStyleOption_ITF, widget:QWidget_ITF):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardIcon", standardIcon, option, widget]);
	};

	public function ConnectStandardPalette(f:() -> QPalette) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStandardPalette", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStandardPalette() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStandardPalette"]);
	};

	public function StandardPalette():QPalette {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardPalette"]);
	};

	public function StandardPaletteDefault():QPalette {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardPaletteDefault"]);
	};

	public function ConnectStyleHint(f:(hint:Int, option:QStyleOption, widget:QWidget, returnData:QStyleHintReturn) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStyleHint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStyleHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStyleHint"]);
	};

	public function StyleHint(hint:Int, option:QStyleOption_ITF, widget:QWidget_ITF, returnData:QStyleHintReturn_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StyleHint", hint, option, widget, returnData]);
	};

	public function ConnectSubControlRect(f:(control:Int, option:QStyleOptionComplex, subControl:Int, widget:QWidget) -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSubControlRect", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSubControlRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSubControlRect"]);
	};

	public function SubControlRect(control:Int, option:QStyleOptionComplex_ITF, subControl:Int, widget:QWidget_ITF):QRect {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SubControlRect",
			control,
			option,
			subControl,
			widget
		]);
	};

	public function ConnectSubElementRect(f:(element:Int, option:QStyleOption, widget:QWidget) -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSubElementRect", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSubElementRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSubElementRect"]);
	};

	public function SubElementRect(element:Int, option:QStyleOption_ITF, widget:QWidget_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubElementRect", element, option, widget]);
	};

	public function ConnectUnpolish(f:(widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUnpolish", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUnpolish() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUnpolish"]);
	};

	public function Unpolish(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Unpolish", widget]);
	};

	public function UnpolishDefault(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnpolishDefault", widget]);
	};

	public function ConnectUnpolish2(f:(application:QApplication) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUnpolish2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUnpolish2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUnpolish2"]);
	};

	public function Unpolish2(application:QApplication_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Unpolish2", application]);
	};

	public function Unpolish2Default(application:QApplication_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Unpolish2Default", application]);
	};

	public function VisualAlignment(direction:Int, alignment:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualAlignment", direction, alignment]);
	};

	public function VisualPos(direction:Int, boundingRectangle:QRect_ITF, logicalPosition:QPoint_ITF):QPoint {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"VisualPos",
			direction,
			boundingRectangle,
			logicalPosition
		]);
	};

	public function VisualRect(direction:Int, boundingRectangle:QRect_ITF, logicalRectangle:QRect_ITF):QRect {
		return Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"VisualRect",
			direction,
			boundingRectangle,
			logicalRectangle
		]);
	};

	public function ConnectDestroyQStyle(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQStyle", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQStyle() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQStyle"]);
	};

	public function DestroyQStyle() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyle"]);
	};

	public function DestroyQStyleDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleDefault"]);
	};

	public function ConnectStandardPixmap(f:(standardIcon:Int, option:QStyleOption, widget:QWidget) -> QPixmap) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectStandardPixmap", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectStandardPixmap() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectStandardPixmap"]);
	};

	public function StandardPixmap(standardIcon:Int, option:QStyleOption_ITF, widget:QWidget_ITF):QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StandardPixmap", standardIcon, option, widget]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQStyleFromPointer(ptr:String):QStyle {
	final r = new QStyle();
	r.initFrom(ptr, "widgets.QStyle");
	return r;
}

function NewQStyle2():QStyle {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyle2", ""]);
}

function QStyle_AlignedRect(direction:Int, alignment:Int, size:QSize_ITF, rectangle:QRect_ITF):QRect {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QStyle_AlignedRect", "", direction, alignment, size, rectangle]);
}

function QStyle_SliderPositionFromValue(mi:Int, max:Int, logicalValue:Int, span:Int, upsideDown:Bool):Int {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QStyle_SliderPositionFromValue",
		"",
		mi,
		max,
		logicalValue,
		span,
		upsideDown
	]);
}

function QStyle_SliderValueFromPosition(mi:Int, max:Int, position:Int, span:Int, upsideDown:Bool):Int {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QStyle_SliderValueFromPosition",
		"",
		mi,
		max,
		position,
		span,
		upsideDown
	]);
}

function QStyle_VisualAlignment(direction:Int, alignment:Int):Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QStyle_VisualAlignment", "", direction, alignment]);
}

function QStyle_VisualPos(direction:Int, boundingRectangle:QRect_ITF, logicalPosition:QPoint_ITF):QPoint {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QStyle_VisualPos",
		"",
		direction,
		boundingRectangle,
		logicalPosition
	]);
}

function QStyle_VisualRect(direction:Int, boundingRectangle:QRect_ITF, logicalRectangle:QRect_ITF):QRect {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QStyle_VisualRect",
		"",
		direction,
		boundingRectangle,
		logicalRectangle
	]);
}

interface QStyleFactory_ITF {
	public function QStyleFactory_PTR():QStyleFactory;
}

class QStyleFactory extends Internal implements QStyleFactory_ITF {
	public function new() {
		super();
	}

	public function QStyleFactory_PTR():QStyleFactory {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleFactory_PTR"]);
	};

	public function DestroyQStyleFactory() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleFactory"]);
	};

	public function Create(key:String):QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Create", key]);
	};

	public function Keys():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Keys"]);
	};
}

function NewQStyleFactoryFromPointer(ptr:String):QStyleFactory {
	final r = new QStyleFactory();
	r.initFrom(ptr, "widgets.QStyleFactory");
	return r;
}

function QStyleFactory_Create(key:String):QStyle {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QStyleFactory_Create", "", key]);
}

function QStyleFactory_Keys():Array<String> {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QStyleFactory_Keys", ""]);
}

interface QStyleHintReturn_ITF {
	public function QStyleHintReturn_PTR():QStyleHintReturn;
}

class QStyleHintReturn extends Internal implements QStyleHintReturn_ITF {
	public function new() {
		super();
	}

	public function QStyleHintReturn_PTR():QStyleHintReturn {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleHintReturn_PTR"]);
	};

	public function DestroyQStyleHintReturn() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleHintReturn"]);
	};

	public function Version():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Version"]);
	};

	public function SetVersion(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVersion", vi]);
	};

	public function Type():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Type"]);
	};

	public function SetType(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetType", vi]);
	};
}

function NewQStyleHintReturnFromPointer(ptr:String):QStyleHintReturn {
	final r = new QStyleHintReturn();
	r.initFrom(ptr, "widgets.QStyleHintReturn");
	return r;
}

function NewQStyleHintReturn(version:Int, ty:Int):QStyleHintReturn {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleHintReturn", "", version, ty]);
}

interface QStyleHintReturnMask_ITF extends QStyleHintReturn_ITF {
	public function QStyleHintReturnMask_PTR():QStyleHintReturnMask;
}

class QStyleHintReturnMask extends QStyleHintReturn implements QStyleHintReturnMask_ITF {
	public function new() {
		super();
	}

	public function QStyleHintReturnMask_PTR():QStyleHintReturnMask {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleHintReturnMask_PTR"]);
	};

	public function DestroyQStyleHintReturnMask() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleHintReturnMask"]);
	};

	public function Region():QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Region"]);
	};

	public function SetRegion(vqr:QRegion_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRegion", vqr]);
	};
}

function NewQStyleHintReturnMaskFromPointer(ptr:String):QStyleHintReturnMask {
	final r = new QStyleHintReturnMask();
	r.initFrom(ptr, "widgets.QStyleHintReturnMask");
	return r;
}

function NewQStyleHintReturnMask():QStyleHintReturnMask {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleHintReturnMask", ""]);
}

interface QStyleHintReturnVariant_ITF extends QStyleHintReturn_ITF {
	public function QStyleHintReturnVariant_PTR():QStyleHintReturnVariant;
}

class QStyleHintReturnVariant extends QStyleHintReturn implements QStyleHintReturnVariant_ITF {
	public function new() {
		super();
	}

	public function QStyleHintReturnVariant_PTR():QStyleHintReturnVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleHintReturnVariant_PTR"]);
	};

	public function DestroyQStyleHintReturnVariant() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleHintReturnVariant"]);
	};

	public function Variant():QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Variant"]);
	};

	public function SetVariant(vqv:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVariant", vqv]);
	};
}

function NewQStyleHintReturnVariantFromPointer(ptr:String):QStyleHintReturnVariant {
	final r = new QStyleHintReturnVariant();
	r.initFrom(ptr, "widgets.QStyleHintReturnVariant");
	return r;
}

function NewQStyleHintReturnVariant():QStyleHintReturnVariant {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleHintReturnVariant", ""]);
}

interface QStyleOption_ITF {
	public function QStyleOption_PTR():QStyleOption;
}

class QStyleOption extends Internal implements QStyleOption_ITF {
	public function new() {
		super();
	}

	public function QStyleOption_PTR():QStyleOption {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOption_PTR"]);
	};

	public function InitFrom(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitFrom", widget]);
	};

	public function DestroyQStyleOption() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOption"]);
	};

	public function Version():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Version"]);
	};

	public function SetVersion(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVersion", vi]);
	};

	public function Type():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Type"]);
	};

	public function SetType(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetType", vi]);
	};

	public function State():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "State"]);
	};

	public function SetState(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetState", vqs]);
	};

	public function Direction():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Direction"]);
	};

	public function SetDirection(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDirection", vqt]);
	};

	public function Rect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Rect"]);
	};

	public function SetRect(vqr:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRect", vqr]);
	};

	public function FontMetrics():QFontMetrics {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FontMetrics"]);
	};

	public function SetFontMetrics(vqf:QFontMetrics_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontMetrics", vqf]);
	};

	public function Palette():QPalette {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Palette"]);
	};

	public function SetPalette(vqp:QPalette_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPalette", vqp]);
	};

	public function StyleObject():QObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StyleObject"]);
	};

	public function SetStyleObject(vqo:QObject_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStyleObject", vqo]);
	};
}

function NewQStyleOptionFromPointer(ptr:String):QStyleOption {
	final r = new QStyleOption();
	r.initFrom(ptr, "widgets.QStyleOption");
	return r;
}

function NewQStyleOption(version:Int, ty:Int):QStyleOption {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOption", "", version, ty]);
}

function NewQStyleOption2(other:QStyleOption_ITF):QStyleOption {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOption2", "", other]);
}

interface QStyleOptionButton_ITF extends QStyleOption_ITF {
	public function QStyleOptionButton_PTR():QStyleOptionButton;
}

class QStyleOptionButton extends QStyleOption implements QStyleOptionButton_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionButton_PTR():QStyleOptionButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionButton_PTR"]);
	};

	public function DestroyQStyleOptionButton() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionButton"]);
	};

	public function Features():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Features"]);
	};

	public function SetFeatures(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFeatures", vqs]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function SetIcon(vqi:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", vqi]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function SetIconSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", vqs]);
	};
}

function NewQStyleOptionButtonFromPointer(ptr:String):QStyleOptionButton {
	final r = new QStyleOptionButton();
	r.initFrom(ptr, "widgets.QStyleOptionButton");
	return r;
}

function NewQStyleOptionButton():QStyleOptionButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionButton", ""]);
}

function NewQStyleOptionButton2(other:QStyleOptionButton_ITF):QStyleOptionButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionButton2", "", other]);
}

interface QStyleOptionComboBox_ITF extends QStyleOptionComplex_ITF {
	public function QStyleOptionComboBox_PTR():QStyleOptionComboBox;
}

class QStyleOptionComboBox extends QStyleOptionComplex implements QStyleOptionComboBox_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionComboBox_PTR():QStyleOptionComboBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionComboBox_PTR"]);
	};

	public function DestroyQStyleOptionComboBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionComboBox"]);
	};

	public function Editable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Editable"]);
	};

	public function SetEditable(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEditable", vbo]);
	};

	public function PopupRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PopupRect"]);
	};

	public function SetPopupRect(vqr:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPopupRect", vqr]);
	};

	public function Frame():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Frame"]);
	};

	public function SetFrame(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFrame", vbo]);
	};

	public function CurrentText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentText"]);
	};

	public function SetCurrentText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentText", vqs]);
	};

	public function CurrentIcon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIcon"]);
	};

	public function SetCurrentIcon(vqi:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIcon", vqi]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function SetIconSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", vqs]);
	};
}

function NewQStyleOptionComboBoxFromPointer(ptr:String):QStyleOptionComboBox {
	final r = new QStyleOptionComboBox();
	r.initFrom(ptr, "widgets.QStyleOptionComboBox");
	return r;
}

function NewQStyleOptionComboBox():QStyleOptionComboBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionComboBox", ""]);
}

function NewQStyleOptionComboBox2(other:QStyleOptionComboBox_ITF):QStyleOptionComboBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionComboBox2", "", other]);
}

interface QStyleOptionComplex_ITF extends QStyleOption_ITF {
	public function QStyleOptionComplex_PTR():QStyleOptionComplex;
}

class QStyleOptionComplex extends QStyleOption implements QStyleOptionComplex_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionComplex_PTR():QStyleOptionComplex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionComplex_PTR"]);
	};

	public function DestroyQStyleOptionComplex() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionComplex"]);
	};

	public function SubControls():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubControls"]);
	};

	public function SetSubControls(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSubControls", vqs]);
	};

	public function ActiveSubControls():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActiveSubControls"]);
	};

	public function SetActiveSubControls(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActiveSubControls", vqs]);
	};
}

function NewQStyleOptionComplexFromPointer(ptr:String):QStyleOptionComplex {
	final r = new QStyleOptionComplex();
	r.initFrom(ptr, "widgets.QStyleOptionComplex");
	return r;
}

function NewQStyleOptionComplex(version:Int, ty:Int):QStyleOptionComplex {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionComplex", "", version, ty]);
}

function NewQStyleOptionComplex2(other:QStyleOptionComplex_ITF):QStyleOptionComplex {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionComplex2", "", other]);
}

interface QStyleOptionDockWidget_ITF extends QStyleOption_ITF {
	public function QStyleOptionDockWidget_PTR():QStyleOptionDockWidget;
}

class QStyleOptionDockWidget extends QStyleOption implements QStyleOptionDockWidget_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionDockWidget_PTR():QStyleOptionDockWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionDockWidget_PTR"]);
	};

	public function DestroyQStyleOptionDockWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionDockWidget"]);
	};

	public function Title():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Title"]);
	};

	public function SetTitle(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTitle", vqs]);
	};

	public function Closable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Closable"]);
	};

	public function SetClosable(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetClosable", vbo]);
	};

	public function Movable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Movable"]);
	};

	public function SetMovable(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMovable", vbo]);
	};

	public function Floatable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Floatable"]);
	};

	public function SetFloatable(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFloatable", vbo]);
	};
}

function NewQStyleOptionDockWidgetFromPointer(ptr:String):QStyleOptionDockWidget {
	final r = new QStyleOptionDockWidget();
	r.initFrom(ptr, "widgets.QStyleOptionDockWidget");
	return r;
}

function NewQStyleOptionDockWidget():QStyleOptionDockWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionDockWidget", ""]);
}

function NewQStyleOptionDockWidget2(other:QStyleOptionDockWidget_ITF):QStyleOptionDockWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionDockWidget2", "", other]);
}

interface QStyleOptionFocusRect_ITF extends QStyleOption_ITF {
	public function QStyleOptionFocusRect_PTR():QStyleOptionFocusRect;
}

class QStyleOptionFocusRect extends QStyleOption implements QStyleOptionFocusRect_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionFocusRect_PTR():QStyleOptionFocusRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionFocusRect_PTR"]);
	};

	public function DestroyQStyleOptionFocusRect() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionFocusRect"]);
	};

	public function BackgroundColor():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BackgroundColor"]);
	};

	public function SetBackgroundColor(vqc:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBackgroundColor", vqc]);
	};
}

function NewQStyleOptionFocusRectFromPointer(ptr:String):QStyleOptionFocusRect {
	final r = new QStyleOptionFocusRect();
	r.initFrom(ptr, "widgets.QStyleOptionFocusRect");
	return r;
}

function NewQStyleOptionFocusRect():QStyleOptionFocusRect {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionFocusRect", ""]);
}

function NewQStyleOptionFocusRect2(other:QStyleOptionFocusRect_ITF):QStyleOptionFocusRect {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionFocusRect2", "", other]);
}

interface QStyleOptionFrame_ITF extends QStyleOption_ITF {
	public function QStyleOptionFrame_PTR():QStyleOptionFrame;
}

class QStyleOptionFrame extends QStyleOption implements QStyleOptionFrame_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionFrame_PTR():QStyleOptionFrame {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionFrame_PTR"]);
	};

	public function DestroyQStyleOptionFrame() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionFrame"]);
	};

	public function LineWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LineWidth"]);
	};

	public function SetLineWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLineWidth", vi]);
	};

	public function MidLineWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MidLineWidth"]);
	};

	public function SetMidLineWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMidLineWidth", vi]);
	};

	public function Features():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Features"]);
	};

	public function SetFeatures(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFeatures", vqs]);
	};

	public function FrameShape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FrameShape"]);
	};

	public function SetFrameShape(vqf:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFrameShape", vqf]);
	};
}

function NewQStyleOptionFrameFromPointer(ptr:String):QStyleOptionFrame {
	final r = new QStyleOptionFrame();
	r.initFrom(ptr, "widgets.QStyleOptionFrame");
	return r;
}

function NewQStyleOptionFrame():QStyleOptionFrame {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionFrame", ""]);
}

function NewQStyleOptionFrame2(other:QStyleOptionFrame_ITF):QStyleOptionFrame {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionFrame2", "", other]);
}

interface QStyleOptionGraphicsItem_ITF extends QStyleOption_ITF {
	public function QStyleOptionGraphicsItem_PTR():QStyleOptionGraphicsItem;
}

class QStyleOptionGraphicsItem extends QStyleOption implements QStyleOptionGraphicsItem_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionGraphicsItem_PTR():QStyleOptionGraphicsItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionGraphicsItem_PTR"]);
	};

	public function DestroyQStyleOptionGraphicsItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionGraphicsItem"]);
	};

	public function LevelOfDetailFromTransform(worldTransform:QTransform_ITF):Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LevelOfDetailFromTransform", worldTransform]);
	};

	public function ExposedRect():QRectF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExposedRect"]);
	};

	public function SetExposedRect(vqr:QRectF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetExposedRect", vqr]);
	};
}

function NewQStyleOptionGraphicsItemFromPointer(ptr:String):QStyleOptionGraphicsItem {
	final r = new QStyleOptionGraphicsItem();
	r.initFrom(ptr, "widgets.QStyleOptionGraphicsItem");
	return r;
}

function NewQStyleOptionGraphicsItem():QStyleOptionGraphicsItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionGraphicsItem", ""]);
}

function NewQStyleOptionGraphicsItem2(other:QStyleOptionGraphicsItem_ITF):QStyleOptionGraphicsItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionGraphicsItem2", "", other]);
}

function QStyleOptionGraphicsItem_LevelOfDetailFromTransform(worldTransform:QTransform_ITF):Float {
	Widgets.initModule();
	return Internal.callLocalFunction([
		"",
		"",
		"widgets.QStyleOptionGraphicsItem_LevelOfDetailFromTransform",
		"",
		worldTransform
	]);
}

interface QStyleOptionGroupBox_ITF extends QStyleOptionComplex_ITF {
	public function QStyleOptionGroupBox_PTR():QStyleOptionGroupBox;
}

class QStyleOptionGroupBox extends QStyleOptionComplex implements QStyleOptionGroupBox_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionGroupBox_PTR():QStyleOptionGroupBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionGroupBox_PTR"]);
	};

	public function DestroyQStyleOptionGroupBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionGroupBox"]);
	};

	public function Features():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Features"]);
	};

	public function SetFeatures(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFeatures", vqs]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function TextAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextAlignment"]);
	};

	public function SetTextAlignment(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextAlignment", vqt]);
	};

	public function TextColor():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextColor"]);
	};

	public function SetTextColor(vqc:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextColor", vqc]);
	};

	public function LineWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LineWidth"]);
	};

	public function SetLineWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLineWidth", vi]);
	};

	public function MidLineWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MidLineWidth"]);
	};

	public function SetMidLineWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMidLineWidth", vi]);
	};
}

function NewQStyleOptionGroupBoxFromPointer(ptr:String):QStyleOptionGroupBox {
	final r = new QStyleOptionGroupBox();
	r.initFrom(ptr, "widgets.QStyleOptionGroupBox");
	return r;
}

function NewQStyleOptionGroupBox():QStyleOptionGroupBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionGroupBox", ""]);
}

function NewQStyleOptionGroupBox2(other:QStyleOptionGroupBox_ITF):QStyleOptionGroupBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionGroupBox2", "", other]);
}

interface QStyleOptionHeader_ITF extends QStyleOption_ITF {
	public function QStyleOptionHeader_PTR():QStyleOptionHeader;
}

class QStyleOptionHeader extends QStyleOption implements QStyleOptionHeader_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionHeader_PTR():QStyleOptionHeader {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionHeader_PTR"]);
	};

	public function DestroyQStyleOptionHeader() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionHeader"]);
	};

	public function Section():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Section"]);
	};

	public function SetSection(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSection", vi]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function TextAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextAlignment"]);
	};

	public function SetTextAlignment(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextAlignment", vqt]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function SetIcon(vqi:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", vqi]);
	};

	public function IconAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconAlignment"]);
	};

	public function SetIconAlignment(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconAlignment", vqt]);
	};

	public function Position():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Position"]);
	};

	public function SetPosition(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPosition", vqs]);
	};

	public function SelectedPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedPosition"]);
	};

	public function SetSelectedPosition(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectedPosition", vqs]);
	};

	public function SortIndicator():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SortIndicator"]);
	};

	public function SetSortIndicator(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSortIndicator", vqs]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function SetOrientation(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientation", vqt]);
	};
}

function NewQStyleOptionHeaderFromPointer(ptr:String):QStyleOptionHeader {
	final r = new QStyleOptionHeader();
	r.initFrom(ptr, "widgets.QStyleOptionHeader");
	return r;
}

function NewQStyleOptionHeader():QStyleOptionHeader {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionHeader", ""]);
}

function NewQStyleOptionHeader2(other:QStyleOptionHeader_ITF):QStyleOptionHeader {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionHeader2", "", other]);
}

interface QStyleOptionMenuItem_ITF extends QStyleOption_ITF {
	public function QStyleOptionMenuItem_PTR():QStyleOptionMenuItem;
}

class QStyleOptionMenuItem extends QStyleOption implements QStyleOptionMenuItem_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionMenuItem_PTR():QStyleOptionMenuItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionMenuItem_PTR"]);
	};

	public function DestroyQStyleOptionMenuItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionMenuItem"]);
	};

	public function MenuItemType():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MenuItemType"]);
	};

	public function SetMenuItemType(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMenuItemType", vqs]);
	};

	public function CheckType():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckType"]);
	};

	public function SetCheckType(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckType", vqs]);
	};

	public function Checked():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Checked"]);
	};

	public function SetChecked(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetChecked", vbo]);
	};

	public function MenuHasCheckableItems():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MenuHasCheckableItems"]);
	};

	public function SetMenuHasCheckableItems(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMenuHasCheckableItems", vbo]);
	};

	public function MenuRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MenuRect"]);
	};

	public function SetMenuRect(vqr:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMenuRect", vqr]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function SetIcon(vqi:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", vqi]);
	};

	public function MaxIconWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaxIconWidth"]);
	};

	public function SetMaxIconWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaxIconWidth", vi]);
	};

	public function TabWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabWidth"]);
	};

	public function SetTabWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabWidth", vi]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function SetFont(vqf:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", vqf]);
	};
}

function NewQStyleOptionMenuItemFromPointer(ptr:String):QStyleOptionMenuItem {
	final r = new QStyleOptionMenuItem();
	r.initFrom(ptr, "widgets.QStyleOptionMenuItem");
	return r;
}

function NewQStyleOptionMenuItem():QStyleOptionMenuItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionMenuItem", ""]);
}

function NewQStyleOptionMenuItem2(other:QStyleOptionMenuItem_ITF):QStyleOptionMenuItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionMenuItem2", "", other]);
}

interface QStyleOptionProgressBar_ITF extends QStyleOption_ITF {
	public function QStyleOptionProgressBar_PTR():QStyleOptionProgressBar;
}

class QStyleOptionProgressBar extends QStyleOption implements QStyleOptionProgressBar_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionProgressBar_PTR():QStyleOptionProgressBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionProgressBar_PTR"]);
	};

	public function DestroyQStyleOptionProgressBar() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionProgressBar"]);
	};

	public function Minimum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Minimum"]);
	};

	public function SetMinimum(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimum", vi]);
	};

	public function Maximum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Maximum"]);
	};

	public function SetMaximum(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximum", vi]);
	};

	public function Progress():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Progress"]);
	};

	public function SetProgress(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetProgress", vi]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function TextAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextAlignment"]);
	};

	public function SetTextAlignment(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextAlignment", vqt]);
	};

	public function TextVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextVisible"]);
	};

	public function SetTextVisible(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextVisible", vbo]);
	};

	public function InvertedAppearance():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InvertedAppearance"]);
	};

	public function SetInvertedAppearance(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInvertedAppearance", vbo]);
	};

	public function BottomToTop():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BottomToTop"]);
	};

	public function SetBottomToTop(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBottomToTop", vbo]);
	};
}

function NewQStyleOptionProgressBarFromPointer(ptr:String):QStyleOptionProgressBar {
	final r = new QStyleOptionProgressBar();
	r.initFrom(ptr, "widgets.QStyleOptionProgressBar");
	return r;
}

function NewQStyleOptionProgressBar():QStyleOptionProgressBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionProgressBar", ""]);
}

function NewQStyleOptionProgressBar2(other:QStyleOptionProgressBar_ITF):QStyleOptionProgressBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionProgressBar2", "", other]);
}

interface QStyleOptionRubberBand_ITF extends QStyleOption_ITF {
	public function QStyleOptionRubberBand_PTR():QStyleOptionRubberBand;
}

class QStyleOptionRubberBand extends QStyleOption implements QStyleOptionRubberBand_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionRubberBand_PTR():QStyleOptionRubberBand {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionRubberBand_PTR"]);
	};

	public function DestroyQStyleOptionRubberBand() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionRubberBand"]);
	};

	public function Shape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Shape"]);
	};

	public function SetShape(vqr:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShape", vqr]);
	};

	public function Opaque():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Opaque"]);
	};

	public function SetOpaque(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpaque", vbo]);
	};
}

function NewQStyleOptionRubberBandFromPointer(ptr:String):QStyleOptionRubberBand {
	final r = new QStyleOptionRubberBand();
	r.initFrom(ptr, "widgets.QStyleOptionRubberBand");
	return r;
}

function NewQStyleOptionRubberBand():QStyleOptionRubberBand {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionRubberBand", ""]);
}

function NewQStyleOptionRubberBand2(other:QStyleOptionRubberBand_ITF):QStyleOptionRubberBand {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionRubberBand2", "", other]);
}

interface QStyleOptionSizeGrip_ITF extends QStyleOptionComplex_ITF {
	public function QStyleOptionSizeGrip_PTR():QStyleOptionSizeGrip;
}

class QStyleOptionSizeGrip extends QStyleOptionComplex implements QStyleOptionSizeGrip_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionSizeGrip_PTR():QStyleOptionSizeGrip {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionSizeGrip_PTR"]);
	};

	public function DestroyQStyleOptionSizeGrip() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionSizeGrip"]);
	};

	public function Corner():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Corner"]);
	};

	public function SetCorner(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCorner", vqt]);
	};
}

function NewQStyleOptionSizeGripFromPointer(ptr:String):QStyleOptionSizeGrip {
	final r = new QStyleOptionSizeGrip();
	r.initFrom(ptr, "widgets.QStyleOptionSizeGrip");
	return r;
}

function NewQStyleOptionSizeGrip():QStyleOptionSizeGrip {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionSizeGrip", ""]);
}

function NewQStyleOptionSizeGrip2(other:QStyleOptionSizeGrip_ITF):QStyleOptionSizeGrip {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionSizeGrip2", "", other]);
}

interface QStyleOptionSlider_ITF extends QStyleOptionComplex_ITF {
	public function QStyleOptionSlider_PTR():QStyleOptionSlider;
}

class QStyleOptionSlider extends QStyleOptionComplex implements QStyleOptionSlider_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionSlider_PTR():QStyleOptionSlider {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionSlider_PTR"]);
	};

	public function DestroyQStyleOptionSlider() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionSlider"]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function SetOrientation(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientation", vqt]);
	};

	public function Minimum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Minimum"]);
	};

	public function SetMinimum(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimum", vi]);
	};

	public function Maximum():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Maximum"]);
	};

	public function SetMaximum(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximum", vi]);
	};

	public function TickPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TickPosition"]);
	};

	public function SetTickPosition(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTickPosition", vqs]);
	};

	public function TickInterval():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TickInterval"]);
	};

	public function SetTickInterval(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTickInterval", vi]);
	};

	public function UpsideDown():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UpsideDown"]);
	};

	public function SetUpsideDown(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUpsideDown", vbo]);
	};

	public function SliderPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SliderPosition"]);
	};

	public function SetSliderPosition(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSliderPosition", vi]);
	};

	public function SliderValue():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SliderValue"]);
	};

	public function SetSliderValue(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSliderValue", vi]);
	};

	public function SingleStep():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SingleStep"]);
	};

	public function SetSingleStep(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSingleStep", vi]);
	};

	public function PageStep():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PageStep"]);
	};

	public function SetPageStep(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPageStep", vi]);
	};

	public function NotchTarget():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NotchTarget"]);
	};

	public function SetNotchTarget(vqr:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetNotchTarget", vqr]);
	};

	public function DialWrapping():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DialWrapping"]);
	};

	public function SetDialWrapping(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDialWrapping", vbo]);
	};
}

function NewQStyleOptionSliderFromPointer(ptr:String):QStyleOptionSlider {
	final r = new QStyleOptionSlider();
	r.initFrom(ptr, "widgets.QStyleOptionSlider");
	return r;
}

function NewQStyleOptionSlider():QStyleOptionSlider {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionSlider", ""]);
}

function NewQStyleOptionSlider2(other:QStyleOptionSlider_ITF):QStyleOptionSlider {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionSlider2", "", other]);
}

interface QStyleOptionSpinBox_ITF extends QStyleOptionComplex_ITF {
	public function QStyleOptionSpinBox_PTR():QStyleOptionSpinBox;
}

class QStyleOptionSpinBox extends QStyleOptionComplex implements QStyleOptionSpinBox_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionSpinBox_PTR():QStyleOptionSpinBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionSpinBox_PTR"]);
	};

	public function DestroyQStyleOptionSpinBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionSpinBox"]);
	};

	public function ButtonSymbols():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ButtonSymbols"]);
	};

	public function SetButtonSymbols(vqa:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetButtonSymbols", vqa]);
	};

	public function StepEnabled():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StepEnabled"]);
	};

	public function SetStepEnabled(vqa:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStepEnabled", vqa]);
	};

	public function Frame():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Frame"]);
	};

	public function SetFrame(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFrame", vbo]);
	};
}

function NewQStyleOptionSpinBoxFromPointer(ptr:String):QStyleOptionSpinBox {
	final r = new QStyleOptionSpinBox();
	r.initFrom(ptr, "widgets.QStyleOptionSpinBox");
	return r;
}

function NewQStyleOptionSpinBox():QStyleOptionSpinBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionSpinBox", ""]);
}

function NewQStyleOptionSpinBox2(other:QStyleOptionSpinBox_ITF):QStyleOptionSpinBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionSpinBox2", "", other]);
}

interface QStyleOptionTab_ITF extends QStyleOption_ITF {
	public function QStyleOptionTab_PTR():QStyleOptionTab;
}

class QStyleOptionTab extends QStyleOption implements QStyleOptionTab_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionTab_PTR():QStyleOptionTab {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionTab_PTR"]);
	};

	public function DestroyQStyleOptionTab() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionTab"]);
	};

	public function Shape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Shape"]);
	};

	public function SetShape(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShape", vqt]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function SetIcon(vqi:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", vqi]);
	};

	public function Row():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Row"]);
	};

	public function SetRow(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRow", vi]);
	};

	public function Position():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Position"]);
	};

	public function SetPosition(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPosition", vqs]);
	};

	public function SelectedPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedPosition"]);
	};

	public function SetSelectedPosition(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectedPosition", vqs]);
	};

	public function CornerWidgets():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CornerWidgets"]);
	};

	public function SetCornerWidgets(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCornerWidgets", vqs]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function SetIconSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", vqs]);
	};

	public function DocumentMode():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DocumentMode"]);
	};

	public function SetDocumentMode(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocumentMode", vbo]);
	};

	public function LeftButtonSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LeftButtonSize"]);
	};

	public function SetLeftButtonSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLeftButtonSize", vqs]);
	};

	public function RightButtonSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RightButtonSize"]);
	};

	public function SetRightButtonSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRightButtonSize", vqs]);
	};
}

function NewQStyleOptionTabFromPointer(ptr:String):QStyleOptionTab {
	final r = new QStyleOptionTab();
	r.initFrom(ptr, "widgets.QStyleOptionTab");
	return r;
}

function NewQStyleOptionTab():QStyleOptionTab {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionTab", ""]);
}

function NewQStyleOptionTab2(other:QStyleOptionTab_ITF):QStyleOptionTab {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionTab2", "", other]);
}

interface QStyleOptionTabBarBase_ITF extends QStyleOption_ITF {
	public function QStyleOptionTabBarBase_PTR():QStyleOptionTabBarBase;
}

class QStyleOptionTabBarBase extends QStyleOption implements QStyleOptionTabBarBase_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionTabBarBase_PTR():QStyleOptionTabBarBase {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionTabBarBase_PTR"]);
	};

	public function DestroyQStyleOptionTabBarBase() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionTabBarBase"]);
	};

	public function Shape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Shape"]);
	};

	public function SetShape(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShape", vqt]);
	};

	public function TabBarRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabBarRect"]);
	};

	public function SetTabBarRect(vqr:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabBarRect", vqr]);
	};

	public function SelectedTabRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedTabRect"]);
	};

	public function SetSelectedTabRect(vqr:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectedTabRect", vqr]);
	};

	public function DocumentMode():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DocumentMode"]);
	};

	public function SetDocumentMode(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocumentMode", vbo]);
	};
}

function NewQStyleOptionTabBarBaseFromPointer(ptr:String):QStyleOptionTabBarBase {
	final r = new QStyleOptionTabBarBase();
	r.initFrom(ptr, "widgets.QStyleOptionTabBarBase");
	return r;
}

function NewQStyleOptionTabBarBase():QStyleOptionTabBarBase {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionTabBarBase", ""]);
}

function NewQStyleOptionTabBarBase2(other:QStyleOptionTabBarBase_ITF):QStyleOptionTabBarBase {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionTabBarBase2", "", other]);
}

interface QStyleOptionTabWidgetFrame_ITF extends QStyleOption_ITF {
	public function QStyleOptionTabWidgetFrame_PTR():QStyleOptionTabWidgetFrame;
}

class QStyleOptionTabWidgetFrame extends QStyleOption implements QStyleOptionTabWidgetFrame_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionTabWidgetFrame_PTR():QStyleOptionTabWidgetFrame {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionTabWidgetFrame_PTR"]);
	};

	public function DestroyQStyleOptionTabWidgetFrame() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionTabWidgetFrame"]);
	};

	public function LineWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LineWidth"]);
	};

	public function SetLineWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLineWidth", vi]);
	};

	public function MidLineWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MidLineWidth"]);
	};

	public function SetMidLineWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMidLineWidth", vi]);
	};

	public function Shape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Shape"]);
	};

	public function SetShape(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShape", vqt]);
	};

	public function TabBarSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabBarSize"]);
	};

	public function SetTabBarSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabBarSize", vqs]);
	};

	public function RightCornerWidgetSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RightCornerWidgetSize"]);
	};

	public function SetRightCornerWidgetSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRightCornerWidgetSize", vqs]);
	};

	public function LeftCornerWidgetSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LeftCornerWidgetSize"]);
	};

	public function SetLeftCornerWidgetSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLeftCornerWidgetSize", vqs]);
	};

	public function TabBarRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabBarRect"]);
	};

	public function SetTabBarRect(vqr:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabBarRect", vqr]);
	};

	public function SelectedTabRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedTabRect"]);
	};

	public function SetSelectedTabRect(vqr:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectedTabRect", vqr]);
	};
}

function NewQStyleOptionTabWidgetFrameFromPointer(ptr:String):QStyleOptionTabWidgetFrame {
	final r = new QStyleOptionTabWidgetFrame();
	r.initFrom(ptr, "widgets.QStyleOptionTabWidgetFrame");
	return r;
}

function NewQStyleOptionTabWidgetFrame():QStyleOptionTabWidgetFrame {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionTabWidgetFrame", ""]);
}

function NewQStyleOptionTabWidgetFrame2(other:QStyleOptionTabWidgetFrame_ITF):QStyleOptionTabWidgetFrame {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionTabWidgetFrame2", "", other]);
}

interface QStyleOptionTitleBar_ITF extends QStyleOptionComplex_ITF {
	public function QStyleOptionTitleBar_PTR():QStyleOptionTitleBar;
}

class QStyleOptionTitleBar extends QStyleOptionComplex implements QStyleOptionTitleBar_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionTitleBar_PTR():QStyleOptionTitleBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionTitleBar_PTR"]);
	};

	public function DestroyQStyleOptionTitleBar() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionTitleBar"]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function SetIcon(vqi:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", vqi]);
	};

	public function TitleBarState():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TitleBarState"]);
	};

	public function SetTitleBarState(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTitleBarState", vi]);
	};

	public function TitleBarFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TitleBarFlags"]);
	};

	public function SetTitleBarFlags(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTitleBarFlags", vqt]);
	};
}

function NewQStyleOptionTitleBarFromPointer(ptr:String):QStyleOptionTitleBar {
	final r = new QStyleOptionTitleBar();
	r.initFrom(ptr, "widgets.QStyleOptionTitleBar");
	return r;
}

function NewQStyleOptionTitleBar():QStyleOptionTitleBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionTitleBar", ""]);
}

function NewQStyleOptionTitleBar2(other:QStyleOptionTitleBar_ITF):QStyleOptionTitleBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionTitleBar2", "", other]);
}

interface QStyleOptionToolBar_ITF extends QStyleOption_ITF {
	public function QStyleOptionToolBar_PTR():QStyleOptionToolBar;
}

class QStyleOptionToolBar extends QStyleOption implements QStyleOptionToolBar_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionToolBar_PTR():QStyleOptionToolBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionToolBar_PTR"]);
	};

	public function DestroyQStyleOptionToolBar() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionToolBar"]);
	};

	public function PositionOfLine():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PositionOfLine"]);
	};

	public function SetPositionOfLine(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPositionOfLine", vqs]);
	};

	public function PositionWithinLine():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PositionWithinLine"]);
	};

	public function SetPositionWithinLine(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPositionWithinLine", vqs]);
	};

	public function ToolBarArea():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolBarArea"]);
	};

	public function SetToolBarArea(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolBarArea", vqt]);
	};

	public function Features():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Features"]);
	};

	public function SetFeatures(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFeatures", vqs]);
	};

	public function LineWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LineWidth"]);
	};

	public function SetLineWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLineWidth", vi]);
	};

	public function MidLineWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MidLineWidth"]);
	};

	public function SetMidLineWidth(vi:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMidLineWidth", vi]);
	};
}

function NewQStyleOptionToolBarFromPointer(ptr:String):QStyleOptionToolBar {
	final r = new QStyleOptionToolBar();
	r.initFrom(ptr, "widgets.QStyleOptionToolBar");
	return r;
}

function NewQStyleOptionToolBar():QStyleOptionToolBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionToolBar", ""]);
}

function NewQStyleOptionToolBar2(other:QStyleOptionToolBar_ITF):QStyleOptionToolBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionToolBar2", "", other]);
}

interface QStyleOptionToolBox_ITF extends QStyleOption_ITF {
	public function QStyleOptionToolBox_PTR():QStyleOptionToolBox;
}

class QStyleOptionToolBox extends QStyleOption implements QStyleOptionToolBox_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionToolBox_PTR():QStyleOptionToolBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionToolBox_PTR"]);
	};

	public function DestroyQStyleOptionToolBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionToolBox"]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function SetIcon(vqi:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", vqi]);
	};

	public function SelectedPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedPosition"]);
	};

	public function SetSelectedPosition(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectedPosition", vqs]);
	};
}

function NewQStyleOptionToolBoxFromPointer(ptr:String):QStyleOptionToolBox {
	final r = new QStyleOptionToolBox();
	r.initFrom(ptr, "widgets.QStyleOptionToolBox");
	return r;
}

function NewQStyleOptionToolBox():QStyleOptionToolBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionToolBox", ""]);
}

function NewQStyleOptionToolBox2(other:QStyleOptionToolBox_ITF):QStyleOptionToolBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionToolBox2", "", other]);
}

interface QStyleOptionToolButton_ITF extends QStyleOptionComplex_ITF {
	public function QStyleOptionToolButton_PTR():QStyleOptionToolButton;
}

class QStyleOptionToolButton extends QStyleOptionComplex implements QStyleOptionToolButton_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionToolButton_PTR():QStyleOptionToolButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionToolButton_PTR"]);
	};

	public function DestroyQStyleOptionToolButton() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionToolButton"]);
	};

	public function Features():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Features"]);
	};

	public function SetFeatures(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFeatures", vqs]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function SetIcon(vqi:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", vqi]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function SetIconSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", vqs]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function ArrowType():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ArrowType"]);
	};

	public function SetArrowType(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetArrowType", vqt]);
	};

	public function ToolButtonStyle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolButtonStyle"]);
	};

	public function SetToolButtonStyle(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolButtonStyle", vqt]);
	};

	public function Pos():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pos"]);
	};

	public function SetPos(vqp:QPoint_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPos", vqp]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function SetFont(vqf:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", vqf]);
	};
}

function NewQStyleOptionToolButtonFromPointer(ptr:String):QStyleOptionToolButton {
	final r = new QStyleOptionToolButton();
	r.initFrom(ptr, "widgets.QStyleOptionToolButton");
	return r;
}

function NewQStyleOptionToolButton():QStyleOptionToolButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionToolButton", ""]);
}

function NewQStyleOptionToolButton2(other:QStyleOptionToolButton_ITF):QStyleOptionToolButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionToolButton2", "", other]);
}

interface QStyleOptionViewItem_ITF extends QStyleOption_ITF {
	public function QStyleOptionViewItem_PTR():QStyleOptionViewItem;
}

class QStyleOptionViewItem extends QStyleOption implements QStyleOptionViewItem_ITF {
	public function new() {
		super();
	}

	public function QStyleOptionViewItem_PTR():QStyleOptionViewItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyleOptionViewItem_PTR"]);
	};

	public function DestroyQStyleOptionViewItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyleOptionViewItem"]);
	};

	public function DisplayAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DisplayAlignment"]);
	};

	public function SetDisplayAlignment(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDisplayAlignment", vqt]);
	};

	public function DecorationAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DecorationAlignment"]);
	};

	public function SetDecorationAlignment(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDecorationAlignment", vqt]);
	};

	public function TextElideMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextElideMode"]);
	};

	public function SetTextElideMode(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextElideMode", vqt]);
	};

	public function DecorationPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DecorationPosition"]);
	};

	public function SetDecorationPosition(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDecorationPosition", vqs]);
	};

	public function DecorationSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DecorationSize"]);
	};

	public function SetDecorationSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDecorationSize", vqs]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function SetFont(vqf:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", vqf]);
	};

	public function ShowDecorationSelected():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ShowDecorationSelected"]);
	};

	public function SetShowDecorationSelected(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShowDecorationSelected", vbo]);
	};

	public function Features():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Features"]);
	};

	public function SetFeatures(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFeatures", vqs]);
	};

	public function Index():QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Index"]);
	};

	public function SetIndex(vqm:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIndex", vqm]);
	};

	public function CheckState():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckState"]);
	};

	public function SetCheckState(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckState", vqt]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function SetIcon(vqi:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", vqi]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function SetText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", vqs]);
	};

	public function ViewItemPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ViewItemPosition"]);
	};

	public function SetViewItemPosition(vqs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetViewItemPosition", vqs]);
	};

	public function BackgroundBrush():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BackgroundBrush"]);
	};

	public function SetBackgroundBrush(vqb:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBackgroundBrush", vqb]);
	};
}

function NewQStyleOptionViewItemFromPointer(ptr:String):QStyleOptionViewItem {
	final r = new QStyleOptionViewItem();
	r.initFrom(ptr, "widgets.QStyleOptionViewItem");
	return r;
}

function NewQStyleOptionViewItem():QStyleOptionViewItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionViewItem", ""]);
}

function NewQStyleOptionViewItem2(other:QStyleOptionViewItem_ITF):QStyleOptionViewItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyleOptionViewItem2", "", other]);
}

interface QStylePainter_ITF extends QPainter_ITF {
	public function QStylePainter_PTR():QStylePainter;
}

class QStylePainter extends QPainter implements QStylePainter_ITF {
	public function new() {
		super();
	}

	public function QStylePainter_PTR():QStylePainter {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStylePainter_PTR"]);
	};

	public function DestroyQStylePainter() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStylePainter"]);
	};

	public function Begin_QStylePainter(widget:QWidget_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Begin", widget]);
	};

	public function Begin2(pd:QPaintDevice_ITF, widget:QWidget_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Begin2", pd, widget]);
	};

	public function DrawComplexControl(cc:Int, option:QStyleOptionComplex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawComplexControl", cc, option]);
	};

	public function DrawControl(ce:Int, option:QStyleOption_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawControl", ce, option]);
	};

	public function DrawItemPixmap(rect:QRect_ITF, flags:Int, pixmap:QPixmap_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawItemPixmap", rect, flags, pixmap]);
	};

	public function DrawItemText(rect:QRect_ITF, flags:Int, pal:QPalette_ITF, enabled:Bool, text:String, textRole:Int) {
		Internal.callLocalFunction([
			"", Pointer(), ___className, "DrawItemText", rect, flags, pal, enabled, text, textRole
		]);
	};

	public function DrawPrimitive(pe:Int, option:QStyleOption_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawPrimitive", pe, option]);
	};

	public function Style():QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Style"]);
	};
}

function NewQStylePainterFromPointer(ptr:String):QStylePainter {
	final r = new QStylePainter();
	r.initFrom(ptr, "widgets.QStylePainter");
	return r;
}

function NewQStylePainter():QStylePainter {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStylePainter", ""]);
}

function NewQStylePainter2(widget:QWidget_ITF):QStylePainter {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStylePainter2", "", widget]);
}

function NewQStylePainter3(pd:QPaintDevice_ITF, widget:QWidget_ITF):QStylePainter {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStylePainter3", "", pd, widget]);
}

interface QStylePlugin_ITF extends QObject_ITF {
	public function QStylePlugin_PTR():QStylePlugin;
}

class QStylePlugin extends QObject implements QStylePlugin_ITF {
	public function new() {
		super();
	}

	public function QStylePlugin_PTR():QStylePlugin {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStylePlugin_PTR"]);
	};

	public function ConnectCreate(f:(key:String) -> QStyle) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCreate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCreate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreate"]);
	};

	public function Create(key:String):QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Create", key]);
	};

	public function ConnectDestroyQStylePlugin(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQStylePlugin",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQStylePlugin() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQStylePlugin"]);
	};

	public function DestroyQStylePlugin() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStylePlugin"]);
	};

	public function DestroyQStylePluginDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStylePluginDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQStylePluginFromPointer(ptr:String):QStylePlugin {
	final r = new QStylePlugin();
	r.initFrom(ptr, "widgets.QStylePlugin");
	return r;
}

function NewQStylePlugin(parent:QObject_ITF):QStylePlugin {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStylePlugin", "", parent]);
}

interface QStyledItemDelegate_ITF extends QAbstractItemDelegate_ITF {
	public function QStyledItemDelegate_PTR():QStyledItemDelegate;
}

class QStyledItemDelegate extends QAbstractItemDelegate implements QStyledItemDelegate_ITF {
	public function new() {
		super();
	}

	public function QStyledItemDelegate_PTR():QStyledItemDelegate {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QStyledItemDelegate_PTR"]);
	};

	public function ConnectDisplayText(f:(value:QVariant, locale:QLocale) -> String) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDisplayText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDisplayText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDisplayText"]);
	};

	public function DisplayText(value:QVariant_ITF, locale:QLocale_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DisplayText", value, locale]);
	};

	public function DisplayTextDefault(value:QVariant_ITF, locale:QLocale_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DisplayTextDefault", value, locale]);
	};

	public function ConnectInitStyleOption(f:(option:QStyleOptionViewItem, index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInitStyleOption", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInitStyleOption() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInitStyleOption"]);
	};

	public function InitStyleOption(option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option, index]);
	};

	public function InitStyleOptionDefault(option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOptionDefault", option, index]);
	};

	public function ItemEditorFactory():QItemEditorFactory {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemEditorFactory"]);
	};

	public override function ConnectPaint(f:(painter:QPainter, option:QStyleOptionViewItem, index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaint"]);
	};

	public override function Paint(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paint", painter, option, index]);
	};

	public function PaintDefault(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintDefault", painter, option, index]);
	};

	public function SetItemEditorFactory(factory:QItemEditorFactory_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemEditorFactory", factory]);
	};

	public override function ConnectSizeHint(f:(option:QStyleOptionViewItem, index:QModelIndex) -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint(option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint", option, index]);
	};

	public function SizeHintDefault(option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault", option, index]);
	};

	public function ConnectDestroyQStyledItemDelegate(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQStyledItemDelegate",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQStyledItemDelegate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQStyledItemDelegate"]);
	};

	public function DestroyQStyledItemDelegate() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyledItemDelegate"]);
	};

	public function DestroyQStyledItemDelegateDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQStyledItemDelegateDefault"]);
	};
}

function NewQStyledItemDelegateFromPointer(ptr:String):QStyledItemDelegate {
	final r = new QStyledItemDelegate();
	r.initFrom(ptr, "widgets.QStyledItemDelegate");
	return r;
}

function NewQStyledItemDelegate(parent:QObject_ITF):QStyledItemDelegate {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQStyledItemDelegate", "", parent]);
}

interface QSwipeGesture_ITF extends QGesture_ITF {
	public function QSwipeGesture_PTR():QSwipeGesture;
}

class QSwipeGesture extends QGesture implements QSwipeGesture_ITF {
	public function new() {
		super();
	}

	public function QSwipeGesture_PTR():QSwipeGesture {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QSwipeGesture_PTR"]);
	};

	public function HorizontalDirection():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalDirection"]);
	};

	public function SetSwipeAngle(value:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSwipeAngle", value]);
	};

	public function SwipeAngle():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SwipeAngle"]);
	};

	public function VerticalDirection():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalDirection"]);
	};

	public function ConnectDestroyQSwipeGesture(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQSwipeGesture",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQSwipeGesture() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQSwipeGesture"]);
	};

	public function DestroyQSwipeGesture() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSwipeGesture"]);
	};

	public function DestroyQSwipeGestureDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSwipeGestureDefault"]);
	};
}

function NewQSwipeGestureFromPointer(ptr:String):QSwipeGesture {
	final r = new QSwipeGesture();
	r.initFrom(ptr, "widgets.QSwipeGesture");
	return r;
}

interface QSystemTrayIcon_ITF extends QObject_ITF {
	public function QSystemTrayIcon_PTR():QSystemTrayIcon;
}

class QSystemTrayIcon extends QObject implements QSystemTrayIcon_ITF {
	public function new() {
		super();
	}

	public function QSystemTrayIcon_PTR():QSystemTrayIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QSystemTrayIcon_PTR"]);
	};

	public function ConnectActivated(f:(reason:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActivated"]);
	};

	public function Activated(reason:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Activated", reason]);
	};

	public function ContextMenu():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ContextMenu"]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public function Geometry():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Geometry"]);
	};

	public function ConnectHide(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHide", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHide() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHide"]);
	};

	public function Hide() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Hide"]);
	};

	public function HideDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideDefault"]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function IsSystemTrayAvailable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSystemTrayAvailable"]);
	};

	public function IsVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsVisible"]);
	};

	public function ConnectMessageClicked(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMessageClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMessageClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMessageClicked"]);
	};

	public function MessageClicked() {
		Internal.callLocalFunction(["", Pointer(), ___className, "MessageClicked"]);
	};

	public function SetContextMenu(menu:QMenu_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetContextMenu", menu]);
	};

	public function SetIcon(icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", icon]);
	};

	public function SetToolTip(tip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolTip", tip]);
	};

	public function ConnectSetVisible(f:(visible:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetVisible"]);
	};

	public function SetVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisible", visible]);
	};

	public function SetVisibleDefault(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisibleDefault", visible]);
	};

	public function ConnectShow(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShow"]);
	};

	public function Show() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Show"]);
	};

	public function ShowDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowDefault"]);
	};

	public function ConnectShowMessage(f:(title:String, message:String, icon:Int, millisecondsTimeoutHint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowMessage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowMessage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowMessage"]);
	};

	public function ShowMessage(title:String, message:String, icon:Int, millisecondsTimeoutHint:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"ShowMessage",
			title,
			message,
			icon,
			millisecondsTimeoutHint
		]);
	};

	public function ShowMessageDefault(title:String, message:String, icon:Int, millisecondsTimeoutHint:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"ShowMessageDefault",
			title,
			message,
			icon,
			millisecondsTimeoutHint
		]);
	};

	public function ConnectShowMessage2(f:(title:String, message:String, icon:QIcon, millisecondsTimeoutHint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowMessage2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowMessage2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowMessage2"]);
	};

	public function ShowMessage2(title:String, message:String, icon:QIcon_ITF, millisecondsTimeoutHint:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"ShowMessage2",
			title,
			message,
			icon,
			millisecondsTimeoutHint
		]);
	};

	public function ShowMessage2Default(title:String, message:String, icon:QIcon_ITF, millisecondsTimeoutHint:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"ShowMessage2Default",
			title,
			message,
			icon,
			millisecondsTimeoutHint
		]);
	};

	public function SupportsMessages():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportsMessages"]);
	};

	public function ToolTip():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolTip"]);
	};

	public function ConnectDestroyQSystemTrayIcon(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQSystemTrayIcon",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQSystemTrayIcon() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQSystemTrayIcon"]);
	};

	public function DestroyQSystemTrayIcon() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSystemTrayIcon"]);
	};

	public function DestroyQSystemTrayIconDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQSystemTrayIconDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQSystemTrayIconFromPointer(ptr:String):QSystemTrayIcon {
	final r = new QSystemTrayIcon();
	r.initFrom(ptr, "widgets.QSystemTrayIcon");
	return r;
}

function NewQSystemTrayIcon(parent:QObject_ITF):QSystemTrayIcon {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSystemTrayIcon", "", parent]);
}

function NewQSystemTrayIcon2(icon:QIcon_ITF, parent:QObject_ITF):QSystemTrayIcon {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQSystemTrayIcon2", "", icon, parent]);
}

function QSystemTrayIcon_IsSystemTrayAvailable():Bool {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QSystemTrayIcon_IsSystemTrayAvailable", ""]);
}

function QSystemTrayIcon_SupportsMessages():Bool {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QSystemTrayIcon_SupportsMessages", ""]);
}

interface QTabBar_ITF extends QWidget_ITF {
	public function QTabBar_PTR():QTabBar;
}

class QTabBar extends QWidget implements QTabBar_ITF {
	public function new() {
		super();
	}

	public function QTabBar_PTR():QTabBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTabBar_PTR"]);
	};

	public function AccessibleTabName(index:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AccessibleTabName", index]);
	};

	public function AddTab(text:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddTab", text]);
	};

	public function AddTab2(icon:QIcon_ITF, text:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddTab2", icon, text]);
	};

	public function AutoHide():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoHide"]);
	};

	public function ChangeCurrentOnDrag():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChangeCurrentOnDrag"]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function ConnectCurrentChanged(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public function CurrentChanged(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", index]);
	};

	public function CurrentIndex():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndex"]);
	};

	public function DocumentMode():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DocumentMode"]);
	};

	public function DrawBase():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DrawBase"]);
	};

	public function ElideMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ElideMode"]);
	};

	public function Expanding():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Expanding"]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function InitStyleOption(option:QStyleOptionTab_ITF, tabIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option, tabIndex]);
	};

	public function InsertTab(index:Int, text:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertTab", index, text]);
	};

	public function InsertTab2(index:Int, icon:QIcon_ITF, text:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertTab2", index, icon, text]);
	};

	public function IsMovable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsMovable"]);
	};

	public function IsTabEnabled(index:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsTabEnabled", index]);
	};

	public function ConnectMinimumTabSizeHint(f:(index:Int) -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectMinimumTabSizeHint",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectMinimumTabSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMinimumTabSizeHint"]);
	};

	public function MinimumTabSizeHint(index:Int):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumTabSizeHint", index]);
	};

	public function MinimumTabSizeHintDefault(index:Int):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumTabSizeHintDefault", index]);
	};

	public function MoveTab(from:Int, to:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveTab", from, to]);
	};

	public function RemoveTab(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveTab", index]);
	};

	public function SelectionBehaviorOnRemove():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectionBehaviorOnRemove"]);
	};

	public function SetAccessibleTabName(index:Int, name:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAccessibleTabName", index, name]);
	};

	public function SetAutoHide(hide:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoHide", hide]);
	};

	public function SetChangeCurrentOnDrag(change:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetChangeCurrentOnDrag", change]);
	};

	public function ConnectSetCurrentIndex(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentIndex"]);
	};

	public function SetCurrentIndex(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndex", index]);
	};

	public function SetCurrentIndexDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndexDefault", index]);
	};

	public function SetDocumentMode(set:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocumentMode", set]);
	};

	public function SetDrawBase(drawTheBase:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDrawBase", drawTheBase]);
	};

	public function SetElideMode(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetElideMode", vqt]);
	};

	public function SetExpanding(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetExpanding", enabled]);
	};

	public function SetIconSize(size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", size]);
	};

	public function SetMovable(movable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMovable", movable]);
	};

	public function SetSelectionBehaviorOnRemove(behavior:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionBehaviorOnRemove", behavior]);
	};

	public function SetShape(shape:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShape", shape]);
	};

	public function SetTabButton(index:Int, position:Int, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabButton", index, position, widget]);
	};

	public function SetTabData(index:Int, data:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabData", index, data]);
	};

	public function SetTabEnabled(index:Int, enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabEnabled", index, enabled]);
	};

	public function SetTabIcon(index:Int, icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabIcon", index, icon]);
	};

	public function SetTabText(index:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabText", index, text]);
	};

	public function SetTabTextColor(index:Int, color:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabTextColor", index, color]);
	};

	public function SetTabToolTip(index:Int, tip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabToolTip", index, tip]);
	};

	public function SetTabWhatsThis(index:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabWhatsThis", index, text]);
	};

	public function SetTabsClosable(closable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabsClosable", closable]);
	};

	public function SetUsesScrollButtons(useButtons:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUsesScrollButtons", useButtons]);
	};

	public function Shape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Shape"]);
	};

	public function TabAt(position:QPoint_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabAt", position]);
	};

	public function ConnectTabBarClicked(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabBarClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabBarClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabBarClicked"]);
	};

	public function TabBarClicked(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabBarClicked", index]);
	};

	public function ConnectTabBarDoubleClicked(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectTabBarDoubleClicked",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectTabBarDoubleClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabBarDoubleClicked"]);
	};

	public function TabBarDoubleClicked(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabBarDoubleClicked", index]);
	};

	public function TabButton(index:Int, position:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabButton", index, position]);
	};

	public function ConnectTabCloseRequested(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabCloseRequested", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabCloseRequested() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabCloseRequested"]);
	};

	public function TabCloseRequested(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabCloseRequested", index]);
	};

	public function TabData(index:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabData", index]);
	};

	public function TabIcon(index:Int):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabIcon", index]);
	};

	public function ConnectTabInserted(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabInserted", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabInserted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabInserted"]);
	};

	public function TabInserted(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabInserted", index]);
	};

	public function TabInsertedDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabInsertedDefault", index]);
	};

	public function ConnectTabLayoutChange(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabLayoutChange", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabLayoutChange() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabLayoutChange"]);
	};

	public function TabLayoutChange() {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabLayoutChange"]);
	};

	public function TabLayoutChangeDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabLayoutChangeDefault"]);
	};

	public function ConnectTabMoved(f:(from:Int, to:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabMoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabMoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabMoved"]);
	};

	public function TabMoved(from:Int, to:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabMoved", from, to]);
	};

	public function TabRect(index:Int):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabRect", index]);
	};

	public function ConnectTabRemoved(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabRemoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabRemoved"]);
	};

	public function TabRemoved(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabRemoved", index]);
	};

	public function TabRemovedDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabRemovedDefault", index]);
	};

	public function ConnectTabSizeHint(f:(index:Int) -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabSizeHint"]);
	};

	public function TabSizeHint(index:Int):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabSizeHint", index]);
	};

	public function TabSizeHintDefault(index:Int):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabSizeHintDefault", index]);
	};

	public function TabText(index:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabText", index]);
	};

	public function TabTextColor(index:Int):QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabTextColor", index]);
	};

	public function TabToolTip(index:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabToolTip", index]);
	};

	public function TabWhatsThis(index:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabWhatsThis", index]);
	};

	public function TabsClosable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabsClosable"]);
	};

	public function UsesScrollButtons():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UsesScrollButtons"]);
	};

	public function ConnectDestroyQTabBar(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQTabBar", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQTabBar() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTabBar"]);
	};

	public function DestroyQTabBar() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTabBar"]);
	};

	public function DestroyQTabBarDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTabBarDefault"]);
	};
}

function NewQTabBarFromPointer(ptr:String):QTabBar {
	final r = new QTabBar();
	r.initFrom(ptr, "widgets.QTabBar");
	return r;
}

function NewQTabBar(parent:QWidget_ITF):QTabBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTabBar", "", parent]);
}

interface QTabWidget_ITF extends QWidget_ITF {
	public function QTabWidget_PTR():QTabWidget;
}

class QTabWidget extends QWidget implements QTabWidget_ITF {
	public function new() {
		super();
	}

	public function QTabWidget_PTR():QTabWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTabWidget_PTR"]);
	};

	public function AddTab(page:QWidget_ITF, label:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddTab", page, label]);
	};

	public function AddTab2(page:QWidget_ITF, icon:QIcon_ITF, label:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddTab2", page, icon, label]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function CornerWidget(corner:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CornerWidget", corner]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function ConnectCurrentChanged(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public function CurrentChanged(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", index]);
	};

	public function CurrentIndex():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndex"]);
	};

	public function CurrentWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentWidget"]);
	};

	public function DocumentMode():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DocumentMode"]);
	};

	public function ElideMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ElideMode"]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function IndexOf(w:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOf", w]);
	};

	public function InitStyleOption(option:QStyleOptionTabWidgetFrame_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function InsertTab(index:Int, page:QWidget_ITF, label:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertTab", index, page, label]);
	};

	public function InsertTab2(index:Int, page:QWidget_ITF, icon:QIcon_ITF, label:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertTab2", index, page, icon, label]);
	};

	public function IsMovable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsMovable"]);
	};

	public function IsTabEnabled(index:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsTabEnabled", index]);
	};

	public function RemoveTab(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveTab", index]);
	};

	public function SetCornerWidget(widget:QWidget_ITF, corner:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCornerWidget", widget, corner]);
	};

	public function ConnectSetCurrentIndex(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentIndex"]);
	};

	public function SetCurrentIndex(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndex", index]);
	};

	public function SetCurrentIndexDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndexDefault", index]);
	};

	public function ConnectSetCurrentWidget(f:(widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentWidget"]);
	};

	public function SetCurrentWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentWidget", widget]);
	};

	public function SetCurrentWidgetDefault(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentWidgetDefault", widget]);
	};

	public function SetDocumentMode(set:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocumentMode", set]);
	};

	public function SetElideMode(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetElideMode", vqt]);
	};

	public function SetIconSize(size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", size]);
	};

	public function SetMovable(movable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMovable", movable]);
	};

	public function SetTabBar(tb:QTabBar_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabBar", tb]);
	};

	public function SetTabBarAutoHide(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabBarAutoHide", enabled]);
	};

	public function SetTabEnabled(index:Int, enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabEnabled", index, enable]);
	};

	public function SetTabIcon(index:Int, icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabIcon", index, icon]);
	};

	public function SetTabPosition(vqt:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabPosition", vqt]);
	};

	public function SetTabShape(s:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabShape", s]);
	};

	public function SetTabText(index:Int, label:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabText", index, label]);
	};

	public function SetTabToolTip(index:Int, tip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabToolTip", index, tip]);
	};

	public function SetTabWhatsThis(index:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabWhatsThis", index, text]);
	};

	public function SetTabsClosable(closeable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabsClosable", closeable]);
	};

	public function SetUsesScrollButtons(useButtons:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUsesScrollButtons", useButtons]);
	};

	public function TabBar():QTabBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabBar"]);
	};

	public function TabBarAutoHide():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabBarAutoHide"]);
	};

	public function ConnectTabBarClicked(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabBarClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabBarClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabBarClicked"]);
	};

	public function TabBarClicked(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabBarClicked", index]);
	};

	public function ConnectTabBarDoubleClicked(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectTabBarDoubleClicked",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectTabBarDoubleClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabBarDoubleClicked"]);
	};

	public function TabBarDoubleClicked(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabBarDoubleClicked", index]);
	};

	public function ConnectTabCloseRequested(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabCloseRequested", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabCloseRequested() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabCloseRequested"]);
	};

	public function TabCloseRequested(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabCloseRequested", index]);
	};

	public function TabIcon(index:Int):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabIcon", index]);
	};

	public function ConnectTabInserted(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabInserted", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabInserted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabInserted"]);
	};

	public function TabInserted(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabInserted", index]);
	};

	public function TabInsertedDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabInsertedDefault", index]);
	};

	public function TabPosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabPosition"]);
	};

	public function ConnectTabRemoved(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabRemoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabRemoved"]);
	};

	public function TabRemoved(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabRemoved", index]);
	};

	public function TabRemovedDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabRemovedDefault", index]);
	};

	public function TabShape():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabShape"]);
	};

	public function TabText(index:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabText", index]);
	};

	public function TabToolTip(index:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabToolTip", index]);
	};

	public function TabWhatsThis(index:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabWhatsThis", index]);
	};

	public function TabsClosable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabsClosable"]);
	};

	public function UsesScrollButtons():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UsesScrollButtons"]);
	};

	public function Widget(index:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget", index]);
	};

	public function ConnectDestroyQTabWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQTabWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQTabWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTabWidget"]);
	};

	public function DestroyQTabWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTabWidget"]);
	};

	public function DestroyQTabWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTabWidgetDefault"]);
	};
}

function NewQTabWidgetFromPointer(ptr:String):QTabWidget {
	final r = new QTabWidget();
	r.initFrom(ptr, "widgets.QTabWidget");
	return r;
}

function NewQTabWidget(parent:QWidget_ITF):QTabWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTabWidget", "", parent]);
}

interface QTableView_ITF extends QAbstractItemView_ITF {
	public function QTableView_PTR():QTableView;
}

class QTableView extends QAbstractItemView implements QTableView_ITF {
	public function new() {
		super();
	}

	public function QTableView_PTR():QTableView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTableView_PTR"]);
	};

	public function ClearSpans() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearSpans"]);
	};

	public function ColumnAt(x:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnAt", x]);
	};

	public function ConnectColumnCountChanged(f:(oldCount:Int, newCount:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectColumnCountChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectColumnCountChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColumnCountChanged"]);
	};

	public function ColumnCountChanged(oldCount:Int, newCount:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCountChanged", oldCount, newCount]);
	};

	public function ColumnCountChangedDefault(oldCount:Int, newCount:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCountChangedDefault", oldCount, newCount]);
	};

	public function ConnectColumnMoved(f:(column:Int, oldIndex:Int, newIndex:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectColumnMoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectColumnMoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColumnMoved"]);
	};

	public function ColumnMoved(column:Int, oldIndex:Int, newIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnMoved", column, oldIndex, newIndex]);
	};

	public function ColumnMovedDefault(column:Int, oldIndex:Int, newIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnMovedDefault", column, oldIndex, newIndex]);
	};

	public function ConnectColumnResized(f:(column:Int, oldWidth:Int, newWidth:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectColumnResized", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectColumnResized() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColumnResized"]);
	};

	public function ColumnResized(column:Int, oldWidth:Int, newWidth:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnResized", column, oldWidth, newWidth]);
	};

	public function ColumnResizedDefault(column:Int, oldWidth:Int, newWidth:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnResizedDefault", column, oldWidth, newWidth]);
	};

	public function ColumnSpan(row:Int, column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnSpan", row, column]);
	};

	public function ColumnViewportPosition(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnViewportPosition", column]);
	};

	public function ColumnWidth(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnWidth", column]);
	};

	public override function ConnectCurrentChanged(f:(current:QModelIndex, previous:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public override function CurrentChanged(current:QModelIndex_ITF, previous:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", current, previous]);
	};

	public override function CurrentChangedDefault(current:QModelIndex_ITF, previous:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChangedDefault", current, previous]);
	};

	public function GridStyle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GridStyle"]);
	};

	public function ConnectHideColumn(f:(column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHideColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHideColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHideColumn"]);
	};

	public function HideColumn(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideColumn", column]);
	};

	public function HideColumnDefault(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideColumnDefault", column]);
	};

	public function ConnectHideRow(f:(row:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHideRow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHideRow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHideRow"]);
	};

	public function HideRow(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideRow", row]);
	};

	public function HideRowDefault(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideRowDefault", row]);
	};

	public function HorizontalHeader():QHeaderView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalHeader"]);
	};

	public override function ConnectHorizontalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectHorizontalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHorizontalOffset"]);
	};

	public override function HorizontalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffset"]);
	};

	public function HorizontalOffsetDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffsetDefault"]);
	};

	public override function ConnectIndexAt(f:(pos:QPoint) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndexAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIndexAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndexAt"]);
	};

	public override function IndexAt(pos:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAt", pos]);
	};

	public function IndexAtDefault(pos:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAtDefault", pos]);
	};

	public function IsColumnHidden(column:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsColumnHidden", column]);
	};

	public function IsCornerButtonEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsCornerButtonEnabled"]);
	};

	public override function ConnectIsIndexHidden(f:(index:QModelIndex) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsIndexHidden", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIsIndexHidden() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsIndexHidden"]);
	};

	public override function IsIndexHidden(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHidden", index]);
	};

	public function IsIndexHiddenDefault(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHiddenDefault", index]);
	};

	public function IsRowHidden(row:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsRowHidden", row]);
	};

	public function IsSortingEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSortingEnabled"]);
	};

	public override function ConnectMoveCursor(f:(cursorAction:Int, modifiers:Int) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMoveCursor", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMoveCursor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMoveCursor"]);
	};

	public override function MoveCursor(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursor", cursorAction, modifiers]);
	};

	public function MoveCursorDefault(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursorDefault", cursorAction, modifiers]);
	};

	public function ConnectResizeColumnToContents(f:(column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectResizeColumnToContents",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectResizeColumnToContents() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResizeColumnToContents"]);
	};

	public function ResizeColumnToContents(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeColumnToContents", column]);
	};

	public function ResizeColumnToContentsDefault(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeColumnToContentsDefault", column]);
	};

	public function ConnectResizeColumnsToContents(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectResizeColumnsToContents",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectResizeColumnsToContents() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResizeColumnsToContents"]);
	};

	public function ResizeColumnsToContents() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeColumnsToContents"]);
	};

	public function ResizeColumnsToContentsDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeColumnsToContentsDefault"]);
	};

	public function ConnectResizeRowToContents(f:(row:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectResizeRowToContents",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectResizeRowToContents() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResizeRowToContents"]);
	};

	public function ResizeRowToContents(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeRowToContents", row]);
	};

	public function ResizeRowToContentsDefault(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeRowToContentsDefault", row]);
	};

	public function ConnectResizeRowsToContents(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectResizeRowsToContents",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectResizeRowsToContents() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResizeRowsToContents"]);
	};

	public function ResizeRowsToContents() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeRowsToContents"]);
	};

	public function ResizeRowsToContentsDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeRowsToContentsDefault"]);
	};

	public function RowAt(y:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowAt", y]);
	};

	public function ConnectRowCountChanged(f:(oldCount:Int, newCount:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRowCountChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRowCountChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowCountChanged"]);
	};

	public function RowCountChanged(oldCount:Int, newCount:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowCountChanged", oldCount, newCount]);
	};

	public function RowCountChangedDefault(oldCount:Int, newCount:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowCountChangedDefault", oldCount, newCount]);
	};

	public function RowHeight(row:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowHeight", row]);
	};

	public function ConnectRowMoved(f:(row:Int, oldIndex:Int, newIndex:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRowMoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRowMoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowMoved"]);
	};

	public function RowMoved(row:Int, oldIndex:Int, newIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowMoved", row, oldIndex, newIndex]);
	};

	public function RowMovedDefault(row:Int, oldIndex:Int, newIndex:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowMovedDefault", row, oldIndex, newIndex]);
	};

	public function ConnectRowResized(f:(row:Int, oldHeight:Int, newHeight:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRowResized", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRowResized() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowResized"]);
	};

	public function RowResized(row:Int, oldHeight:Int, newHeight:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowResized", row, oldHeight, newHeight]);
	};

	public function RowResizedDefault(row:Int, oldHeight:Int, newHeight:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowResizedDefault", row, oldHeight, newHeight]);
	};

	public function RowSpan(row:Int, column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowSpan", row, column]);
	};

	public function RowViewportPosition(row:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowViewportPosition", row]);
	};

	public function ConnectSelectColumn(f:(column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectColumn"]);
	};

	public function SelectColumn(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectColumn", column]);
	};

	public function SelectColumnDefault(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectColumnDefault", column]);
	};

	public function ConnectSelectRow(f:(row:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectRow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectRow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectRow"]);
	};

	public function SelectRow(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectRow", row]);
	};

	public function SelectRowDefault(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectRowDefault", row]);
	};

	public override function ConnectSelectionChanged(f:(selected:QItemSelection, deselected:QItemSelection) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectionChanged"]);
	};

	public override function SelectionChanged(selected:QItemSelection_ITF, deselected:QItemSelection_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChanged", selected, deselected]);
	};

	public override function SelectionChangedDefault(selected:QItemSelection_ITF, deselected:QItemSelection_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChangedDefault", selected, deselected]);
	};

	public function SetColumnHidden(column:Int, hide:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnHidden", column, hide]);
	};

	public function SetColumnWidth(column:Int, width:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnWidth", column, width]);
	};

	public function SetCornerButtonEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCornerButtonEnabled", enable]);
	};

	public function SetGridStyle(style:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGridStyle", style]);
	};

	public function SetHorizontalHeader(header:QHeaderView_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalHeader", header]);
	};

	public override function ConnectSetRootIndex(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetRootIndex", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetRootIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetRootIndex"]);
	};

	public override function SetRootIndex(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootIndex", index]);
	};

	public override function SetRootIndexDefault(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootIndexDefault", index]);
	};

	public function SetRowHeight(row:Int, height:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowHeight", row, height]);
	};

	public function SetRowHidden(row:Int, hide:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowHidden", row, hide]);
	};

	public override function ConnectSetSelection(f:(rect:QRect, flags:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetSelection"]);
	};

	public override function SetSelection(rect:QRect_ITF, flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelection", rect, flags]);
	};

	public function SetSelectionDefault(rect:QRect_ITF, flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionDefault", rect, flags]);
	};

	public function ConnectSetShowGrid(f:(show:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetShowGrid", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetShowGrid() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetShowGrid"]);
	};

	public function SetShowGrid(show:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShowGrid", show]);
	};

	public function SetShowGridDefault(show:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShowGridDefault", show]);
	};

	public function SetSortingEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSortingEnabled", enable]);
	};

	public function SetSpan(row:Int, column:Int, rowSpanCount:Int, columnSpanCount:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SetSpan",
			row,
			column,
			rowSpanCount,
			columnSpanCount
		]);
	};

	public function SetVerticalHeader(header:QHeaderView_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalHeader", header]);
	};

	public function SetWordWrap(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWordWrap", on]);
	};

	public function ConnectShowColumn(f:(column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowColumn"]);
	};

	public function ShowColumn(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowColumn", column]);
	};

	public function ShowColumnDefault(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowColumnDefault", column]);
	};

	public function ShowGrid():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ShowGrid"]);
	};

	public function ConnectShowRow(f:(row:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowRow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowRow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowRow"]);
	};

	public function ShowRow(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowRow", row]);
	};

	public function ShowRowDefault(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowRowDefault", row]);
	};

	public function ConnectSortByColumn(f:(column:Int, order:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSortByColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSortByColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSortByColumn"]);
	};

	public function SortByColumn(column:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortByColumn", column, order]);
	};

	public function SortByColumnDefault(column:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortByColumnDefault", column, order]);
	};

	public override function ConnectUpdateGeometries(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdateGeometries", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectUpdateGeometries() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateGeometries"]);
	};

	public override function UpdateGeometries() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometries"]);
	};

	public override function UpdateGeometriesDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometriesDefault"]);
	};

	public function VerticalHeader():QHeaderView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalHeader"]);
	};

	public override function ConnectVerticalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectVerticalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVerticalOffset"]);
	};

	public override function VerticalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffset"]);
	};

	public function VerticalOffsetDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffsetDefault"]);
	};

	public function WordWrap():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WordWrap"]);
	};

	public function ConnectDestroyQTableView(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQTableView", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQTableView() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTableView"]);
	};

	public function DestroyQTableView() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTableView"]);
	};

	public function DestroyQTableViewDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTableViewDefault"]);
	};

	public override function ScrollTo(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollTo", index, hint]);
	};

	public function ScrollToDefault(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToDefault", index, hint]);
	};

	public override function VisualRect(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRect", index]);
	};

	public function VisualRectDefault(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRectDefault", index]);
	};

	public override function VisualRegionForSelection(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelection", selection]);
	};

	public function VisualRegionForSelectionDefault(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelectionDefault", selection]);
	};
}

function NewQTableViewFromPointer(ptr:String):QTableView {
	final r = new QTableView();
	r.initFrom(ptr, "widgets.QTableView");
	return r;
}

function NewQTableView(parent:QWidget_ITF):QTableView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTableView", "", parent]);
}

interface QTableWidget_ITF extends QTableView_ITF {
	public function QTableWidget_PTR():QTableWidget;
}

class QTableWidget extends QTableView implements QTableWidget_ITF {
	public function new() {
		super();
	}

	public function QTableWidget_PTR():QTableWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTableWidget_PTR"]);
	};

	public function ConnectCellActivated(f:(row:Int, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCellActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCellActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCellActivated"]);
	};

	public function CellActivated(row:Int, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CellActivated", row, column]);
	};

	public function ConnectCellChanged(f:(row:Int, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCellChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCellChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCellChanged"]);
	};

	public function CellChanged(row:Int, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CellChanged", row, column]);
	};

	public function ConnectCellClicked(f:(row:Int, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCellClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCellClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCellClicked"]);
	};

	public function CellClicked(row:Int, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CellClicked", row, column]);
	};

	public function ConnectCellDoubleClicked(f:(row:Int, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCellDoubleClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCellDoubleClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCellDoubleClicked"]);
	};

	public function CellDoubleClicked(row:Int, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CellDoubleClicked", row, column]);
	};

	public function ConnectCellEntered(f:(row:Int, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCellEntered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCellEntered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCellEntered"]);
	};

	public function CellEntered(row:Int, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CellEntered", row, column]);
	};

	public function ConnectCellPressed(f:(row:Int, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCellPressed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCellPressed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCellPressed"]);
	};

	public function CellPressed(row:Int, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CellPressed", row, column]);
	};

	public function CellWidget(row:Int, column:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CellWidget", row, column]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function ConnectClearContents(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClearContents", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClearContents() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClearContents"]);
	};

	public function ClearContents() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearContents"]);
	};

	public function ClearContentsDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearContentsDefault"]);
	};

	public function ClosePersistentEditor_QTableView(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClosePersistentEditor", item]);
	};

	public function Column(item:QTableWidgetItem_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Column", item]);
	};

	public function ColumnCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCount"]);
	};

	public function ConnectCurrentCellChanged(f:(currentRow:Int, currentColumn:Int, previousRow:Int, previousColumn:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentCellChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentCellChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentCellChanged"]);
	};

	public function CurrentCellChanged(currentRow:Int, currentColumn:Int, previousRow:Int, previousColumn:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"CurrentCellChanged",
			currentRow,
			currentColumn,
			previousRow,
			previousColumn
		]);
	};

	public function CurrentColumn():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentColumn"]);
	};

	public function CurrentItem():QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentItem"]);
	};

	public function ConnectCurrentItemChanged(f:(current:QTableWidgetItem, previous:QTableWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentItemChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentItemChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentItemChanged"]);
	};

	public function CurrentItemChanged(current:QTableWidgetItem_ITF, previous:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentItemChanged", current, previous]);
	};

	public function CurrentRow():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentRow"]);
	};

	public function ConnectDropMimeData(f:(row:Int, column:Int, data:QMimeData, action:Int) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDropMimeData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDropMimeData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDropMimeData"]);
	};

	public function DropMimeData(row:Int, column:Int, data:QMimeData_ITF, action:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DropMimeData", row, column, data, action]);
	};

	public function DropMimeDataDefault(row:Int, column:Int, data:QMimeData_ITF, action:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DropMimeDataDefault", row, column, data, action]);
	};

	public function EditItem(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EditItem", item]);
	};

	public function FindItems(text:String, flags:Int):Array<QTableWidgetItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FindItems", text, flags]);
	};

	public function HorizontalHeaderItem(column:Int):QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalHeaderItem", column]);
	};

	public function IndexFromItem(item:QTableWidgetItem_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexFromItem", item]);
	};

	public function ConnectInsertColumn(f:(column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInsertColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInsertColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInsertColumn"]);
	};

	public function InsertColumn(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertColumn", column]);
	};

	public function InsertColumnDefault(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertColumnDefault", column]);
	};

	public function ConnectInsertRow(f:(row:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInsertRow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInsertRow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInsertRow"]);
	};

	public function InsertRow(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertRow", row]);
	};

	public function InsertRowDefault(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertRowDefault", row]);
	};

	public function IsPersistentEditorOpen_QTableView(item:QTableWidgetItem_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsPersistentEditorOpen", item]);
	};

	public function Item(row:Int, column:Int):QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Item", row, column]);
	};

	public function ConnectItemActivated(f:(item:QTableWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemActivated"]);
	};

	public function ItemActivated(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemActivated", item]);
	};

	public function ItemAt(point:QPoint_ITF):QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", point]);
	};

	public function ItemAt2(ax:Int, ay:Int):QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt2", ax, ay]);
	};

	public function ConnectItemChanged(f:(item:QTableWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemChanged"]);
	};

	public function ItemChanged(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemChanged", item]);
	};

	public function ConnectItemClicked(f:(item:QTableWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemClicked"]);
	};

	public function ItemClicked(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemClicked", item]);
	};

	public function ConnectItemDoubleClicked(f:(item:QTableWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemDoubleClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemDoubleClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemDoubleClicked"]);
	};

	public function ItemDoubleClicked(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemDoubleClicked", item]);
	};

	public function ConnectItemEntered(f:(item:QTableWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemEntered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemEntered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemEntered"]);
	};

	public function ItemEntered(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemEntered", item]);
	};

	public function ItemFromIndex(index:QModelIndex_ITF):QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemFromIndex", index]);
	};

	public function ConnectItemPressed(f:(item:QTableWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemPressed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemPressed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemPressed"]);
	};

	public function ItemPressed(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemPressed", item]);
	};

	public function ItemPrototype():QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemPrototype"]);
	};

	public function ConnectItemSelectionChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectItemSelectionChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectItemSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemSelectionChanged"]);
	};

	public function ItemSelectionChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemSelectionChanged"]);
	};

	public function Items(data:QMimeData_ITF):Array<QTableWidgetItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Items", data]);
	};

	public function ConnectMimeData(f:(items:Array<QTableWidgetItem>) -> QMimeData) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMimeData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMimeData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMimeData"]);
	};

	public function MimeData(items:Array<QTableWidgetItem>):QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeData", items]);
	};

	public function MimeDataDefault(items:Array<QTableWidgetItem>):QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeDataDefault", items]);
	};

	public function ConnectMimeTypes(f:() -> Array<String>) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMimeTypes", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMimeTypes() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMimeTypes"]);
	};

	public function MimeTypes():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeTypes"]);
	};

	public function MimeTypesDefault():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeTypesDefault"]);
	};

	public function OpenPersistentEditor_QTableView(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OpenPersistentEditor", item]);
	};

	public function RemoveCellWidget(row:Int, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveCellWidget", row, column]);
	};

	public function ConnectRemoveColumn(f:(column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRemoveColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRemoveColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRemoveColumn"]);
	};

	public function RemoveColumn(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveColumn", column]);
	};

	public function RemoveColumnDefault(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveColumnDefault", column]);
	};

	public function ConnectRemoveRow(f:(row:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRemoveRow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRemoveRow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRemoveRow"]);
	};

	public function RemoveRow(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveRow", row]);
	};

	public function RemoveRowDefault(row:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveRowDefault", row]);
	};

	public function Row(item:QTableWidgetItem_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Row", item]);
	};

	public function RowCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowCount"]);
	};

	public function ConnectScrollToItem(f:(item:QTableWidgetItem, hint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollToItem", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScrollToItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollToItem"]);
	};

	public function ScrollToItem(item:QTableWidgetItem_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToItem", item, hint]);
	};

	public function ScrollToItemDefault(item:QTableWidgetItem_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToItemDefault", item, hint]);
	};

	public function SelectedItems():Array<QTableWidgetItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedItems"]);
	};

	public function SelectedRanges():Array<QTableWidgetSelectionRange> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedRanges"]);
	};

	public function SetCellWidget(row:Int, column:Int, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCellWidget", row, column, widget]);
	};

	public function SetColumnCount(columns:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnCount", columns]);
	};

	public function SetCurrentCell(row:Int, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentCell", row, column]);
	};

	public function SetCurrentCell2(row:Int, column:Int, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentCell2", row, column, command]);
	};

	public function SetCurrentItem(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentItem", item]);
	};

	public function SetCurrentItem2(item:QTableWidgetItem_ITF, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentItem2", item, command]);
	};

	public function SetHorizontalHeaderItem(column:Int, item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalHeaderItem", column, item]);
	};

	public function SetHorizontalHeaderLabels(labels:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHorizontalHeaderLabels", labels]);
	};

	public function SetItem(row:Int, column:Int, item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItem", row, column, item]);
	};

	public function SetItemPrototype(item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemPrototype", item]);
	};

	public function SetRangeSelected(ran:QTableWidgetSelectionRange_ITF, sele:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRangeSelected", ran, sele]);
	};

	public function SetRowCount(rows:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowCount", rows]);
	};

	public function SetVerticalHeaderItem(row:Int, item:QTableWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalHeaderItem", row, item]);
	};

	public function SetVerticalHeaderLabels(labels:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVerticalHeaderLabels", labels]);
	};

	public function SortItems(column:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortItems", column, order]);
	};

	public function ConnectSupportedDropActions(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSupportedDropActions",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSupportedDropActions() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSupportedDropActions"]);
	};

	public function SupportedDropActions():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedDropActions"]);
	};

	public function SupportedDropActionsDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedDropActionsDefault"]);
	};

	public function TakeHorizontalHeaderItem(column:Int):QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeHorizontalHeaderItem", column]);
	};

	public function TakeItem(row:Int, column:Int):QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeItem", row, column]);
	};

	public function TakeVerticalHeaderItem(row:Int):QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeVerticalHeaderItem", row]);
	};

	public function VerticalHeaderItem(row:Int):QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalHeaderItem", row]);
	};

	public function VisualColumn(logicalColumn:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualColumn", logicalColumn]);
	};

	public function VisualItemRect(item:QTableWidgetItem_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualItemRect", item]);
	};

	public function VisualRow(logicalRow:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRow", logicalRow]);
	};

	public function ConnectDestroyQTableWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQTableWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQTableWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTableWidget"]);
	};

	public function DestroyQTableWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTableWidget"]);
	};

	public function DestroyQTableWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTableWidgetDefault"]);
	};
}

function NewQTableWidgetFromPointer(ptr:String):QTableWidget {
	final r = new QTableWidget();
	r.initFrom(ptr, "widgets.QTableWidget");
	return r;
}

function NewQTableWidget(parent:QWidget_ITF):QTableWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTableWidget", "", parent]);
}

function NewQTableWidget2(rows:Int, columns:Int, parent:QWidget_ITF):QTableWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTableWidget2", "", rows, columns, parent]);
}

interface QTableWidgetItem_ITF {
	public function QTableWidgetItem_PTR():QTableWidgetItem;
}

class QTableWidgetItem extends Internal implements QTableWidgetItem_ITF {
	public function new() {
		super();
	}

	public function QTableWidgetItem_PTR():QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTableWidgetItem_PTR"]);
	};

	public function Background():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Background"]);
	};

	public function CheckState():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckState"]);
	};

	public function ConnectClone(f:() -> QTableWidgetItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClone", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClone() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClone"]);
	};

	public function Clone():QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Clone"]);
	};

	public function CloneDefault():QTableWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CloneDefault"]);
	};

	public function Column():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Column"]);
	};

	public function ConnectData(f:(role:Int) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectData"]);
	};

	public function Data(role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Data", role]);
	};

	public function DataDefault(role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DataDefault", role]);
	};

	public function Flags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Flags"]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function Foreground():QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Foreground"]);
	};

	public function Icon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon"]);
	};

	public function IsSelected():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSelected"]);
	};

	public function ConnectRead(f:(i:QDataStream) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRead", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRead() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRead"]);
	};

	public function Read(i:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Read", i]);
	};

	public function ReadDefault(i:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ReadDefault", i]);
	};

	public function Row():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Row"]);
	};

	public function SetBackground(brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBackground", brush]);
	};

	public function SetCheckState(state:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckState", state]);
	};

	public function ConnectSetData(f:(role:Int, value:QVariant) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetData"]);
	};

	public function SetData(role:Int, value:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetData", role, value]);
	};

	public function SetDataDefault(role:Int, value:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDataDefault", role, value]);
	};

	public function SetFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFlags", flags]);
	};

	public function SetFont(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", font]);
	};

	public function SetForeground(brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetForeground", brush]);
	};

	public function SetIcon(icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", icon]);
	};

	public function SetSelected(sele:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelected", sele]);
	};

	public function SetSizeHint(size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizeHint", size]);
	};

	public function SetStatusTip(statusTip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStatusTip", statusTip]);
	};

	public function SetText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", text]);
	};

	public function SetTextAlignment(alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextAlignment", alignment]);
	};

	public function SetToolTip(toolTip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolTip", toolTip]);
	};

	public function SetWhatsThis(whatsThis:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWhatsThis", whatsThis]);
	};

	public function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public function StatusTip():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StatusTip"]);
	};

	public function TableWidget():QTableWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TableWidget"]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function TextAlignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextAlignment"]);
	};

	public function ToolTip():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolTip"]);
	};

	public function Type():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Type"]);
	};

	public function WhatsThis():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WhatsThis"]);
	};

	public function ConnectWrite(f:(out:QDataStream) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWrite", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWrite() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWrite"]);
	};

	public function Write(out:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Write", out]);
	};

	public function WriteDefault(out:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WriteDefault", out]);
	};

	public function ConnectDestroyQTableWidgetItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQTableWidgetItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQTableWidgetItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTableWidgetItem"]);
	};

	public function DestroyQTableWidgetItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTableWidgetItem"]);
	};

	public function DestroyQTableWidgetItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTableWidgetItemDefault"]);
	};
}

function NewQTableWidgetItemFromPointer(ptr:String):QTableWidgetItem {
	final r = new QTableWidgetItem();
	r.initFrom(ptr, "widgets.QTableWidgetItem");
	return r;
}

function NewQTableWidgetItem(ty:Int):QTableWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTableWidgetItem", "", ty]);
}

function NewQTableWidgetItem2(text:String, ty:Int):QTableWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTableWidgetItem2", "", text, ty]);
}

function NewQTableWidgetItem3(icon:QIcon_ITF, text:String, ty:Int):QTableWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTableWidgetItem3", "", icon, text, ty]);
}

function NewQTableWidgetItem4(other:QTableWidgetItem_ITF):QTableWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTableWidgetItem4", "", other]);
}

interface QTableWidgetSelectionRange_ITF {
	public function QTableWidgetSelectionRange_PTR():QTableWidgetSelectionRange;
}

class QTableWidgetSelectionRange extends Internal implements QTableWidgetSelectionRange_ITF {
	public function new() {
		super();
	}

	public function QTableWidgetSelectionRange_PTR():QTableWidgetSelectionRange {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTableWidgetSelectionRange_PTR"]);
	};

	public function BottomRow():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BottomRow"]);
	};

	public function ColumnCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCount"]);
	};

	public function LeftColumn():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LeftColumn"]);
	};

	public function RightColumn():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RightColumn"]);
	};

	public function RowCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowCount"]);
	};

	public function TopRow():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TopRow"]);
	};

	public function DestroyQTableWidgetSelectionRange() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTableWidgetSelectionRange"]);
	};
}

function NewQTableWidgetSelectionRangeFromPointer(ptr:String):QTableWidgetSelectionRange {
	final r = new QTableWidgetSelectionRange();
	r.initFrom(ptr, "widgets.QTableWidgetSelectionRange");
	return r;
}

function NewQTableWidgetSelectionRange():QTableWidgetSelectionRange {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTableWidgetSelectionRange", ""]);
}

function NewQTableWidgetSelectionRange2(top:Int, left:Int, bottom:Int, right:Int):QTableWidgetSelectionRange {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTableWidgetSelectionRange2", "", top, left, bottom, right]);
}

function NewQTableWidgetSelectionRange3(other:QTableWidgetSelectionRange_ITF):QTableWidgetSelectionRange {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTableWidgetSelectionRange3", "", other]);
}

interface QTapAndHoldGesture_ITF extends QGesture_ITF {
	public function QTapAndHoldGesture_PTR():QTapAndHoldGesture;
}

class QTapAndHoldGesture extends QGesture implements QTapAndHoldGesture_ITF {
	public function new() {
		super();
	}

	public function QTapAndHoldGesture_PTR():QTapAndHoldGesture {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTapAndHoldGesture_PTR"]);
	};

	public function Position():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Position"]);
	};

	public function SetPosition(pos:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPosition", pos]);
	};

	public function SetTimeout(msecs:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTimeout", msecs]);
	};

	public function Timeout():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Timeout"]);
	};

	public function ConnectDestroyQTapAndHoldGesture(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQTapAndHoldGesture",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQTapAndHoldGesture() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTapAndHoldGesture"]);
	};

	public function DestroyQTapAndHoldGesture() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTapAndHoldGesture"]);
	};

	public function DestroyQTapAndHoldGestureDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTapAndHoldGestureDefault"]);
	};
}

function NewQTapAndHoldGestureFromPointer(ptr:String):QTapAndHoldGesture {
	final r = new QTapAndHoldGesture();
	r.initFrom(ptr, "widgets.QTapAndHoldGesture");
	return r;
}

function QTapAndHoldGesture_SetTimeout(msecs:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QTapAndHoldGesture_SetTimeout", "", msecs]);
}

function QTapAndHoldGesture_Timeout():Int {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QTapAndHoldGesture_Timeout", ""]);
}

interface QTapGesture_ITF extends QGesture_ITF {
	public function QTapGesture_PTR():QTapGesture;
}

class QTapGesture extends QGesture implements QTapGesture_ITF {
	public function new() {
		super();
	}

	public function QTapGesture_PTR():QTapGesture {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTapGesture_PTR"]);
	};

	public function Position():QPointF {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Position"]);
	};

	public function SetPosition(pos:QPointF_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPosition", pos]);
	};

	public function ConnectDestroyQTapGesture(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQTapGesture",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQTapGesture() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTapGesture"]);
	};

	public function DestroyQTapGesture() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTapGesture"]);
	};

	public function DestroyQTapGestureDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTapGestureDefault"]);
	};
}

function NewQTapGestureFromPointer(ptr:String):QTapGesture {
	final r = new QTapGesture();
	r.initFrom(ptr, "widgets.QTapGesture");
	return r;
}

interface QTextBrowser_ITF extends QTextEdit_ITF {
	public function QTextBrowser_PTR():QTextBrowser;
}

class QTextBrowser extends QTextEdit implements QTextBrowser_ITF {
	public function new() {
		super();
	}

	public function QTextBrowser_PTR():QTextBrowser {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTextBrowser_PTR"]);
	};

	public function ConnectAnchorClicked(f:(link:QUrl) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAnchorClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAnchorClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAnchorClicked"]);
	};

	public function AnchorClicked(link:QUrl_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AnchorClicked", link]);
	};

	public function ConnectBackward(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBackward", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBackward() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBackward"]);
	};

	public function Backward() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Backward"]);
	};

	public function BackwardDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "BackwardDefault"]);
	};

	public function ConnectBackwardAvailable(f:(available:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBackwardAvailable", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBackwardAvailable() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBackwardAvailable"]);
	};

	public function BackwardAvailable(available:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "BackwardAvailable", available]);
	};

	public function BackwardHistoryCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BackwardHistoryCount"]);
	};

	public function ClearHistory() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearHistory"]);
	};

	public function ConnectForward(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectForward", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectForward() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectForward"]);
	};

	public function Forward() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Forward"]);
	};

	public function ForwardDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ForwardDefault"]);
	};

	public function ConnectForwardAvailable(f:(available:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectForwardAvailable", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectForwardAvailable() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectForwardAvailable"]);
	};

	public function ForwardAvailable(available:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ForwardAvailable", available]);
	};

	public function ForwardHistoryCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ForwardHistoryCount"]);
	};

	public function ConnectHighlighted(f:(link:QUrl) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHighlighted", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHighlighted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHighlighted"]);
	};

	public function Highlighted(link:QUrl_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Highlighted", link]);
	};

	public function ConnectHighlighted2(f:(link:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHighlighted2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHighlighted2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHighlighted2"]);
	};

	public function Highlighted2(link:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Highlighted2", link]);
	};

	public function ConnectHistoryChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHistoryChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHistoryChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHistoryChanged"]);
	};

	public function HistoryChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HistoryChanged"]);
	};

	public function HistoryTitle(i:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HistoryTitle", i]);
	};

	public function HistoryUrl(i:Int):QUrl {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HistoryUrl", i]);
	};

	public function ConnectHome(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHome", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHome() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHome"]);
	};

	public function Home() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Home"]);
	};

	public function HomeDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HomeDefault"]);
	};

	public function IsBackwardAvailable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsBackwardAvailable"]);
	};

	public function IsForwardAvailable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsForwardAvailable"]);
	};

	public function OpenExternalLinks():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OpenExternalLinks"]);
	};

	public function OpenLinks():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OpenLinks"]);
	};

	public function ConnectReload(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectReload", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectReload() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectReload"]);
	};

	public function Reload() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Reload"]);
	};

	public function ReloadDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ReloadDefault"]);
	};

	public function SearchPaths():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SearchPaths"]);
	};

	public function SetOpenExternalLinks(open:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpenExternalLinks", open]);
	};

	public function SetOpenLinks(open:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOpenLinks", open]);
	};

	public function SetSearchPaths(paths:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSearchPaths", paths]);
	};

	public function ConnectSetSource(f:(name:QUrl) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetSource", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetSource() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetSource"]);
	};

	public function SetSource(name:QUrl_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSource", name]);
	};

	public function SetSourceDefault(name:QUrl_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSourceDefault", name]);
	};

	public function Source():QUrl {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Source"]);
	};

	public function ConnectSourceChanged(f:(src:QUrl) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSourceChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSourceChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSourceChanged"]);
	};

	public function SourceChanged(src:QUrl_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SourceChanged", src]);
	};

	public override function IsReadOnly():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsReadOnly"]);
	};

	public override function SetReadOnly(readOnly:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetReadOnly", readOnly]);
	};

	public override function IsUndoRedoEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsUndoRedoEnabled"]);
	};

	public override function SetUndoRedoEnabled(undoRedoEnabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUndoRedoEnabled", undoRedoEnabled]);
	};
}

function NewQTextBrowserFromPointer(ptr:String):QTextBrowser {
	final r = new QTextBrowser();
	r.initFrom(ptr, "widgets.QTextBrowser");
	return r;
}

function NewQTextBrowser(parent:QWidget_ITF):QTextBrowser {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTextBrowser", "", parent]);
}

interface QTextEdit_ITF extends QAbstractScrollArea_ITF {
	public function QTextEdit_PTR():QTextEdit;
}

class QTextEdit extends QAbstractScrollArea implements QTextEdit_ITF {
	public function new() {
		super();
	}

	public function QTextEdit_PTR():QTextEdit {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTextEdit_PTR"]);
	};

	public function AcceptRichText():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AcceptRichText"]);
	};

	public function Alignment():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Alignment"]);
	};

	public function AnchorAt(pos:QPoint_ITF):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AnchorAt", pos]);
	};

	public function ConnectAppend(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectAppend", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectAppend() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAppend"]);
	};

	public function Append(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Append", text]);
	};

	public function AppendDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AppendDefault", text]);
	};

	public function AutoFormatting():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoFormatting"]);
	};

	public function ConnectCanInsertFromMimeData(f:(source:QMimeData) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCanInsertFromMimeData",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCanInsertFromMimeData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCanInsertFromMimeData"]);
	};

	public function CanInsertFromMimeData(source:QMimeData_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanInsertFromMimeData", source]);
	};

	public function CanInsertFromMimeDataDefault(source:QMimeData_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanInsertFromMimeDataDefault", source]);
	};

	public function CanPaste():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanPaste"]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function ConnectCopy(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCopy", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCopy() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCopy"]);
	};

	public function Copy() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Copy"]);
	};

	public function CopyDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CopyDefault"]);
	};

	public function ConnectCopyAvailable(f:(yes:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCopyAvailable", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCopyAvailable() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCopyAvailable"]);
	};

	public function CopyAvailable(yes:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CopyAvailable", yes]);
	};

	public function ConnectCreateMimeDataFromSelection(f:() -> QMimeData) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCreateMimeDataFromSelection",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCreateMimeDataFromSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreateMimeDataFromSelection"]);
	};

	public function CreateMimeDataFromSelection():QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateMimeDataFromSelection"]);
	};

	public function CreateMimeDataFromSelectionDefault():QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateMimeDataFromSelectionDefault"]);
	};

	public function CreateStandardContextMenu():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateStandardContextMenu"]);
	};

	public function CreateStandardContextMenu2(position:QPoint_ITF):QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateStandardContextMenu2", position]);
	};

	public function CurrentCharFormat():QTextCharFormat {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentCharFormat"]);
	};

	public function ConnectCurrentCharFormatChanged(f:(ff:QTextCharFormat) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentCharFormatChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentCharFormatChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentCharFormatChanged"]);
	};

	public function CurrentCharFormatChanged(ff:QTextCharFormat_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentCharFormatChanged", ff]);
	};

	public function CurrentFont():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentFont"]);
	};

	public function CursorForPosition(pos:QPoint_ITF):QTextCursor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorForPosition", pos]);
	};

	public function ConnectCursorPositionChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCursorPositionChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCursorPositionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCursorPositionChanged"]);
	};

	public function CursorPositionChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CursorPositionChanged"]);
	};

	public function CursorRect(cursor:QTextCursor_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorRect", cursor]);
	};

	public function CursorRect2():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorRect2"]);
	};

	public function CursorWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CursorWidth"]);
	};

	public function ConnectCut(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCut", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCut() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCut"]);
	};

	public function Cut() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Cut"]);
	};

	public function CutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CutDefault"]);
	};

	public function Document():QTextDocument {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Document"]);
	};

	public function DocumentTitle():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DocumentTitle"]);
	};

	public function EnsureCursorVisible() {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsureCursorVisible"]);
	};

	public function Find_QFrame(exp:String, options:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Find", exp, options]);
	};

	public function Find2(exp:QRegExp_ITF, options:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Find2", exp, options]);
	};

	public function Find3(exp:QRegularExpression_ITF, options:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Find3", exp, options]);
	};

	public function FontFamily():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FontFamily"]);
	};

	public function FontItalic():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FontItalic"]);
	};

	public function FontPointSize():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FontPointSize"]);
	};

	public function FontUnderline():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FontUnderline"]);
	};

	public function FontWeight():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FontWeight"]);
	};

	public function ConnectInsertFromMimeData(f:(source:QMimeData) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectInsertFromMimeData",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectInsertFromMimeData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInsertFromMimeData"]);
	};

	public function InsertFromMimeData(source:QMimeData_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertFromMimeData", source]);
	};

	public function InsertFromMimeDataDefault(source:QMimeData_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertFromMimeDataDefault", source]);
	};

	public function ConnectInsertHtml(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInsertHtml", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInsertHtml() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInsertHtml"]);
	};

	public function InsertHtml(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertHtml", text]);
	};

	public function InsertHtmlDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertHtmlDefault", text]);
	};

	public function ConnectInsertPlainText(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInsertPlainText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInsertPlainText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInsertPlainText"]);
	};

	public function InsertPlainText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertPlainText", text]);
	};

	public function InsertPlainTextDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertPlainTextDefault", text]);
	};

	public function IsReadOnly():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsReadOnly"]);
	};

	public function IsUndoRedoEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsUndoRedoEnabled"]);
	};

	public function LineWrapColumnOrWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LineWrapColumnOrWidth"]);
	};

	public function LineWrapMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LineWrapMode"]);
	};

	public function ConnectLoadResource(f:(ty:Int, name:QUrl) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLoadResource", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLoadResource() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLoadResource"]);
	};

	public function LoadResource(ty:Int, name:QUrl_ITF):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LoadResource", ty, name]);
	};

	public function LoadResourceDefault(ty:Int, name:QUrl_ITF):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LoadResourceDefault", ty, name]);
	};

	public function MergeCurrentCharFormat(modifier:QTextCharFormat_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MergeCurrentCharFormat", modifier]);
	};

	public function MoveCursor(operation:Int, mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursor", operation, mode]);
	};

	public function OverwriteMode():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "OverwriteMode"]);
	};

	public function ConnectPaste(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaste", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaste() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaste"]);
	};

	public function Paste() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Paste"]);
	};

	public function PasteDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "PasteDefault"]);
	};

	public function PlaceholderText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PlaceholderText"]);
	};

	public function Print(printer:QPagedPaintDevice_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Print", printer]);
	};

	public function ConnectRedo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRedo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRedo"]);
	};

	public function Redo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Redo"]);
	};

	public function RedoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RedoDefault"]);
	};

	public function ConnectRedoAvailable(f:(available:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRedoAvailable", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRedoAvailable() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRedoAvailable"]);
	};

	public function RedoAvailable(available:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RedoAvailable", available]);
	};

	public function ConnectScrollToAnchor(f:(name:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollToAnchor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScrollToAnchor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollToAnchor"]);
	};

	public function ScrollToAnchor(name:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToAnchor", name]);
	};

	public function ScrollToAnchorDefault(name:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToAnchorDefault", name]);
	};

	public function ConnectSelectAll(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectAll() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectAll"]);
	};

	public function SelectAll() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAll"]);
	};

	public function SelectAllDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAllDefault"]);
	};

	public function ConnectSelectionChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectionChanged"]);
	};

	public function SelectionChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChanged"]);
	};

	public function SetAcceptRichText(accept:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAcceptRichText", accept]);
	};

	public function ConnectSetAlignment(f:(a:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetAlignment", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetAlignment() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetAlignment"]);
	};

	public function SetAlignment(a:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignment", a]);
	};

	public function SetAlignmentDefault(a:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAlignmentDefault", a]);
	};

	public function SetAutoFormatting(features:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoFormatting", features]);
	};

	public function SetCurrentCharFormat(format:QTextCharFormat_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentCharFormat", format]);
	};

	public function ConnectSetCurrentFont(f:(ff:QFont) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentFont", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentFont() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentFont"]);
	};

	public function SetCurrentFont(ff:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentFont", ff]);
	};

	public function SetCurrentFontDefault(ff:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentFontDefault", ff]);
	};

	public function SetCursorWidth(width:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCursorWidth", width]);
	};

	public function SetDocument(document:QTextDocument_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocument", document]);
	};

	public function SetDocumentTitle(title:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDocumentTitle", title]);
	};

	public function ConnectSetFontFamily(f:(fontFamily:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetFontFamily", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetFontFamily() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetFontFamily"]);
	};

	public function SetFontFamily(fontFamily:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontFamily", fontFamily]);
	};

	public function SetFontFamilyDefault(fontFamily:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontFamilyDefault", fontFamily]);
	};

	public function ConnectSetFontItalic(f:(italic:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetFontItalic", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetFontItalic() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetFontItalic"]);
	};

	public function SetFontItalic(italic:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontItalic", italic]);
	};

	public function SetFontItalicDefault(italic:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontItalicDefault", italic]);
	};

	public function ConnectSetFontPointSize(f:(s:Float) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetFontPointSize", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetFontPointSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetFontPointSize"]);
	};

	public function SetFontPointSize(s:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontPointSize", s]);
	};

	public function SetFontPointSizeDefault(s:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontPointSizeDefault", s]);
	};

	public function ConnectSetFontUnderline(f:(underline:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetFontUnderline", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetFontUnderline() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetFontUnderline"]);
	};

	public function SetFontUnderline(underline:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontUnderline", underline]);
	};

	public function SetFontUnderlineDefault(underline:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontUnderlineDefault", underline]);
	};

	public function ConnectSetFontWeight(f:(weight:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetFontWeight", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetFontWeight() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetFontWeight"]);
	};

	public function SetFontWeight(weight:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontWeight", weight]);
	};

	public function SetFontWeightDefault(weight:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFontWeightDefault", weight]);
	};

	public function ConnectSetHtml(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetHtml", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetHtml() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetHtml"]);
	};

	public function SetHtml(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHtml", text]);
	};

	public function SetHtmlDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHtmlDefault", text]);
	};

	public function SetLineWrapColumnOrWidth(w:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLineWrapColumnOrWidth", w]);
	};

	public function SetLineWrapMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLineWrapMode", mode]);
	};

	public function SetOverwriteMode(overwrite:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOverwriteMode", overwrite]);
	};

	public function SetPlaceholderText(placeholderText:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPlaceholderText", placeholderText]);
	};

	public function ConnectSetPlainText(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetPlainText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetPlainText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetPlainText"]);
	};

	public function SetPlainText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPlainText", text]);
	};

	public function SetPlainTextDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPlainTextDefault", text]);
	};

	public function SetReadOnly(ro:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetReadOnly", ro]);
	};

	public function SetTabChangesFocus(b:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabChangesFocus", b]);
	};

	public function SetTabStopDistance(distance:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabStopDistance", distance]);
	};

	public function SetTabStopWidth(width:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabStopWidth", width]);
	};

	public function ConnectSetText(f:(text:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetText", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetText() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetText"]);
	};

	public function SetText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", text]);
	};

	public function SetTextDefault(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextDefault", text]);
	};

	public function ConnectSetTextBackgroundColor(f:(c:QColor) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetTextBackgroundColor",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetTextBackgroundColor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetTextBackgroundColor"]);
	};

	public function SetTextBackgroundColor(c:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextBackgroundColor", c]);
	};

	public function SetTextBackgroundColorDefault(c:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextBackgroundColorDefault", c]);
	};

	public function ConnectSetTextColor(f:(c:QColor) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetTextColor", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetTextColor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetTextColor"]);
	};

	public function SetTextColor(c:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextColor", c]);
	};

	public function SetTextColorDefault(c:QColor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextColorDefault", c]);
	};

	public function SetTextCursor(cursor:QTextCursor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextCursor", cursor]);
	};

	public function SetTextInteractionFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextInteractionFlags", flags]);
	};

	public function SetUndoRedoEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUndoRedoEnabled", enable]);
	};

	public function SetWordWrapMode(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWordWrapMode", policy]);
	};

	public function TabChangesFocus():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabChangesFocus"]);
	};

	public function TabStopDistance():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabStopDistance"]);
	};

	public function TabStopWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TabStopWidth"]);
	};

	public function TextBackgroundColor():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextBackgroundColor"]);
	};

	public function ConnectTextChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTextChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTextChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTextChanged"]);
	};

	public function TextChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "TextChanged"]);
	};

	public function TextColor():QColor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextColor"]);
	};

	public function TextCursor():QTextCursor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextCursor"]);
	};

	public function TextInteractionFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextInteractionFlags"]);
	};

	public function ToHtml():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToHtml"]);
	};

	public function ToPlainText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToPlainText"]);
	};

	public function ConnectUndo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUndo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUndo"]);
	};

	public function Undo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Undo"]);
	};

	public function UndoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UndoDefault"]);
	};

	public function ConnectUndoAvailable(f:(available:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUndoAvailable", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUndoAvailable() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUndoAvailable"]);
	};

	public function UndoAvailable(available:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UndoAvailable", available]);
	};

	public function WordWrapMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WordWrapMode"]);
	};

	public function ConnectZoomIn(f:(ran:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectZoomIn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectZoomIn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectZoomIn"]);
	};

	public function ZoomIn(ran:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ZoomIn", ran]);
	};

	public function ZoomInDefault(ran:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ZoomInDefault", ran]);
	};

	public function ConnectZoomOut(f:(ran:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectZoomOut", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectZoomOut() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectZoomOut"]);
	};

	public function ZoomOut(ran:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ZoomOut", ran]);
	};

	public function ZoomOutDefault(ran:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ZoomOutDefault", ran]);
	};

	public function ConnectDestroyQTextEdit(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQTextEdit", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQTextEdit() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTextEdit"]);
	};

	public function DestroyQTextEdit() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTextEdit"]);
	};

	public function DestroyQTextEditDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTextEditDefault"]);
	};
}

function NewQTextEditFromPointer(ptr:String):QTextEdit {
	final r = new QTextEdit();
	r.initFrom(ptr, "widgets.QTextEdit");
	return r;
}

function NewQTextEdit(parent:QWidget_ITF):QTextEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTextEdit", "", parent]);
}

function NewQTextEdit2(text:String, parent:QWidget_ITF):QTextEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTextEdit2", "", text, parent]);
}

interface QTileRules_ITF {
	public function QTileRules_PTR():QTileRules;
}

class QTileRules extends Internal implements QTileRules_ITF {
	public function new() {
		super();
	}

	public function QTileRules_PTR():QTileRules {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTileRules_PTR"]);
	};

	public function DestroyQTileRules() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTileRules"]);
	};
}

function NewQTileRulesFromPointer(ptr:String):QTileRules {
	final r = new QTileRules();
	r.initFrom(ptr, "widgets.QTileRules");
	return r;
}

function NewQTileRules(horizontalRule:Int, verticalRule:Int):QTileRules {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTileRules", "", horizontalRule, verticalRule]);
}

function NewQTileRules2(rule:Int):QTileRules {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTileRules2", "", rule]);
}

interface QTimeEdit_ITF extends QDateTimeEdit_ITF {
	public function QTimeEdit_PTR():QTimeEdit;
}

class QTimeEdit extends QDateTimeEdit implements QTimeEdit_ITF {
	public function new() {
		super();
	}

	public function QTimeEdit_PTR():QTimeEdit {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTimeEdit_PTR"]);
	};

	public function ConnectDestroyQTimeEdit(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQTimeEdit", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQTimeEdit() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTimeEdit"]);
	};

	public function DestroyQTimeEdit() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTimeEdit"]);
	};

	public function DestroyQTimeEditDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTimeEditDefault"]);
	};
}

function NewQTimeEditFromPointer(ptr:String):QTimeEdit {
	final r = new QTimeEdit();
	r.initFrom(ptr, "widgets.QTimeEdit");
	return r;
}

function NewQTimeEdit(parent:QWidget_ITF):QTimeEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTimeEdit", "", parent]);
}

function NewQTimeEdit2(ti:QTime_ITF, parent:QWidget_ITF):QTimeEdit {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTimeEdit2", "", ti, parent]);
}

interface QToolBar_ITF extends QWidget_ITF {
	public function QToolBar_PTR():QToolBar;
}

class QToolBar extends QWidget implements QToolBar_ITF {
	public function new() {
		super();
	}

	public function QToolBar_PTR():QToolBar {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QToolBar_PTR"]);
	};

	public function ActionAt(p:QPoint_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActionAt", p]);
	};

	public function ActionAt2(x:Int, y:Int):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActionAt2", x, y]);
	};

	public function ConnectActionTriggered(f:(action:QAction) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActionTriggered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActionTriggered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActionTriggered"]);
	};

	public function ActionTriggered(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActionTriggered", action]);
	};

	public function AddAction_QToolBar(text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction", text]);
	};

	public function AddAction2(icon:QIcon_ITF, text:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction2", icon, text]);
	};

	public function AddAction3(text:String, receiver:QObject_ITF, member:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction3", text, receiver, member]);
	};

	public function AddAction4(icon:QIcon_ITF, text:String, receiver:QObject_ITF, member:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddAction4", icon, text, receiver, member]);
	};

	public function AddSeparator():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddSeparator"]);
	};

	public function AddWidget(widget:QWidget_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddWidget", widget]);
	};

	public function AllowedAreas():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AllowedAreas"]);
	};

	public function ConnectAllowedAreasChanged(f:(allowedAreas:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectAllowedAreasChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectAllowedAreasChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectAllowedAreasChanged"]);
	};

	public function AllowedAreasChanged(allowedAreas:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AllowedAreasChanged", allowedAreas]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function IconSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IconSize"]);
	};

	public function ConnectIconSizeChanged(f:(iconSize:QSize) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIconSizeChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIconSizeChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIconSizeChanged"]);
	};

	public function IconSizeChanged(iconSize:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "IconSizeChanged", iconSize]);
	};

	public function InsertSeparator(before:QAction_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertSeparator", before]);
	};

	public function InsertWidget(before:QAction_ITF, widget:QWidget_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertWidget", before, widget]);
	};

	public function IsAreaAllowed(area:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsAreaAllowed", area]);
	};

	public function IsFloatable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsFloatable"]);
	};

	public function IsFloating():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsFloating"]);
	};

	public function IsMovable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsMovable"]);
	};

	public function ConnectMovableChanged(f:(movable:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMovableChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMovableChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMovableChanged"]);
	};

	public function MovableChanged(movable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MovableChanged", movable]);
	};

	public function Orientation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Orientation"]);
	};

	public function ConnectOrientationChanged(f:(orientation:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectOrientationChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectOrientationChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectOrientationChanged"]);
	};

	public function OrientationChanged(orientation:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OrientationChanged", orientation]);
	};

	public function SetAllowedAreas(areas:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAllowedAreas", areas]);
	};

	public function SetFloatable(floatable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFloatable", floatable]);
	};

	public function ConnectSetIconSize(f:(iconSize:QSize) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetIconSize", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetIconSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetIconSize"]);
	};

	public function SetIconSize(iconSize:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSize", iconSize]);
	};

	public function SetIconSizeDefault(iconSize:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIconSizeDefault", iconSize]);
	};

	public function SetMovable(movable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMovable", movable]);
	};

	public function SetOrientation(orientation:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOrientation", orientation]);
	};

	public function ConnectSetToolButtonStyle(f:(toolButtonStyle:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetToolButtonStyle",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetToolButtonStyle() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetToolButtonStyle"]);
	};

	public function SetToolButtonStyle(toolButtonStyle:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolButtonStyle", toolButtonStyle]);
	};

	public function SetToolButtonStyleDefault(toolButtonStyle:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolButtonStyleDefault", toolButtonStyle]);
	};

	public function ToggleViewAction():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToggleViewAction"]);
	};

	public function ToolButtonStyle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolButtonStyle"]);
	};

	public function ConnectToolButtonStyleChanged(f:(toolButtonStyle:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectToolButtonStyleChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectToolButtonStyleChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectToolButtonStyleChanged"]);
	};

	public function ToolButtonStyleChanged(toolButtonStyle:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ToolButtonStyleChanged", toolButtonStyle]);
	};

	public function ConnectTopLevelChanged(f:(topLevel:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTopLevelChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTopLevelChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTopLevelChanged"]);
	};

	public function TopLevelChanged(topLevel:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TopLevelChanged", topLevel]);
	};

	public function ConnectVisibilityChanged(f:(visible:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVisibilityChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectVisibilityChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisibilityChanged"]);
	};

	public function VisibilityChanged(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "VisibilityChanged", visible]);
	};

	public function WidgetForAction(action:QAction_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WidgetForAction", action]);
	};

	public function ConnectDestroyQToolBar(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQToolBar", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQToolBar() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQToolBar"]);
	};

	public function DestroyQToolBar() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQToolBar"]);
	};

	public function DestroyQToolBarDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQToolBarDefault"]);
	};
}

function NewQToolBarFromPointer(ptr:String):QToolBar {
	final r = new QToolBar();
	r.initFrom(ptr, "widgets.QToolBar");
	return r;
}

function NewQToolBar(title:String, parent:QWidget_ITF):QToolBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQToolBar", "", title, parent]);
}

function NewQToolBar2(parent:QWidget_ITF):QToolBar {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQToolBar2", "", parent]);
}

interface QToolBox_ITF extends QFrame_ITF {
	public function QToolBox_PTR():QToolBox;
}

class QToolBox extends QFrame implements QToolBox_ITF {
	public function new() {
		super();
	}

	public function QToolBox_PTR():QToolBox {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QToolBox_PTR"]);
	};

	public function AddItem(widget:QWidget_ITF, iconSet:QIcon_ITF, text:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddItem", widget, iconSet, text]);
	};

	public function AddItem2(w:QWidget_ITF, text:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddItem2", w, text]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function ConnectCurrentChanged(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public function CurrentChanged(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", index]);
	};

	public function CurrentIndex():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIndex"]);
	};

	public function CurrentWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentWidget"]);
	};

	public function IndexOf(widget:QWidget_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOf", widget]);
	};

	public function InsertItem(index:Int, widget:QWidget_ITF, icon:QIcon_ITF, text:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertItem", index, widget, icon, text]);
	};

	public function InsertItem2(index:Int, widget:QWidget_ITF, text:String):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InsertItem2", index, widget, text]);
	};

	public function IsItemEnabled(index:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsItemEnabled", index]);
	};

	public function ItemIcon(index:Int):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemIcon", index]);
	};

	public function ConnectItemInserted(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemInserted", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemInserted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemInserted"]);
	};

	public function ItemInserted(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemInserted", index]);
	};

	public function ItemInsertedDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemInsertedDefault", index]);
	};

	public function ConnectItemRemoved(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemRemoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemRemoved"]);
	};

	public function ItemRemoved(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemRemoved", index]);
	};

	public function ItemRemovedDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemRemovedDefault", index]);
	};

	public function ItemText(index:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemText", index]);
	};

	public function ItemToolTip(index:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemToolTip", index]);
	};

	public function RemoveItem(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveItem", index]);
	};

	public function ConnectSetCurrentIndex(f:(index:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentIndex"]);
	};

	public function SetCurrentIndex(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndex", index]);
	};

	public function SetCurrentIndexDefault(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentIndexDefault", index]);
	};

	public function ConnectSetCurrentWidget(f:(widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetCurrentWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetCurrentWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetCurrentWidget"]);
	};

	public function SetCurrentWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentWidget", widget]);
	};

	public function SetCurrentWidgetDefault(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentWidgetDefault", widget]);
	};

	public function SetItemEnabled(index:Int, enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemEnabled", index, enabled]);
	};

	public function SetItemIcon(index:Int, icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemIcon", index, icon]);
	};

	public function SetItemText(index:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemText", index, text]);
	};

	public function SetItemToolTip(index:Int, toolTip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemToolTip", index, toolTip]);
	};

	public function Widget(index:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Widget", index]);
	};

	public function ConnectDestroyQToolBox(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQToolBox", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQToolBox() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQToolBox"]);
	};

	public function DestroyQToolBox() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQToolBox"]);
	};

	public function DestroyQToolBoxDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQToolBoxDefault"]);
	};
}

function NewQToolBoxFromPointer(ptr:String):QToolBox {
	final r = new QToolBox();
	r.initFrom(ptr, "widgets.QToolBox");
	return r;
}

function NewQToolBox(parent:QWidget_ITF, ff:Int):QToolBox {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQToolBox", "", parent, ff]);
}

interface QToolButton_ITF extends QAbstractButton_ITF {
	public function QToolButton_PTR():QToolButton;
}

class QToolButton extends QAbstractButton implements QToolButton_ITF {
	public function new() {
		super();
	}

	public function QToolButton_PTR():QToolButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QToolButton_PTR"]);
	};

	public function ArrowType():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ArrowType"]);
	};

	public function AutoRaise():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoRaise"]);
	};

	public function DefaultAction():QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultAction"]);
	};

	public function InitStyleOption(option:QStyleOptionToolButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitStyleOption", option]);
	};

	public function Menu():QMenu {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Menu"]);
	};

	public override function ConnectPaintEvent(f:(event:QPaintEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaintEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintEvent"]);
	};

	public override function PaintEvent(event:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEvent", event]);
	};

	public override function PaintEventDefault(event:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEventDefault", event]);
	};

	public function PopupMode():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PopupMode"]);
	};

	public function SetArrowType(ty:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetArrowType", ty]);
	};

	public function SetAutoRaise(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoRaise", enable]);
	};

	public function ConnectSetDefaultAction(f:(action:QAction) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetDefaultAction", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetDefaultAction() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetDefaultAction"]);
	};

	public function SetDefaultAction(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultAction", action]);
	};

	public function SetDefaultActionDefault(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultActionDefault", action]);
	};

	public function SetMenu(menu:QMenu_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMenu", menu]);
	};

	public function SetPopupMode(mode:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPopupMode", mode]);
	};

	public function ConnectSetToolButtonStyle(f:(style:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSetToolButtonStyle",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSetToolButtonStyle() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetToolButtonStyle"]);
	};

	public function SetToolButtonStyle(style:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolButtonStyle", style]);
	};

	public function SetToolButtonStyleDefault(style:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolButtonStyleDefault", style]);
	};

	public function ConnectShowMenu(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowMenu", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowMenu() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowMenu"]);
	};

	public function ShowMenu() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMenu"]);
	};

	public function ShowMenuDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMenuDefault"]);
	};

	public function ToolButtonStyle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolButtonStyle"]);
	};

	public function ConnectTriggered(f:(action:QAction) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTriggered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTriggered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTriggered"]);
	};

	public function Triggered(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Triggered", action]);
	};

	public function ConnectDestroyQToolButton(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQToolButton",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQToolButton() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQToolButton"]);
	};

	public function DestroyQToolButton() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQToolButton"]);
	};

	public function DestroyQToolButtonDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQToolButtonDefault"]);
	};
}

function NewQToolButtonFromPointer(ptr:String):QToolButton {
	final r = new QToolButton();
	r.initFrom(ptr, "widgets.QToolButton");
	return r;
}

function NewQToolButton(parent:QWidget_ITF):QToolButton {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQToolButton", "", parent]);
}

interface QToolTip_ITF {
	public function QToolTip_PTR():QToolTip;
}

class QToolTip extends Internal implements QToolTip_ITF {
	public function new() {
		super();
	}

	public function QToolTip_PTR():QToolTip {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QToolTip_PTR"]);
	};

	public function DestroyQToolTip() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQToolTip"]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function HideText() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideText"]);
	};

	public function IsVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsVisible"]);
	};

	public function Palette():QPalette {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Palette"]);
	};

	public function SetFont(font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", font]);
	};

	public function SetPalette(palette:QPalette_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPalette", palette]);
	};

	public function ShowText(pos:QPoint_ITF, text:String, w:QWidget_ITF, rect:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowText", pos, text, w, rect]);
	};

	public function ShowText2(pos:QPoint_ITF, text:String, w:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowText2", pos, text, w]);
	};

	public function ShowText3(pos:QPoint_ITF, text:String, w:QWidget_ITF, rect:QRect_ITF, msecDisplayTime:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowText3", pos, text, w, rect, msecDisplayTime]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};
}

function NewQToolTipFromPointer(ptr:String):QToolTip {
	final r = new QToolTip();
	r.initFrom(ptr, "widgets.QToolTip");
	return r;
}

function QToolTip_Font():QFont {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QToolTip_Font", ""]);
}

function QToolTip_HideText() {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QToolTip_HideText", ""]);
}

function QToolTip_IsVisible():Bool {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QToolTip_IsVisible", ""]);
}

function QToolTip_Palette():QPalette {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QToolTip_Palette", ""]);
}

function QToolTip_SetFont(font:QFont_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QToolTip_SetFont", "", font]);
}

function QToolTip_SetPalette(palette:QPalette_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QToolTip_SetPalette", "", palette]);
}

function QToolTip_ShowText(pos:QPoint_ITF, text:String, w:QWidget_ITF, rect:QRect_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QToolTip_ShowText", "", pos, text, w, rect]);
}

function QToolTip_ShowText2(pos:QPoint_ITF, text:String, w:QWidget_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QToolTip_ShowText2", "", pos, text, w]);
}

function QToolTip_ShowText3(pos:QPoint_ITF, text:String, w:QWidget_ITF, rect:QRect_ITF, msecDisplayTime:Int) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QToolTip_ShowText3", "", pos, text, w, rect, msecDisplayTime]);
}

function QToolTip_Text():String {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QToolTip_Text", ""]);
}

interface QTreeView_ITF extends QAbstractItemView_ITF {
	public function QTreeView_PTR():QTreeView;
}

class QTreeView extends QAbstractItemView implements QTreeView_ITF {
	public function new() {
		super();
	}

	public function QTreeView_PTR():QTreeView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTreeView_PTR"]);
	};

	public function AllColumnsShowFocus():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AllColumnsShowFocus"]);
	};

	public function AutoExpandDelay():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoExpandDelay"]);
	};

	public function ConnectCollapse(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCollapse", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCollapse() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCollapse"]);
	};

	public function Collapse(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Collapse", index]);
	};

	public function CollapseDefault(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CollapseDefault", index]);
	};

	public function ConnectCollapseAll(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCollapseAll", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCollapseAll() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCollapseAll"]);
	};

	public function CollapseAll() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CollapseAll"]);
	};

	public function CollapseAllDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CollapseAllDefault"]);
	};

	public function ConnectCollapsed(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCollapsed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCollapsed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCollapsed"]);
	};

	public function Collapsed(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Collapsed", index]);
	};

	public function ColumnAt(x:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnAt", x]);
	};

	public function ConnectColumnCountChanged(f:(oldCount:Int, newCount:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectColumnCountChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectColumnCountChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColumnCountChanged"]);
	};

	public function ColumnCountChanged(oldCount:Int, newCount:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCountChanged", oldCount, newCount]);
	};

	public function ColumnCountChangedDefault(oldCount:Int, newCount:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCountChangedDefault", oldCount, newCount]);
	};

	public function ConnectColumnMoved(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectColumnMoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectColumnMoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColumnMoved"]);
	};

	public function ColumnMoved() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnMoved"]);
	};

	public function ColumnMovedDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnMovedDefault"]);
	};

	public function ConnectColumnResized(f:(column:Int, oldSize:Int, newSize:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectColumnResized", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectColumnResized() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectColumnResized"]);
	};

	public function ColumnResized(column:Int, oldSize:Int, newSize:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnResized", column, oldSize, newSize]);
	};

	public function ColumnResizedDefault(column:Int, oldSize:Int, newSize:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ColumnResizedDefault", column, oldSize, newSize]);
	};

	public function ColumnViewportPosition(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnViewportPosition", column]);
	};

	public function ColumnWidth(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnWidth", column]);
	};

	public override function ConnectCurrentChanged(f:(current:QModelIndex, previous:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectCurrentChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentChanged"]);
	};

	public override function CurrentChanged(current:QModelIndex_ITF, previous:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChanged", current, previous]);
	};

	public override function CurrentChangedDefault(current:QModelIndex_ITF, previous:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentChangedDefault", current, previous]);
	};

	public override function ConnectDataChanged(f:(topLeft:QModelIndex, bottomRight:QModelIndex, roles:Array<Int>) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDataChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDataChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDataChanged"]);
	};

	public override function DataChanged(topLeft:QModelIndex_ITF, bottomRight:QModelIndex_ITF, roles:Array<Int>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DataChanged", topLeft, bottomRight, roles]);
	};

	public override function DataChangedDefault(topLeft:QModelIndex_ITF, bottomRight:QModelIndex_ITF, roles:Array<Int>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DataChangedDefault", topLeft, bottomRight, roles]);
	};

	public function ConnectDrawBranches(f:(painter:QPainter, rect:QRect, index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawBranches", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawBranches() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawBranches"]);
	};

	public function DrawBranches(painter:QPainter_ITF, rect:QRect_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawBranches", painter, rect, index]);
	};

	public function DrawBranchesDefault(painter:QPainter_ITF, rect:QRect_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawBranchesDefault", painter, rect, index]);
	};

	public function ConnectDrawRow(f:(painter:QPainter, option:QStyleOptionViewItem, index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDrawRow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDrawRow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDrawRow"]);
	};

	public function DrawRow(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawRow", painter, option, index]);
	};

	public function DrawRowDefault(painter:QPainter_ITF, option:QStyleOptionViewItem_ITF, index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawRowDefault", painter, option, index]);
	};

	public function DrawTree(painter:QPainter_ITF, region:QRegion_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DrawTree", painter, region]);
	};

	public function ConnectExpand(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectExpand", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectExpand() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExpand"]);
	};

	public function Expand(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Expand", index]);
	};

	public function ExpandDefault(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ExpandDefault", index]);
	};

	public function ConnectExpandAll(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectExpandAll", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectExpandAll() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExpandAll"]);
	};

	public function ExpandAll() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ExpandAll"]);
	};

	public function ExpandAllDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ExpandAllDefault"]);
	};

	public function ConnectExpandRecursively(f:(index:QModelIndex, depth:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectExpandRecursively", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectExpandRecursively() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExpandRecursively"]);
	};

	public function ExpandRecursively(index:QModelIndex_ITF, depth:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ExpandRecursively", index, depth]);
	};

	public function ExpandRecursivelyDefault(index:QModelIndex_ITF, depth:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ExpandRecursivelyDefault", index, depth]);
	};

	public function ConnectExpandToDepth(f:(depth:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectExpandToDepth", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectExpandToDepth() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExpandToDepth"]);
	};

	public function ExpandToDepth(depth:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ExpandToDepth", depth]);
	};

	public function ExpandToDepthDefault(depth:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ExpandToDepthDefault", depth]);
	};

	public function ConnectExpanded(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectExpanded", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectExpanded() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExpanded"]);
	};

	public function Expanded(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Expanded", index]);
	};

	public function ExpandsOnDoubleClick():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExpandsOnDoubleClick"]);
	};

	public function Header():QHeaderView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Header"]);
	};

	public function ConnectHideColumn(f:(column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHideColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHideColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHideColumn"]);
	};

	public function HideColumn(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideColumn", column]);
	};

	public function HideColumnDefault(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideColumnDefault", column]);
	};

	public override function ConnectHorizontalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHorizontalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectHorizontalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHorizontalOffset"]);
	};

	public override function HorizontalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffset"]);
	};

	public function HorizontalOffsetDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HorizontalOffsetDefault"]);
	};

	public function Indentation():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Indentation"]);
	};

	public function IndexAbove(index:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAbove", index]);
	};

	public override function ConnectIndexAt(f:(point:QPoint) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndexAt", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIndexAt() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndexAt"]);
	};

	public override function IndexAt(point:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAt", point]);
	};

	public function IndexAtDefault(point:QPoint_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexAtDefault", point]);
	};

	public function IndexBelow(index:QModelIndex_ITF):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexBelow", index]);
	};

	public function IndexRowSizeHint(index:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexRowSizeHint", index]);
	};

	public function IsAnimated():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsAnimated"]);
	};

	public function IsColumnHidden(column:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsColumnHidden", column]);
	};

	public function IsExpanded(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsExpanded", index]);
	};

	public function IsFirstColumnSpanned(row:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsFirstColumnSpanned", row, parent]);
	};

	public function IsHeaderHidden():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsHeaderHidden"]);
	};

	public override function ConnectIsIndexHidden(f:(index:QModelIndex) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsIndexHidden", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIsIndexHidden() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsIndexHidden"]);
	};

	public override function IsIndexHidden(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHidden", index]);
	};

	public function IsIndexHiddenDefault(index:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsIndexHiddenDefault", index]);
	};

	public function IsRowHidden(row:Int, parent:QModelIndex_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsRowHidden", row, parent]);
	};

	public function IsSortingEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSortingEnabled"]);
	};

	public function ItemsExpandable():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemsExpandable"]);
	};

	public override function ConnectMoveCursor(f:(cursorAction:Int, modifiers:Int) -> QModelIndex) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMoveCursor", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMoveCursor() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMoveCursor"]);
	};

	public override function MoveCursor(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursor", cursorAction, modifiers]);
	};

	public function MoveCursorDefault(cursorAction:Int, modifiers:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MoveCursorDefault", cursorAction, modifiers]);
	};

	public override function ConnectReset(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectReset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectReset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectReset"]);
	};

	public override function Reset() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Reset"]);
	};

	public override function ResetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetDefault"]);
	};

	public function ResetIndentation() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetIndentation"]);
	};

	public function ConnectResizeColumnToContents(f:(column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectResizeColumnToContents",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectResizeColumnToContents() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResizeColumnToContents"]);
	};

	public function ResizeColumnToContents(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeColumnToContents", column]);
	};

	public function ResizeColumnToContentsDefault(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeColumnToContentsDefault", column]);
	};

	public function RootIsDecorated():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RootIsDecorated"]);
	};

	public function RowHeight(index:QModelIndex_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RowHeight", index]);
	};

	public override function ConnectRowsAboutToBeRemoved(f:(parent:QModelIndex, start:Int, end:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectRowsAboutToBeRemoved",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectRowsAboutToBeRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowsAboutToBeRemoved"]);
	};

	public override function RowsAboutToBeRemoved(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsAboutToBeRemoved", parent, start, end]);
	};

	public override function RowsAboutToBeRemovedDefault(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsAboutToBeRemovedDefault", parent, start, end]);
	};

	public override function ConnectRowsInserted(f:(parent:QModelIndex, start:Int, end:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRowsInserted", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectRowsInserted() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowsInserted"]);
	};

	public override function RowsInserted(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsInserted", parent, start, end]);
	};

	public override function RowsInsertedDefault(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsInsertedDefault", parent, start, end]);
	};

	public function ConnectRowsRemoved(f:(parent:QModelIndex, start:Int, end:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRowsRemoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRowsRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRowsRemoved"]);
	};

	public function RowsRemoved(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsRemoved", parent, start, end]);
	};

	public function RowsRemovedDefault(parent:QModelIndex_ITF, start:Int, end:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RowsRemovedDefault", parent, start, end]);
	};

	public override function ConnectScrollTo(f:(index:QModelIndex, hint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollTo", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectScrollTo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollTo"]);
	};

	public override function ScrollTo(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollTo", index, hint]);
	};

	public function ScrollToDefault(index:QModelIndex_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToDefault", index, hint]);
	};

	public override function ConnectSelectAll(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectAll", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSelectAll() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectAll"]);
	};

	public override function SelectAll() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAll"]);
	};

	public override function SelectAllDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectAllDefault"]);
	};

	public override function ConnectSelectionChanged(f:(selected:QItemSelection, deselected:QItemSelection) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSelectionChanged", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSelectionChanged"]);
	};

	public override function SelectionChanged(selected:QItemSelection_ITF, deselected:QItemSelection_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChanged", selected, deselected]);
	};

	public override function SelectionChangedDefault(selected:QItemSelection_ITF, deselected:QItemSelection_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SelectionChangedDefault", selected, deselected]);
	};

	public function SetAllColumnsShowFocus(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAllColumnsShowFocus", enable]);
	};

	public function SetAnimated(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAnimated", enable]);
	};

	public function SetAutoExpandDelay(delay:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoExpandDelay", delay]);
	};

	public function SetColumnHidden(column:Int, hide:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnHidden", column, hide]);
	};

	public function SetColumnWidth(column:Int, width:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnWidth", column, width]);
	};

	public function SetExpanded(index:QModelIndex_ITF, expanded:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetExpanded", index, expanded]);
	};

	public function SetExpandsOnDoubleClick(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetExpandsOnDoubleClick", enable]);
	};

	public function SetFirstColumnSpanned(row:Int, parent:QModelIndex_ITF, span:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFirstColumnSpanned", row, parent, span]);
	};

	public function SetHeader(header:QHeaderView_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHeader", header]);
	};

	public function SetHeaderHidden(hide:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHeaderHidden", hide]);
	};

	public function SetIndentation(i:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIndentation", i]);
	};

	public function SetItemsExpandable(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemsExpandable", enable]);
	};

	public override function ConnectSetRootIndex(f:(index:QModelIndex) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetRootIndex", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetRootIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetRootIndex"]);
	};

	public override function SetRootIndex(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootIndex", index]);
	};

	public override function SetRootIndexDefault(index:QModelIndex_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootIndexDefault", index]);
	};

	public function SetRootIsDecorated(show:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRootIsDecorated", show]);
	};

	public function SetRowHidden(row:Int, parent:QModelIndex_ITF, hide:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetRowHidden", row, parent, hide]);
	};

	public override function ConnectSetSelection(f:(rect:QRect, command:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetSelection", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetSelection"]);
	};

	public override function SetSelection(rect:QRect_ITF, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelection", rect, command]);
	};

	public function SetSelectionDefault(rect:QRect_ITF, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelectionDefault", rect, command]);
	};

	public function SetSortingEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSortingEnabled", enable]);
	};

	public function SetTreePosition(index:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTreePosition", index]);
	};

	public function SetUniformRowHeights(uniform:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUniformRowHeights", uniform]);
	};

	public function SetWordWrap(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWordWrap", on]);
	};

	public function ConnectShowColumn(f:(column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowColumn"]);
	};

	public function ShowColumn(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowColumn", column]);
	};

	public function ShowColumnDefault(column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowColumnDefault", column]);
	};

	public function ConnectSortByColumn(f:(column:Int, order:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSortByColumn", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSortByColumn() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSortByColumn"]);
	};

	public function SortByColumn(column:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortByColumn", column, order]);
	};

	public function SortByColumnDefault(column:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortByColumnDefault", column, order]);
	};

	public function TreePosition():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TreePosition"]);
	};

	public function UniformRowHeights():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UniformRowHeights"]);
	};

	public override function ConnectUpdateGeometries(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdateGeometries", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectUpdateGeometries() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateGeometries"]);
	};

	public override function UpdateGeometries() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometries"]);
	};

	public override function UpdateGeometriesDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometriesDefault"]);
	};

	public override function ConnectVerticalOffset(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVerticalOffset", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectVerticalOffset() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVerticalOffset"]);
	};

	public override function VerticalOffset():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffset"]);
	};

	public function VerticalOffsetDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VerticalOffsetDefault"]);
	};

	public override function ConnectVisualRect(f:(index:QModelIndex) -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectVisualRect", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectVisualRect() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisualRect"]);
	};

	public override function VisualRect(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRect", index]);
	};

	public function VisualRectDefault(index:QModelIndex_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRectDefault", index]);
	};

	public override function ConnectVisualRegionForSelection(f:(selection:QItemSelection) -> QRegion) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectVisualRegionForSelection",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectVisualRegionForSelection() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectVisualRegionForSelection"]);
	};

	public override function VisualRegionForSelection(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelection", selection]);
	};

	public function VisualRegionForSelectionDefault(selection:QItemSelection_ITF):QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualRegionForSelectionDefault", selection]);
	};

	public function WordWrap():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WordWrap"]);
	};

	public function ConnectDestroyQTreeView(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQTreeView", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQTreeView() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTreeView"]);
	};

	public function DestroyQTreeView() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTreeView"]);
	};

	public function DestroyQTreeViewDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTreeViewDefault"]);
	};
}

function NewQTreeViewFromPointer(ptr:String):QTreeView {
	final r = new QTreeView();
	r.initFrom(ptr, "widgets.QTreeView");
	return r;
}

function NewQTreeView(parent:QWidget_ITF):QTreeView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeView", "", parent]);
}

interface QTreeWidget_ITF extends QTreeView_ITF {
	public function QTreeWidget_PTR():QTreeWidget;
}

class QTreeWidget extends QTreeView implements QTreeWidget_ITF {
	public function new() {
		super();
	}

	public function QTreeWidget_PTR():QTreeWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTreeWidget_PTR"]);
	};

	public function AddTopLevelItem(item:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddTopLevelItem", item]);
	};

	public function AddTopLevelItems(items:Array<QTreeWidgetItem>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddTopLevelItems", items]);
	};

	public function ConnectClear(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClear", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClear() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClear"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function ClearDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearDefault"]);
	};

	public function ClosePersistentEditor_QTreeView(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClosePersistentEditor", item, column]);
	};

	public function ConnectCollapseItem(f:(item:QTreeWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCollapseItem", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCollapseItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCollapseItem"]);
	};

	public function CollapseItem(item:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CollapseItem", item]);
	};

	public function CollapseItemDefault(item:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CollapseItemDefault", item]);
	};

	public function ColumnCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCount"]);
	};

	public function CurrentColumn():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentColumn"]);
	};

	public function CurrentItem():QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentItem"]);
	};

	public function ConnectCurrentItemChanged(f:(current:QTreeWidgetItem, previous:QTreeWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCurrentItemChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCurrentItemChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentItemChanged"]);
	};

	public function CurrentItemChanged(current:QTreeWidgetItem_ITF, previous:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentItemChanged", current, previous]);
	};

	public function ConnectDropMimeData(f:(parent:QTreeWidgetItem, index:Int, data:QMimeData, action:Int) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDropMimeData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDropMimeData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDropMimeData"]);
	};

	public function DropMimeData(parent:QTreeWidgetItem_ITF, index:Int, data:QMimeData_ITF, action:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DropMimeData", parent, index, data, action]);
	};

	public function DropMimeDataDefault(parent:QTreeWidgetItem_ITF, index:Int, data:QMimeData_ITF, action:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DropMimeDataDefault", parent, index, data, action]);
	};

	public function EditItem(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EditItem", item, column]);
	};

	public function ConnectExpandItem(f:(item:QTreeWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectExpandItem", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectExpandItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExpandItem"]);
	};

	public function ExpandItem(item:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ExpandItem", item]);
	};

	public function ExpandItemDefault(item:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ExpandItemDefault", item]);
	};

	public function FindItems(text:String, flags:Int, column:Int):Array<QTreeWidgetItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FindItems", text, flags, column]);
	};

	public function HeaderItem():QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HeaderItem"]);
	};

	public function IndexFromItem(item:QTreeWidgetItem_ITF, column:Int):QModelIndex {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexFromItem", item, column]);
	};

	public function IndexOfTopLevelItem(item:QTreeWidgetItem_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOfTopLevelItem", item]);
	};

	public function InsertTopLevelItem(index:Int, item:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertTopLevelItem", index, item]);
	};

	public function InsertTopLevelItems(index:Int, items:Array<QTreeWidgetItem>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertTopLevelItems", index, items]);
	};

	public function InvisibleRootItem():QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InvisibleRootItem"]);
	};

	public function IsPersistentEditorOpen_QTreeView(item:QTreeWidgetItem_ITF, column:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsPersistentEditorOpen", item, column]);
	};

	public function ItemAbove(item:QTreeWidgetItem_ITF):QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAbove", item]);
	};

	public function ConnectItemActivated(f:(item:QTreeWidgetItem, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemActivated", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemActivated() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemActivated"]);
	};

	public function ItemActivated(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemActivated", item, column]);
	};

	public function ItemAt(p:QPoint_ITF):QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt", p]);
	};

	public function ItemAt2(x:Int, y:Int):QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemAt2", x, y]);
	};

	public function ItemBelow(item:QTreeWidgetItem_ITF):QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemBelow", item]);
	};

	public function ConnectItemChanged(f:(item:QTreeWidgetItem, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemChanged"]);
	};

	public function ItemChanged(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemChanged", item, column]);
	};

	public function ConnectItemClicked(f:(item:QTreeWidgetItem, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemClicked"]);
	};

	public function ItemClicked(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemClicked", item, column]);
	};

	public function ConnectItemCollapsed(f:(item:QTreeWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemCollapsed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemCollapsed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemCollapsed"]);
	};

	public function ItemCollapsed(item:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemCollapsed", item]);
	};

	public function ConnectItemDoubleClicked(f:(item:QTreeWidgetItem, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemDoubleClicked", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemDoubleClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemDoubleClicked"]);
	};

	public function ItemDoubleClicked(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemDoubleClicked", item, column]);
	};

	public function ConnectItemEntered(f:(item:QTreeWidgetItem, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemEntered", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemEntered() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemEntered"]);
	};

	public function ItemEntered(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemEntered", item, column]);
	};

	public function ConnectItemExpanded(f:(item:QTreeWidgetItem) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemExpanded", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemExpanded() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemExpanded"]);
	};

	public function ItemExpanded(item:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemExpanded", item]);
	};

	public function ItemFromIndex(index:QModelIndex_ITF):QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemFromIndex", index]);
	};

	public function ConnectItemPressed(f:(item:QTreeWidgetItem, column:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectItemPressed", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectItemPressed() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemPressed"]);
	};

	public function ItemPressed(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemPressed", item, column]);
	};

	public function ConnectItemSelectionChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectItemSelectionChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectItemSelectionChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectItemSelectionChanged"]);
	};

	public function ItemSelectionChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ItemSelectionChanged"]);
	};

	public function ItemWidget(item:QTreeWidgetItem_ITF, column:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ItemWidget", item, column]);
	};

	public function ConnectMimeData(f:(items:Array<QTreeWidgetItem>) -> QMimeData) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMimeData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMimeData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMimeData"]);
	};

	public function MimeData(items:Array<QTreeWidgetItem>):QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeData", items]);
	};

	public function MimeDataDefault(items:Array<QTreeWidgetItem>):QMimeData {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeDataDefault", items]);
	};

	public function ConnectMimeTypes(f:() -> Array<String>) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMimeTypes", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMimeTypes() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMimeTypes"]);
	};

	public function MimeTypes():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeTypes"]);
	};

	public function MimeTypesDefault():Array<String> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MimeTypesDefault"]);
	};

	public function OpenPersistentEditor_QTreeView(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OpenPersistentEditor", item, column]);
	};

	public function RemoveItemWidget(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveItemWidget", item, column]);
	};

	public function ConnectScrollToItem(f:(item:QTreeWidgetItem, hint:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectScrollToItem", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectScrollToItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectScrollToItem"]);
	};

	public function ScrollToItem(item:QTreeWidgetItem_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToItem", item, hint]);
	};

	public function ScrollToItemDefault(item:QTreeWidgetItem_ITF, hint:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ScrollToItemDefault", item, hint]);
	};

	public function SelectedItems():Array<QTreeWidgetItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SelectedItems"]);
	};

	public function SetColumnCount(columns:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetColumnCount", columns]);
	};

	public function SetCurrentItem(item:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentItem", item]);
	};

	public function SetCurrentItem2(item:QTreeWidgetItem_ITF, column:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentItem2", item, column]);
	};

	public function SetCurrentItem3(item:QTreeWidgetItem_ITF, column:Int, command:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCurrentItem3", item, column, command]);
	};

	public function SetHeaderItem(item:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHeaderItem", item]);
	};

	public function SetHeaderLabel(label:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHeaderLabel", label]);
	};

	public function SetHeaderLabels(labels:Array<String>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHeaderLabels", labels]);
	};

	public function SetItemWidget(item:QTreeWidgetItem_ITF, column:Int, widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetItemWidget", item, column, widget]);
	};

	public function SortColumn():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SortColumn"]);
	};

	public function SortItems(column:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortItems", column, order]);
	};

	public function ConnectSupportedDropActions(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectSupportedDropActions",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectSupportedDropActions() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSupportedDropActions"]);
	};

	public function SupportedDropActions():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedDropActions"]);
	};

	public function SupportedDropActionsDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SupportedDropActionsDefault"]);
	};

	public function TakeTopLevelItem(index:Int):QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeTopLevelItem", index]);
	};

	public function TopLevelItem(index:Int):QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TopLevelItem", index]);
	};

	public function TopLevelItemCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TopLevelItemCount"]);
	};

	public function VisualItemRect(item:QTreeWidgetItem_ITF):QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisualItemRect", item]);
	};

	public function ConnectDestroyQTreeWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQTreeWidget",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQTreeWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTreeWidget"]);
	};

	public function DestroyQTreeWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTreeWidget"]);
	};

	public function DestroyQTreeWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTreeWidgetDefault"]);
	};
}

function NewQTreeWidgetFromPointer(ptr:String):QTreeWidget {
	final r = new QTreeWidget();
	r.initFrom(ptr, "widgets.QTreeWidget");
	return r;
}

function NewQTreeWidget(parent:QWidget_ITF):QTreeWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeWidget", "", parent]);
}

interface QTreeWidgetItem_ITF {
	public function QTreeWidgetItem_PTR():QTreeWidgetItem;
}

class QTreeWidgetItem extends Internal implements QTreeWidgetItem_ITF {
	public function new() {
		super();
	}

	public function QTreeWidgetItem_PTR():QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTreeWidgetItem_PTR"]);
	};

	public function AddChild(child:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddChild", child]);
	};

	public function AddChildren(children:Array<QTreeWidgetItem>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddChildren", children]);
	};

	public function Background(column:Int):QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Background", column]);
	};

	public function CheckState(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CheckState", column]);
	};

	public function Child(index:Int):QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Child", index]);
	};

	public function ChildCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildCount"]);
	};

	public function ChildIndicatorPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildIndicatorPolicy"]);
	};

	public function ConnectClone(f:() -> QTreeWidgetItem) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClone", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClone() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClone"]);
	};

	public function Clone():QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Clone"]);
	};

	public function CloneDefault():QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CloneDefault"]);
	};

	public function ColumnCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ColumnCount"]);
	};

	public function ConnectData(f:(column:Int, role:Int) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectData"]);
	};

	public function Data(column:Int, role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Data", column, role]);
	};

	public function DataDefault(column:Int, role:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DataDefault", column, role]);
	};

	public function EmitDataChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "EmitDataChanged"]);
	};

	public function Flags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Flags"]);
	};

	public function Font(column:Int):QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font", column]);
	};

	public function Foreground(column:Int):QBrush {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Foreground", column]);
	};

	public function Icon(column:Int):QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Icon", column]);
	};

	public function IndexOfChild(child:QTreeWidgetItem_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IndexOfChild", child]);
	};

	public function InsertChild(index:Int, child:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertChild", index, child]);
	};

	public function InsertChildren(index:Int, children:Array<QTreeWidgetItem>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertChildren", index, children]);
	};

	public function IsDisabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsDisabled"]);
	};

	public function IsExpanded():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsExpanded"]);
	};

	public function IsFirstColumnSpanned():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsFirstColumnSpanned"]);
	};

	public function IsHidden():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsHidden"]);
	};

	public function IsSelected():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsSelected"]);
	};

	public function Parent():QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Parent"]);
	};

	public function ConnectRead(f:(i:QDataStream) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRead", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRead() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRead"]);
	};

	public function Read(i:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Read", i]);
	};

	public function ReadDefault(i:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ReadDefault", i]);
	};

	public function RemoveChild(child:QTreeWidgetItem_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveChild", child]);
	};

	public function SetBackground(column:Int, brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBackground", column, brush]);
	};

	public function SetCheckState(column:Int, state:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCheckState", column, state]);
	};

	public function SetChildIndicatorPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetChildIndicatorPolicy", policy]);
	};

	public function ConnectSetData(f:(column:Int, role:Int, value:QVariant) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetData", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetData() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetData"]);
	};

	public function SetData(column:Int, role:Int, value:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetData", column, role, value]);
	};

	public function SetDataDefault(column:Int, role:Int, value:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDataDefault", column, role, value]);
	};

	public function SetDisabled(disabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDisabled", disabled]);
	};

	public function SetExpanded(expand:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetExpanded", expand]);
	};

	public function SetFirstColumnSpanned(span:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFirstColumnSpanned", span]);
	};

	public function SetFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFlags", flags]);
	};

	public function SetFont(column:Int, font:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", column, font]);
	};

	public function SetForeground(column:Int, brush:QBrush_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetForeground", column, brush]);
	};

	public function SetHidden(hide:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHidden", hide]);
	};

	public function SetIcon(column:Int, icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIcon", column, icon]);
	};

	public function SetSelected(sele:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSelected", sele]);
	};

	public function SetSizeHint(column:Int, size:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizeHint", column, size]);
	};

	public function SetStatusTip(column:Int, statusTip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStatusTip", column, statusTip]);
	};

	public function SetText(column:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", column, text]);
	};

	public function SetTextAlignment(column:Int, alignment:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTextAlignment", column, alignment]);
	};

	public function SetToolTip(column:Int, toolTip:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolTip", column, toolTip]);
	};

	public function SetWhatsThis(column:Int, whatsThis:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWhatsThis", column, whatsThis]);
	};

	public function SizeHint(column:Int):QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint", column]);
	};

	public function SortChildren(column:Int, order:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SortChildren", column, order]);
	};

	public function StatusTip(column:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StatusTip", column]);
	};

	public function TakeChild(index:Int):QTreeWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeChild", index]);
	};

	public function TakeChildren():Array<QTreeWidgetItem> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TakeChildren"]);
	};

	public function Text(column:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text", column]);
	};

	public function TextAlignment(column:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TextAlignment", column]);
	};

	public function ToolTip(column:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolTip", column]);
	};

	public function TreeWidget():QTreeWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TreeWidget"]);
	};

	public function Type():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Type"]);
	};

	public function WhatsThis(column:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WhatsThis", column]);
	};

	public function ConnectWrite(f:(out:QDataStream) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWrite", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWrite() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWrite"]);
	};

	public function Write(out:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Write", out]);
	};

	public function WriteDefault(out:QDataStream_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WriteDefault", out]);
	};

	public function ConnectDestroyQTreeWidgetItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQTreeWidgetItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQTreeWidgetItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQTreeWidgetItem"]);
	};

	public function DestroyQTreeWidgetItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTreeWidgetItem"]);
	};

	public function DestroyQTreeWidgetItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQTreeWidgetItemDefault"]);
	};
}

function NewQTreeWidgetItemFromPointer(ptr:String):QTreeWidgetItem {
	final r = new QTreeWidgetItem();
	r.initFrom(ptr, "widgets.QTreeWidgetItem");
	return r;
}

function NewQTreeWidgetItem(ty:Int):QTreeWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeWidgetItem", "", ty]);
}

function NewQTreeWidgetItem2(stri:Array<String>, ty:Int):QTreeWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeWidgetItem2", "", stri, ty]);
}

function NewQTreeWidgetItem3(parent:QTreeWidget_ITF, ty:Int):QTreeWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeWidgetItem3", "", parent, ty]);
}

function NewQTreeWidgetItem4(parent:QTreeWidget_ITF, stri:Array<String>, ty:Int):QTreeWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeWidgetItem4", "", parent, stri, ty]);
}

function NewQTreeWidgetItem5(parent:QTreeWidget_ITF, preceding:QTreeWidgetItem_ITF, ty:Int):QTreeWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeWidgetItem5", "", parent, preceding, ty]);
}

function NewQTreeWidgetItem6(parent:QTreeWidgetItem_ITF, ty:Int):QTreeWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeWidgetItem6", "", parent, ty]);
}

function NewQTreeWidgetItem7(parent:QTreeWidgetItem_ITF, stri:Array<String>, ty:Int):QTreeWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeWidgetItem7", "", parent, stri, ty]);
}

function NewQTreeWidgetItem8(parent:QTreeWidgetItem_ITF, preceding:QTreeWidgetItem_ITF, ty:Int):QTreeWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeWidgetItem8", "", parent, preceding, ty]);
}

function NewQTreeWidgetItem9(other:QTreeWidgetItem_ITF):QTreeWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQTreeWidgetItem9", "", other]);
}

interface QTreeWidgetItemIterator_ITF {
	public function QTreeWidgetItemIterator_PTR():QTreeWidgetItemIterator;
}

class QTreeWidgetItemIterator extends Internal implements QTreeWidgetItemIterator_ITF {
	public function new() {
		super();
	}

	public function QTreeWidgetItemIterator_PTR():QTreeWidgetItemIterator {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QTreeWidgetItemIterator_PTR"]);
	};
}

interface QUndoCommand_ITF {
	public function QUndoCommand_PTR():QUndoCommand;
}

class QUndoCommand extends Internal implements QUndoCommand_ITF {
	public function new() {
		super();
	}

	public function QUndoCommand_PTR():QUndoCommand {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QUndoCommand_PTR"]);
	};

	public function ActionText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActionText"]);
	};

	public function Child(index:Int):QUndoCommand {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Child", index]);
	};

	public function ChildCount():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildCount"]);
	};

	public function ConnectId(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectId", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectId() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectId"]);
	};

	public function Id():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Id"]);
	};

	public function IdDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IdDefault"]);
	};

	public function IsObsolete():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsObsolete"]);
	};

	public function ConnectMergeWith(f:(command:QUndoCommand) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMergeWith", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMergeWith() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMergeWith"]);
	};

	public function MergeWith(command:QUndoCommand_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MergeWith", command]);
	};

	public function MergeWithDefault(command:QUndoCommand_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MergeWithDefault", command]);
	};

	public function ConnectRedo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRedo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRedo"]);
	};

	public function Redo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Redo"]);
	};

	public function RedoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RedoDefault"]);
	};

	public function SetObsolete(obsolete:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetObsolete", obsolete]);
	};

	public function SetText(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetText", text]);
	};

	public function Text():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text"]);
	};

	public function ConnectUndo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUndo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUndo"]);
	};

	public function Undo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Undo"]);
	};

	public function UndoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UndoDefault"]);
	};

	public function ConnectDestroyQUndoCommand(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQUndoCommand",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQUndoCommand() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQUndoCommand"]);
	};

	public function DestroyQUndoCommand() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQUndoCommand"]);
	};

	public function DestroyQUndoCommandDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQUndoCommandDefault"]);
	};
}

function NewQUndoCommandFromPointer(ptr:String):QUndoCommand {
	final r = new QUndoCommand();
	r.initFrom(ptr, "widgets.QUndoCommand");
	return r;
}

function NewQUndoCommand(parent:QUndoCommand_ITF):QUndoCommand {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQUndoCommand", "", parent]);
}

function NewQUndoCommand2(text:String, parent:QUndoCommand_ITF):QUndoCommand {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQUndoCommand2", "", text, parent]);
}

interface QUndoGroup_ITF extends QObject_ITF {
	public function QUndoGroup_PTR():QUndoGroup;
}

class QUndoGroup extends QObject implements QUndoGroup_ITF {
	public function new() {
		super();
	}

	public function QUndoGroup_PTR():QUndoGroup {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QUndoGroup_PTR"]);
	};

	public function ActiveStack():QUndoStack {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ActiveStack"]);
	};

	public function ConnectActiveStackChanged(f:(stack:QUndoStack) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectActiveStackChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectActiveStackChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActiveStackChanged"]);
	};

	public function ActiveStackChanged(stack:QUndoStack_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActiveStackChanged", stack]);
	};

	public function AddStack(stack:QUndoStack_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddStack", stack]);
	};

	public function CanRedo():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanRedo"]);
	};

	public function ConnectCanRedoChanged(f:(canRedo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCanRedoChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCanRedoChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCanRedoChanged"]);
	};

	public function CanRedoChanged(canRedo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CanRedoChanged", canRedo]);
	};

	public function CanUndo():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanUndo"]);
	};

	public function ConnectCanUndoChanged(f:(canUndo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCanUndoChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCanUndoChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCanUndoChanged"]);
	};

	public function CanUndoChanged(canUndo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CanUndoChanged", canUndo]);
	};

	public function ConnectCleanChanged(f:(clean:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCleanChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCleanChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCleanChanged"]);
	};

	public function CleanChanged(clean:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CleanChanged", clean]);
	};

	public function CreateRedoAction(parent:QObject_ITF, prefix:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateRedoAction", parent, prefix]);
	};

	public function CreateUndoAction(parent:QObject_ITF, prefix:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateUndoAction", parent, prefix]);
	};

	public function ConnectIndexChanged(f:(idx:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndexChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIndexChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndexChanged"]);
	};

	public function IndexChanged(idx:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "IndexChanged", idx]);
	};

	public function IsClean():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsClean"]);
	};

	public function ConnectRedo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRedo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRedo"]);
	};

	public function Redo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Redo"]);
	};

	public function RedoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RedoDefault"]);
	};

	public function RedoText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RedoText"]);
	};

	public function ConnectRedoTextChanged(f:(redoText:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRedoTextChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRedoTextChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRedoTextChanged"]);
	};

	public function RedoTextChanged(redoText:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RedoTextChanged", redoText]);
	};

	public function RemoveStack(stack:QUndoStack_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveStack", stack]);
	};

	public function ConnectSetActiveStack(f:(stack:QUndoStack) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetActiveStack", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetActiveStack() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetActiveStack"]);
	};

	public function SetActiveStack(stack:QUndoStack_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActiveStack", stack]);
	};

	public function SetActiveStackDefault(stack:QUndoStack_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActiveStackDefault", stack]);
	};

	public function Stacks():Array<QUndoStack> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Stacks"]);
	};

	public function ConnectUndo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUndo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUndo"]);
	};

	public function Undo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Undo"]);
	};

	public function UndoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UndoDefault"]);
	};

	public function UndoText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UndoText"]);
	};

	public function ConnectUndoTextChanged(f:(undoText:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUndoTextChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUndoTextChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUndoTextChanged"]);
	};

	public function UndoTextChanged(undoText:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UndoTextChanged", undoText]);
	};

	public function ConnectDestroyQUndoGroup(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQUndoGroup", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQUndoGroup() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQUndoGroup"]);
	};

	public function DestroyQUndoGroup() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQUndoGroup"]);
	};

	public function DestroyQUndoGroupDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQUndoGroupDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQUndoGroupFromPointer(ptr:String):QUndoGroup {
	final r = new QUndoGroup();
	r.initFrom(ptr, "widgets.QUndoGroup");
	return r;
}

function NewQUndoGroup(parent:QObject_ITF):QUndoGroup {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQUndoGroup", "", parent]);
}

interface QUndoStack_ITF extends QObject_ITF {
	public function QUndoStack_PTR():QUndoStack;
}

class QUndoStack extends QObject implements QUndoStack_ITF {
	public function new() {
		super();
	}

	public function QUndoStack_PTR():QUndoStack {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QUndoStack_PTR"]);
	};

	public function BeginMacro(text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "BeginMacro", text]);
	};

	public function CanRedo():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanRedo"]);
	};

	public function ConnectCanRedoChanged(f:(canRedo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCanRedoChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCanRedoChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCanRedoChanged"]);
	};

	public function CanRedoChanged(canRedo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CanRedoChanged", canRedo]);
	};

	public function CanUndo():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CanUndo"]);
	};

	public function ConnectCanUndoChanged(f:(canUndo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCanUndoChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCanUndoChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCanUndoChanged"]);
	};

	public function CanUndoChanged(canUndo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CanUndoChanged", canUndo]);
	};

	public function ConnectCleanChanged(f:(clean:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCleanChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCleanChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCleanChanged"]);
	};

	public function CleanChanged(clean:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CleanChanged", clean]);
	};

	public function CleanIndex():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CleanIndex"]);
	};

	public function Clear() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Clear"]);
	};

	public function Command(index:Int):QUndoCommand {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Command", index]);
	};

	public function Count():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Count"]);
	};

	public function CreateRedoAction(parent:QObject_ITF, prefix:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateRedoAction", parent, prefix]);
	};

	public function CreateUndoAction(parent:QObject_ITF, prefix:String):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateUndoAction", parent, prefix]);
	};

	public function EndMacro() {
		Internal.callLocalFunction(["", Pointer(), ___className, "EndMacro"]);
	};

	public function Index():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Index"]);
	};

	public function ConnectIndexChanged(f:(idx:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIndexChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIndexChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIndexChanged"]);
	};

	public function IndexChanged(idx:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "IndexChanged", idx]);
	};

	public function IsActive():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsActive"]);
	};

	public function IsClean():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsClean"]);
	};

	public function Push(cmd:QUndoCommand_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Push", cmd]);
	};

	public function ConnectRedo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRedo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRedo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRedo"]);
	};

	public function Redo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Redo"]);
	};

	public function RedoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RedoDefault"]);
	};

	public function RedoText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RedoText"]);
	};

	public function ConnectRedoTextChanged(f:(redoText:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRedoTextChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRedoTextChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRedoTextChanged"]);
	};

	public function RedoTextChanged(redoText:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RedoTextChanged", redoText]);
	};

	public function ConnectResetClean(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectResetClean", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectResetClean() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResetClean"]);
	};

	public function ResetClean() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetClean"]);
	};

	public function ResetCleanDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResetCleanDefault"]);
	};

	public function ConnectSetActive(f:(active:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetActive", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetActive() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetActive"]);
	};

	public function SetActive(active:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActive", active]);
	};

	public function SetActiveDefault(active:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetActiveDefault", active]);
	};

	public function ConnectSetClean(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetClean", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetClean() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetClean"]);
	};

	public function SetClean() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetClean"]);
	};

	public function SetCleanDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCleanDefault"]);
	};

	public function ConnectSetIndex(f:(idx:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetIndex", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetIndex() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetIndex"]);
	};

	public function SetIndex(idx:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIndex", idx]);
	};

	public function SetIndexDefault(idx:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetIndexDefault", idx]);
	};

	public function SetUndoLimit(limit:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUndoLimit", limit]);
	};

	public function Text(idx:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Text", idx]);
	};

	public function ConnectUndo(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUndo", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUndo() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUndo"]);
	};

	public function Undo() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Undo"]);
	};

	public function UndoDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UndoDefault"]);
	};

	public function UndoLimit():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UndoLimit"]);
	};

	public function UndoText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UndoText"]);
	};

	public function ConnectUndoTextChanged(f:(undoText:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUndoTextChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUndoTextChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUndoTextChanged"]);
	};

	public function UndoTextChanged(undoText:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UndoTextChanged", undoText]);
	};

	public function ConnectDestroyQUndoStack(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQUndoStack", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQUndoStack() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQUndoStack"]);
	};

	public function DestroyQUndoStack() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQUndoStack"]);
	};

	public function DestroyQUndoStackDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQUndoStackDefault"]);
	};

	public override function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public override function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public override function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public override function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public override function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public override function EventDefault(e:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", e]);
	};

	public override function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public override function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public override function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQUndoStackFromPointer(ptr:String):QUndoStack {
	final r = new QUndoStack();
	r.initFrom(ptr, "widgets.QUndoStack");
	return r;
}

function NewQUndoStack(parent:QObject_ITF):QUndoStack {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQUndoStack", "", parent]);
}

interface QUndoView_ITF extends QListView_ITF {
	public function QUndoView_PTR():QUndoView;
}

class QUndoView extends QListView implements QUndoView_ITF {
	public function new() {
		super();
	}

	public function QUndoView_PTR():QUndoView {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QUndoView_PTR"]);
	};

	public function CleanIcon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CleanIcon"]);
	};

	public function EmptyLabel():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EmptyLabel"]);
	};

	public function Group():QUndoGroup {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Group"]);
	};

	public function SetCleanIcon(icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCleanIcon", icon]);
	};

	public function SetEmptyLabel(label:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEmptyLabel", label]);
	};

	public function ConnectSetGroup(f:(group:QUndoGroup) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetGroup", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetGroup() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetGroup"]);
	};

	public function SetGroup(group:QUndoGroup_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGroup", group]);
	};

	public function SetGroupDefault(group:QUndoGroup_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGroupDefault", group]);
	};

	public function ConnectSetStack(f:(stack:QUndoStack) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetStack", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetStack() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetStack"]);
	};

	public function SetStack(stack:QUndoStack_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStack", stack]);
	};

	public function SetStackDefault(stack:QUndoStack_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStackDefault", stack]);
	};

	public function Stack():QUndoStack {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Stack"]);
	};

	public function ConnectDestroyQUndoView(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQUndoView", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQUndoView() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQUndoView"]);
	};

	public function DestroyQUndoView() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQUndoView"]);
	};

	public function DestroyQUndoViewDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQUndoViewDefault"]);
	};
}

function NewQUndoViewFromPointer(ptr:String):QUndoView {
	final r = new QUndoView();
	r.initFrom(ptr, "widgets.QUndoView");
	return r;
}

function NewQUndoView(parent:QWidget_ITF):QUndoView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQUndoView", "", parent]);
}

function NewQUndoView2(stack:QUndoStack_ITF, parent:QWidget_ITF):QUndoView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQUndoView2", "", stack, parent]);
}

function NewQUndoView3(group:QUndoGroup_ITF, parent:QWidget_ITF):QUndoView {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQUndoView3", "", group, parent]);
}

interface QVBoxLayout_ITF extends QBoxLayout_ITF {
	public function QVBoxLayout_PTR():QVBoxLayout;
}

class QVBoxLayout extends QBoxLayout implements QVBoxLayout_ITF {
	public function new() {
		super();
	}

	public function QVBoxLayout_PTR():QVBoxLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QVBoxLayout_PTR"]);
	};

	public function ConnectDestroyQVBoxLayout(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQVBoxLayout",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQVBoxLayout() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQVBoxLayout"]);
	};

	public function DestroyQVBoxLayout() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQVBoxLayout"]);
	};

	public function DestroyQVBoxLayoutDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQVBoxLayoutDefault"]);
	};
}

function NewQVBoxLayoutFromPointer(ptr:String):QVBoxLayout {
	final r = new QVBoxLayout();
	r.initFrom(ptr, "widgets.QVBoxLayout");
	return r;
}

function NewQVBoxLayout():QVBoxLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQVBoxLayout", ""]);
}

function NewQVBoxLayout2(parent:QWidget_ITF):QVBoxLayout {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQVBoxLayout2", "", parent]);
}

interface QWhatsThis_ITF {
	public function QWhatsThis_PTR():QWhatsThis;
}

class QWhatsThis extends Internal implements QWhatsThis_ITF {
	public function new() {
		super();
	}

	public function QWhatsThis_PTR():QWhatsThis {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QWhatsThis_PTR"]);
	};

	public function DestroyQWhatsThis() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWhatsThis"]);
	};

	public function CreateAction(parent:QObject_ITF):QAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateAction", parent]);
	};

	public function EnterWhatsThisMode() {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnterWhatsThisMode"]);
	};

	public function HideText() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideText"]);
	};

	public function InWhatsThisMode():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InWhatsThisMode"]);
	};

	public function LeaveWhatsThisMode() {
		Internal.callLocalFunction(["", Pointer(), ___className, "LeaveWhatsThisMode"]);
	};

	public function ShowText(pos:QPoint_ITF, text:String, w:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowText", pos, text, w]);
	};
}

function NewQWhatsThisFromPointer(ptr:String):QWhatsThis {
	final r = new QWhatsThis();
	r.initFrom(ptr, "widgets.QWhatsThis");
	return r;
}

function QWhatsThis_CreateAction(parent:QObject_ITF):QAction {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QWhatsThis_CreateAction", "", parent]);
}

function QWhatsThis_EnterWhatsThisMode() {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QWhatsThis_EnterWhatsThisMode", ""]);
}

function QWhatsThis_HideText() {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QWhatsThis_HideText", ""]);
}

function QWhatsThis_InWhatsThisMode():Bool {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QWhatsThis_InWhatsThisMode", ""]);
}

function QWhatsThis_LeaveWhatsThisMode() {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QWhatsThis_LeaveWhatsThisMode", ""]);
}

function QWhatsThis_ShowText(pos:QPoint_ITF, text:String, w:QWidget_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QWhatsThis_ShowText", "", pos, text, w]);
}

interface QWidget_ITF extends QPaintDevice_ITF {
	public function QWidget_PTR():QWidget;
	public function QObject_PTR():QObject;
}

class QWidget extends QPaintDevice implements QWidget_ITF {
	public function QObject_PTR():QObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QObject_PTR"]);
	}

	public function new() {
		super();
	}

	public function QWidget_PTR():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QWidget_PTR"]);
	};

	public function AcceptDrops():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AcceptDrops"]);
	};

	public function AccessibleDescription():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AccessibleDescription"]);
	};

	public function AccessibleName():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AccessibleName"]);
	};

	public function ConnectActionEvent(f:(event:QActionEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectActionEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectActionEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectActionEvent"]);
	};

	public function ActionEvent(event:QActionEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActionEvent", event]);
	};

	public function ActionEventDefault(event:QActionEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActionEventDefault", event]);
	};

	public function Actions():Array<QAction> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Actions"]);
	};

	public function ActivateWindow() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ActivateWindow"]);
	};

	public function AddAction(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddAction", action]);
	};

	public function AddActions(actions:Array<QAction>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "AddActions", actions]);
	};

	public function AdjustSize() {
		Internal.callLocalFunction(["", Pointer(), ___className, "AdjustSize"]);
	};

	public function AutoFillBackground():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AutoFillBackground"]);
	};

	public function BackgroundRole():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BackgroundRole"]);
	};

	public function BackingStore():QBackingStore {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BackingStore"]);
	};

	public function BaseSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "BaseSize"]);
	};

	public function ConnectChangeEvent(f:(event:QEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectChangeEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectChangeEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectChangeEvent"]);
	};

	public function ChangeEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChangeEvent", event]);
	};

	public function ChangeEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChangeEventDefault", event]);
	};

	public function ChildAt(x:Int, y:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildAt", x, y]);
	};

	public function ChildAt2(p:QPoint_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildAt2", p]);
	};

	public function ChildrenRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildrenRect"]);
	};

	public function ChildrenRegion():QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ChildrenRegion"]);
	};

	public function ClearFocus() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearFocus"]);
	};

	public function ClearMask() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ClearMask"]);
	};

	public function ConnectClose(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectClose", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectClose() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectClose"]);
	};

	public function Close():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Close"]);
	};

	public function CloseDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CloseDefault"]);
	};

	public function ConnectCloseEvent(f:(event:QCloseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCloseEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCloseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCloseEvent"]);
	};

	public function CloseEvent(event:QCloseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseEvent", event]);
	};

	public function CloseEventDefault(event:QCloseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CloseEventDefault", event]);
	};

	public function ContentsMargins():QMargins {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ContentsMargins"]);
	};

	public function ContentsRect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ContentsRect"]);
	};

	public function ConnectContextMenuEvent(f:(event:QContextMenuEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectContextMenuEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectContextMenuEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectContextMenuEvent"]);
	};

	public function ContextMenuEvent(event:QContextMenuEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ContextMenuEvent", event]);
	};

	public function ContextMenuEventDefault(event:QContextMenuEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ContextMenuEventDefault", event]);
	};

	public function ContextMenuPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ContextMenuPolicy"]);
	};

	public function Create(window:Int, initializeWindow:Bool, destroyOldWindow:Bool) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"Create",
			window,
			initializeWindow,
			destroyOldWindow
		]);
	};

	public function CreateWindowContainer(window:QWindow_ITF, parent:QWidget_ITF, flags:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateWindowContainer", window, parent, flags]);
	};

	public function Cursor():QCursor {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Cursor"]);
	};

	public function ConnectCustomContextMenuRequested(f:(pos:QPoint) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCustomContextMenuRequested",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCustomContextMenuRequested() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCustomContextMenuRequested"]);
	};

	public function CustomContextMenuRequested(pos:QPoint_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomContextMenuRequested", pos]);
	};

	public function Destroy(destroyWindow:Bool, destroySubWindows:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Destroy", destroyWindow, destroySubWindows]);
	};

	public function ConnectDragEnterEvent(f:(event:QDragEnterEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDragEnterEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDragEnterEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDragEnterEvent"]);
	};

	public function DragEnterEvent(event:QDragEnterEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragEnterEvent", event]);
	};

	public function DragEnterEventDefault(event:QDragEnterEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragEnterEventDefault", event]);
	};

	public function ConnectDragLeaveEvent(f:(event:QDragLeaveEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDragLeaveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDragLeaveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDragLeaveEvent"]);
	};

	public function DragLeaveEvent(event:QDragLeaveEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragLeaveEvent", event]);
	};

	public function DragLeaveEventDefault(event:QDragLeaveEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragLeaveEventDefault", event]);
	};

	public function ConnectDragMoveEvent(f:(event:QDragMoveEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDragMoveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDragMoveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDragMoveEvent"]);
	};

	public function DragMoveEvent(event:QDragMoveEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragMoveEvent", event]);
	};

	public function DragMoveEventDefault(event:QDragMoveEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DragMoveEventDefault", event]);
	};

	public function ConnectDropEvent(f:(event:QDropEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDropEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDropEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDropEvent"]);
	};

	public function DropEvent(event:QDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DropEvent", event]);
	};

	public function DropEventDefault(event:QDropEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DropEventDefault", event]);
	};

	public function EffectiveWinId():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EffectiveWinId"]);
	};

	public function EnsurePolished() {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnsurePolished"]);
	};

	public function ConnectEnterEvent(f:(event:QEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEnterEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEnterEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEnterEvent"]);
	};

	public function EnterEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnterEvent", event]);
	};

	public function EnterEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "EnterEventDefault", event]);
	};

	public function ConnectEvent(f:(event:QEvent) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectEvent"]);
	};

	public function Event(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Event", event]);
	};

	public function EventDefault(event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventDefault", event]);
	};

	public function Find(id:Int):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Find", id]);
	};

	public function ConnectFocusInEvent(f:(event:QFocusEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFocusInEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFocusInEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusInEvent"]);
	};

	public function FocusInEvent(event:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusInEvent", event]);
	};

	public function FocusInEventDefault(event:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusInEventDefault", event]);
	};

	public function FocusNextChild():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusNextChild"]);
	};

	public function ConnectFocusNextPrevChild(f:(next:Bool) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectFocusNextPrevChild",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectFocusNextPrevChild() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusNextPrevChild"]);
	};

	public function FocusNextPrevChild(next:Bool):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusNextPrevChild", next]);
	};

	public function FocusNextPrevChildDefault(next:Bool):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusNextPrevChildDefault", next]);
	};

	public function ConnectFocusOutEvent(f:(event:QFocusEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectFocusOutEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectFocusOutEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectFocusOutEvent"]);
	};

	public function FocusOutEvent(event:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusOutEvent", event]);
	};

	public function FocusOutEventDefault(event:QFocusEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "FocusOutEventDefault", event]);
	};

	public function FocusPolicy():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusPolicy"]);
	};

	public function FocusPreviousChild():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusPreviousChild"]);
	};

	public function FocusProxy():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusProxy"]);
	};

	public function FocusWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FocusWidget"]);
	};

	public function Font():QFont {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Font"]);
	};

	public function FontInfo():QFontInfo {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FontInfo"]);
	};

	public function FontMetrics():QFontMetrics {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FontMetrics"]);
	};

	public function ForegroundRole():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ForegroundRole"]);
	};

	public function FrameGeometry():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FrameGeometry"]);
	};

	public function FrameSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "FrameSize"]);
	};

	public function Geometry():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Geometry"]);
	};

	public function GetContentsMargins(left:Int, top:Int, right:Int, bottom:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GetContentsMargins", left, top, right, bottom]);
	};

	public function Grab(rectangle:QRect_ITF):QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Grab", rectangle]);
	};

	public function GrabGesture(gesture:Int, flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabGesture", gesture, flags]);
	};

	public function GrabKeyboard() {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabKeyboard"]);
	};

	public function GrabMouse() {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabMouse"]);
	};

	public function GrabMouse2(cursor:QCursor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "GrabMouse2", cursor]);
	};

	public function GrabShortcut(key:QKeySequence_ITF, context:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GrabShortcut", key, context]);
	};

	public function GraphicsEffect():QGraphicsEffect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GraphicsEffect"]);
	};

	public function GraphicsProxyWidget():QGraphicsProxyWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GraphicsProxyWidget"]);
	};

	public function HasEditFocus():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasEditFocus"]);
	};

	public function HasFocus():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasFocus"]);
	};

	public function ConnectHasHeightForWidth(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHasHeightForWidth", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHasHeightForWidth() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHasHeightForWidth"]);
	};

	public function HasHeightForWidth():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasHeightForWidth"]);
	};

	public function HasHeightForWidthDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasHeightForWidthDefault"]);
	};

	public function HasMouseTracking():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasMouseTracking"]);
	};

	public function HasTabletTracking():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasTabletTracking"]);
	};

	public override function Height():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Height"]);
	};

	public function ConnectHeightForWidth(f:(w:Int) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHeightForWidth", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHeightForWidth() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHeightForWidth"]);
	};

	public function HeightForWidth(w:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HeightForWidth", w]);
	};

	public function HeightForWidthDefault(w:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HeightForWidthDefault", w]);
	};

	public function ConnectHide(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHide", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHide() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHide"]);
	};

	public function Hide() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Hide"]);
	};

	public function HideDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideDefault"]);
	};

	public function ConnectHideEvent(f:(event:QHideEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHideEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHideEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHideEvent"]);
	};

	public function HideEvent(event:QHideEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideEvent", event]);
	};

	public function HideEventDefault(event:QHideEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "HideEventDefault", event]);
	};

	public function ConnectInitPainter(f:(painter:QPainter) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInitPainter", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInitPainter() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInitPainter"]);
	};

	public function InitPainter(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitPainter", painter]);
	};

	public function InitPainterDefault(painter:QPainter_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitPainterDefault", painter]);
	};

	public function ConnectInputMethodEvent(f:(event:QInputMethodEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInputMethodEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInputMethodEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInputMethodEvent"]);
	};

	public function InputMethodEvent(event:QInputMethodEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodEvent", event]);
	};

	public function InputMethodEventDefault(event:QInputMethodEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodEventDefault", event]);
	};

	public function InputMethodHints():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodHints"]);
	};

	public function ConnectInputMethodQuery(f:(query:Int) -> QVariant) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInputMethodQuery", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInputMethodQuery() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInputMethodQuery"]);
	};

	public function InputMethodQuery(query:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodQuery", query]);
	};

	public function InputMethodQueryDefault(query:Int):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "InputMethodQueryDefault", query]);
	};

	public function InsertAction(before:QAction_ITF, action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertAction", before, action]);
	};

	public function InsertActions(before:QAction_ITF, actions:Array<QAction>) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InsertActions", before, actions]);
	};

	public function IsActiveWindow():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsActiveWindow"]);
	};

	public function IsAncestorOf(child:QWidget_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsAncestorOf", child]);
	};

	public function IsEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEnabled"]);
	};

	public function IsEnabledTo(ancestor:QWidget_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEnabledTo", ancestor]);
	};

	public function IsFullScreen():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsFullScreen"]);
	};

	public function IsHidden():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsHidden"]);
	};

	public function IsMaximized():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsMaximized"]);
	};

	public function IsMinimized():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsMinimized"]);
	};

	public function IsModal():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsModal"]);
	};

	public function IsVisible():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsVisible"]);
	};

	public function IsVisibleTo(ancestor:QWidget_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsVisibleTo", ancestor]);
	};

	public function IsWindow():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsWindow"]);
	};

	public function IsWindowModified():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsWindowModified"]);
	};

	public function ConnectKeyPressEvent(f:(event:QKeyEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectKeyPressEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectKeyPressEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectKeyPressEvent"]);
	};

	public function KeyPressEvent(event:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyPressEvent", event]);
	};

	public function KeyPressEventDefault(event:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyPressEventDefault", event]);
	};

	public function ConnectKeyReleaseEvent(f:(event:QKeyEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectKeyReleaseEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectKeyReleaseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectKeyReleaseEvent"]);
	};

	public function KeyReleaseEvent(event:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyReleaseEvent", event]);
	};

	public function KeyReleaseEventDefault(event:QKeyEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "KeyReleaseEventDefault", event]);
	};

	public function KeyboardGrabber():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "KeyboardGrabber"]);
	};

	public function Layout():QLayout {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Layout"]);
	};

	public function LayoutDirection():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "LayoutDirection"]);
	};

	public function ConnectLeaveEvent(f:(event:QEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLeaveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLeaveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLeaveEvent"]);
	};

	public function LeaveEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "LeaveEvent", event]);
	};

	public function LeaveEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "LeaveEventDefault", event]);
	};

	public function Locale():QLocale {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Locale"]);
	};

	public function ConnectLower(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectLower", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectLower() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectLower"]);
	};

	public function Lower() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Lower"]);
	};

	public function LowerDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "LowerDefault"]);
	};

	public function MapFrom(parent:QWidget_ITF, pos:QPoint_ITF):QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFrom", parent, pos]);
	};

	public function MapFromGlobal(pos:QPoint_ITF):QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromGlobal", pos]);
	};

	public function MapFromParent(pos:QPoint_ITF):QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapFromParent", pos]);
	};

	public function MapTo(parent:QWidget_ITF, pos:QPoint_ITF):QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapTo", parent, pos]);
	};

	public function MapToGlobal(pos:QPoint_ITF):QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToGlobal", pos]);
	};

	public function MapToParent(pos:QPoint_ITF):QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MapToParent", pos]);
	};

	public function Mask():QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Mask"]);
	};

	public function MaximumHeight():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumHeight"]);
	};

	public function MaximumSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSize"]);
	};

	public function MaximumWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumWidth"]);
	};

	public override function ConnectMetric(f:(m:Int) -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMetric", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMetric() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMetric"]);
	};

	public override function Metric(m:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Metric", m]);
	};

	public override function MetricDefault(m:Int):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetricDefault", m]);
	};

	public function MinimumHeight():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumHeight"]);
	};

	public function MinimumSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSize"]);
	};

	public function ConnectMinimumSizeHint(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMinimumSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMinimumSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMinimumSizeHint"]);
	};

	public function MinimumSizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSizeHint"]);
	};

	public function MinimumSizeHintDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSizeHintDefault"]);
	};

	public function MinimumWidth():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumWidth"]);
	};

	public function ConnectMouseDoubleClickEvent(f:(event:QMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectMouseDoubleClickEvent",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectMouseDoubleClickEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMouseDoubleClickEvent"]);
	};

	public function MouseDoubleClickEvent(event:QMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseDoubleClickEvent", event]);
	};

	public function MouseDoubleClickEventDefault(event:QMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseDoubleClickEventDefault", event]);
	};

	public function MouseGrabber():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MouseGrabber"]);
	};

	public function ConnectMouseMoveEvent(f:(event:QMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMouseMoveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMouseMoveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMouseMoveEvent"]);
	};

	public function MouseMoveEvent(event:QMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseMoveEvent", event]);
	};

	public function MouseMoveEventDefault(event:QMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseMoveEventDefault", event]);
	};

	public function ConnectMousePressEvent(f:(event:QMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMousePressEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMousePressEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMousePressEvent"]);
	};

	public function MousePressEvent(event:QMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MousePressEvent", event]);
	};

	public function MousePressEventDefault(event:QMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MousePressEventDefault", event]);
	};

	public function ConnectMouseReleaseEvent(f:(event:QMouseEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMouseReleaseEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMouseReleaseEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMouseReleaseEvent"]);
	};

	public function MouseReleaseEvent(event:QMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseReleaseEvent", event]);
	};

	public function MouseReleaseEventDefault(event:QMouseEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MouseReleaseEventDefault", event]);
	};

	public function Move(vqp:QPoint_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Move", vqp]);
	};

	public function Move2(x:Int, y:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Move2", x, y]);
	};

	public function ConnectMoveEvent(f:(event:QMoveEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMoveEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectMoveEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMoveEvent"]);
	};

	public function MoveEvent(event:QMoveEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveEvent", event]);
	};

	public function MoveEventDefault(event:QMoveEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "MoveEventDefault", event]);
	};

	public function ConnectNativeEvent(f:(eventType:QByteArray, message:Int, result:Int) -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectNativeEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectNativeEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectNativeEvent"]);
	};

	public function NativeEvent(eventType:QByteArray_ITF, message:Int, result:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NativeEvent", eventType, message, result]);
	};

	public function NativeEventDefault(eventType:QByteArray_ITF, message:Int, result:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NativeEventDefault", eventType, message, result]);
	};

	public function NativeParentWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NativeParentWidget"]);
	};

	public function NextInFocusChain():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NextInFocusChain"]);
	};

	public function NormalGeometry():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NormalGeometry"]);
	};

	public function OverrideWindowFlags(flags:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "OverrideWindowFlags", flags]);
	};

	public override function ConnectPaintEngine(f:() -> QPaintEngine) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintEngine", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectPaintEngine() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintEngine"]);
	};

	public override function PaintEngine():QPaintEngine {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PaintEngine"]);
	};

	public function PaintEngineDefault():QPaintEngine {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PaintEngineDefault"]);
	};

	public function ConnectPaintEvent(f:(event:QPaintEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPaintEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPaintEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPaintEvent"]);
	};

	public function PaintEvent(event:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEvent", event]);
	};

	public function PaintEventDefault(event:QPaintEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PaintEventDefault", event]);
	};

	public function Palette():QPalette {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Palette"]);
	};

	public function ParentWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ParentWidget"]);
	};

	public function Pos():QPoint {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pos"]);
	};

	public function PreviousInFocusChain():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PreviousInFocusChain"]);
	};

	public function ConnectRaise(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRaise", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRaise() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRaise"]);
	};

	public function Raise() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Raise"]);
	};

	public function RaiseDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RaiseDefault"]);
	};

	public function Rect():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Rect"]);
	};

	public function ReleaseKeyboard() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ReleaseKeyboard"]);
	};

	public function ReleaseMouse() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ReleaseMouse"]);
	};

	public function ReleaseShortcut(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ReleaseShortcut", id]);
	};

	public function RemoveAction(action:QAction_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemoveAction", action]);
	};

	public function Render(target:QPaintDevice_ITF, targetOffset:QPoint_ITF, sourceRegion:QRegion_ITF, renderFlags:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"Render",
			target,
			targetOffset,
			sourceRegion,
			renderFlags
		]);
	};

	public function Render2(painter:QPainter_ITF, targetOffset:QPoint_ITF, sourceRegion:QRegion_ITF, renderFlags:Int) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"Render2",
			painter,
			targetOffset,
			sourceRegion,
			renderFlags
		]);
	};

	public function ConnectRepaint(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRepaint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRepaint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRepaint"]);
	};

	public function Repaint() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Repaint"]);
	};

	public function RepaintDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RepaintDefault"]);
	};

	public function Repaint2(x:Int, y:Int, w:Int, h:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Repaint2", x, y, w, h]);
	};

	public function Repaint3(rect:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Repaint3", rect]);
	};

	public function Repaint4(rgn:QRegion_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Repaint4", rgn]);
	};

	public function Resize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Resize", vqs]);
	};

	public function Resize2(w:Int, h:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Resize2", w, h]);
	};

	public function ConnectResizeEvent(f:(event:QResizeEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectResizeEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectResizeEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectResizeEvent"]);
	};

	public function ResizeEvent(event:QResizeEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeEvent", event]);
	};

	public function ResizeEventDefault(event:QResizeEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ResizeEventDefault", event]);
	};

	public function RestoreGeometry(geometry:QByteArray_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RestoreGeometry", geometry]);
	};

	public function SaveGeometry():QByteArray {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SaveGeometry"]);
	};

	public function Scroll(dx:Int, dy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Scroll", dx, dy]);
	};

	public function Scroll2(dx:Int, dy:Int, r:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Scroll2", dx, dy, r]);
	};

	public function SetAcceptDrops(on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAcceptDrops", on]);
	};

	public function SetAccessibleDescription(description:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAccessibleDescription", description]);
	};

	public function SetAccessibleName(name:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAccessibleName", name]);
	};

	public function SetAttribute(attribute:Int, on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAttribute", attribute, on]);
	};

	public function SetAutoFillBackground(enabled:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetAutoFillBackground", enabled]);
	};

	public function SetBackgroundRole(role:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBackgroundRole", role]);
	};

	public function SetBaseSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBaseSize", vqs]);
	};

	public function SetBaseSize2(basew:Int, baseh:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetBaseSize2", basew, baseh]);
	};

	public function SetContentsMargins(left:Int, top:Int, right:Int, bottom:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetContentsMargins", left, top, right, bottom]);
	};

	public function SetContentsMargins2(margins:QMargins_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetContentsMargins2", margins]);
	};

	public function SetContextMenuPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetContextMenuPolicy", policy]);
	};

	public function SetCursor(vqc:QCursor_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCursor", vqc]);
	};

	public function ConnectSetDisabled(f:(disable:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetDisabled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetDisabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetDisabled"]);
	};

	public function SetDisabled(disable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDisabled", disable]);
	};

	public function SetDisabledDefault(disable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDisabledDefault", disable]);
	};

	public function SetEditFocus(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEditFocus", enable]);
	};

	public function ConnectSetEnabled(f:(vbo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetEnabled", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetEnabled() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetEnabled"]);
	};

	public function SetEnabled(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabled", vbo]);
	};

	public function SetEnabledDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetEnabledDefault", vbo]);
	};

	public function SetFixedHeight(h:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFixedHeight", h]);
	};

	public function SetFixedSize(s:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFixedSize", s]);
	};

	public function SetFixedSize2(w:Int, h:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFixedSize2", w, h]);
	};

	public function SetFixedWidth(w:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFixedWidth", w]);
	};

	public function SetFocus(reason:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocus", reason]);
	};

	public function ConnectSetFocus2(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetFocus2", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetFocus2() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetFocus2"]);
	};

	public function SetFocus2() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocus2"]);
	};

	public function SetFocus2Default() {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocus2Default"]);
	};

	public function SetFocusPolicy(policy:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocusPolicy", policy]);
	};

	public function SetFocusProxy(w:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFocusProxy", w]);
	};

	public function SetFont(vqf:QFont_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFont", vqf]);
	};

	public function SetForegroundRole(role:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetForegroundRole", role]);
	};

	public function SetGeometry(vqr:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometry", vqr]);
	};

	public function SetGeometry2(x:Int, y:Int, w:Int, h:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometry2", x, y, w, h]);
	};

	public function SetGraphicsEffect(effect:QGraphicsEffect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGraphicsEffect", effect]);
	};

	public function ConnectSetHidden(f:(hidden:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetHidden", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetHidden() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetHidden"]);
	};

	public function SetHidden(hidden:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHidden", hidden]);
	};

	public function SetHiddenDefault(hidden:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetHiddenDefault", hidden]);
	};

	public function SetInputMethodHints(hints:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetInputMethodHints", hints]);
	};

	public function SetLayout(layout:QLayout_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLayout", layout]);
	};

	public function SetLayoutDirection(direction:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLayoutDirection", direction]);
	};

	public function SetLocale(locale:QLocale_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetLocale", locale]);
	};

	public function SetMask(bitmap:QBitmap_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMask", bitmap]);
	};

	public function SetMask2(region:QRegion_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMask2", region]);
	};

	public function SetMaximumHeight(maxh:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumHeight", maxh]);
	};

	public function SetMaximumSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumSize", vqs]);
	};

	public function SetMaximumSize2(maxw:Int, maxh:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumSize2", maxw, maxh]);
	};

	public function SetMaximumWidth(maxw:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMaximumWidth", maxw]);
	};

	public function SetMinimumHeight(minh:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumHeight", minh]);
	};

	public function SetMinimumSize(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumSize", vqs]);
	};

	public function SetMinimumSize2(minw:Int, minh:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumSize2", minw, minh]);
	};

	public function SetMinimumWidth(minw:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMinimumWidth", minw]);
	};

	public function SetMouseTracking(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetMouseTracking", enable]);
	};

	public function SetPalette(vqp:QPalette_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPalette", vqp]);
	};

	public function SetParent_QWidget(parent:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetParent", parent]);
	};

	public function SetParent2(parent:QWidget_ITF, ff:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetParent2", parent, ff]);
	};

	public function SetShortcutAutoRepeat(id:Int, enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShortcutAutoRepeat", id, enable]);
	};

	public function SetShortcutEnabled(id:Int, enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetShortcutEnabled", id, enable]);
	};

	public function SetSizeIncrement(vqs:QSize_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizeIncrement", vqs]);
	};

	public function SetSizeIncrement2(w:Int, h:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizeIncrement2", w, h]);
	};

	public function SetSizePolicy(vqs:QSizePolicy_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizePolicy", vqs]);
	};

	public function SetSizePolicy2(horizontal:Int, vertical:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSizePolicy2", horizontal, vertical]);
	};

	public function SetStatusTip(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStatusTip", vqs]);
	};

	public function SetStyle(style:QStyle_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStyle", style]);
	};

	public function ConnectSetStyleSheet(f:(styleSheet:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetStyleSheet", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetStyleSheet() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetStyleSheet"]);
	};

	public function SetStyleSheet(styleSheet:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStyleSheet", styleSheet]);
	};

	public function SetStyleSheetDefault(styleSheet:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStyleSheetDefault", styleSheet]);
	};

	public function SetTabOrder(first:QWidget_ITF, second:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabOrder", first, second]);
	};

	public function SetTabletTracking(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTabletTracking", enable]);
	};

	public function SetToolTip(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolTip", vqs]);
	};

	public function SetToolTipDuration(msec:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetToolTipDuration", msec]);
	};

	public function SetUpdatesEnabled(enable:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetUpdatesEnabled", enable]);
	};

	public function ConnectSetVisible(f:(visible:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetVisible", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetVisible() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetVisible"]);
	};

	public function SetVisible(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisible", visible]);
	};

	public function SetVisibleDefault(visible:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetVisibleDefault", visible]);
	};

	public function SetWhatsThis(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWhatsThis", vqs]);
	};

	public function SetWindowFilePath(filePath:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowFilePath", filePath]);
	};

	public function SetWindowFlag(flag:Int, on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowFlag", flag, on]);
	};

	public function SetWindowFlags(ty:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowFlags", ty]);
	};

	public function SetWindowIcon(icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowIcon", icon]);
	};

	public function SetWindowIconText(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowIconText", vqs]);
	};

	public function SetWindowModality(windowModality:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowModality", windowModality]);
	};

	public function ConnectSetWindowModified(f:(vbo:Bool) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetWindowModified", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetWindowModified() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetWindowModified"]);
	};

	public function SetWindowModified(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowModified", vbo]);
	};

	public function SetWindowModifiedDefault(vbo:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowModifiedDefault", vbo]);
	};

	public function SetWindowOpacity(level:Float) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowOpacity", level]);
	};

	public function SetWindowRole(role:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowRole", role]);
	};

	public function SetWindowState(windowState:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowState", windowState]);
	};

	public function ConnectSetWindowTitle(f:(vqs:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetWindowTitle", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSetWindowTitle() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetWindowTitle"]);
	};

	public function SetWindowTitle(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowTitle", vqs]);
	};

	public function SetWindowTitleDefault(vqs:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWindowTitleDefault", vqs]);
	};

	public function SetupUi(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetupUi", widget]);
	};

	public function ConnectShow(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShow", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShow() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShow"]);
	};

	public function Show() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Show"]);
	};

	public function ShowDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowDefault"]);
	};

	public function ConnectShowEvent(f:(event:QShowEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowEvent"]);
	};

	public function ShowEvent(event:QShowEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowEvent", event]);
	};

	public function ShowEventDefault(event:QShowEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowEventDefault", event]);
	};

	public function ConnectShowFullScreen(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowFullScreen", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowFullScreen() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowFullScreen"]);
	};

	public function ShowFullScreen() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowFullScreen"]);
	};

	public function ShowFullScreenDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowFullScreenDefault"]);
	};

	public function ConnectShowMaximized(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowMaximized", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowMaximized() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowMaximized"]);
	};

	public function ShowMaximized() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMaximized"]);
	};

	public function ShowMaximizedDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMaximizedDefault"]);
	};

	public function ConnectShowMinimized(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowMinimized", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowMinimized() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowMinimized"]);
	};

	public function ShowMinimized() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMinimized"]);
	};

	public function ShowMinimizedDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowMinimizedDefault"]);
	};

	public function ConnectShowNormal(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectShowNormal", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectShowNormal() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectShowNormal"]);
	};

	public function ShowNormal() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowNormal"]);
	};

	public function ShowNormalDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "ShowNormalDefault"]);
	};

	public function Size():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Size"]);
	};

	public function ConnectSizeHint(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public function SizeHintDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault"]);
	};

	public function SizeIncrement():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeIncrement"]);
	};

	public function SizePolicy():QSizePolicy {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizePolicy"]);
	};

	public function StackUnder(w:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "StackUnder", w]);
	};

	public function StatusTip():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StatusTip"]);
	};

	public function Style():QStyle {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Style"]);
	};

	public function StyleSheet():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StyleSheet"]);
	};

	public function ConnectTabletEvent(f:(event:QTabletEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectTabletEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectTabletEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectTabletEvent"]);
	};

	public function TabletEvent(event:QTabletEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabletEvent", event]);
	};

	public function TabletEventDefault(event:QTabletEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TabletEventDefault", event]);
	};

	public function TestAttribute(attribute:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TestAttribute", attribute]);
	};

	public function ToolTip():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolTip"]);
	};

	public function ToolTipDuration():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ToolTipDuration"]);
	};

	public function UnderMouse():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UnderMouse"]);
	};

	public function UngrabGesture(gesture:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "UngrabGesture", gesture]);
	};

	public function UnsetCursor() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnsetCursor"]);
	};

	public function UnsetLayoutDirection() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnsetLayoutDirection"]);
	};

	public function UnsetLocale() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UnsetLocale"]);
	};

	public function ConnectUpdate(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdate", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdate() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdate"]);
	};

	public function Update() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update"]);
	};

	public function UpdateDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateDefault"]);
	};

	public function Update2(x:Int, y:Int, w:Int, h:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update2", x, y, w, h]);
	};

	public function Update3(rect:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update3", rect]);
	};

	public function Update4(rgn:QRegion_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Update4", rgn]);
	};

	public function UpdateGeometry() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateGeometry"]);
	};

	public function ConnectUpdateMicroFocus(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectUpdateMicroFocus", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectUpdateMicroFocus() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectUpdateMicroFocus"]);
	};

	public function UpdateMicroFocus() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateMicroFocus"]);
	};

	public function UpdateMicroFocusDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "UpdateMicroFocusDefault"]);
	};

	public function UpdatesEnabled():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "UpdatesEnabled"]);
	};

	public function VisibleRegion():QRegion {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisibleRegion"]);
	};

	public function WhatsThis():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WhatsThis"]);
	};

	public function ConnectWheelEvent(f:(event:QWheelEvent) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWheelEvent", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWheelEvent() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWheelEvent"]);
	};

	public function WheelEvent(event:QWheelEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WheelEvent", event]);
	};

	public function WheelEventDefault(event:QWheelEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WheelEventDefault", event]);
	};

	public override function Width():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Width"]);
	};

	public function WinId():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WinId"]);
	};

	public function Window():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Window"]);
	};

	public function WindowFilePath():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowFilePath"]);
	};

	public function WindowFlags():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowFlags"]);
	};

	public function WindowHandle():QWindow {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowHandle"]);
	};

	public function WindowIcon():QIcon {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowIcon"]);
	};

	public function ConnectWindowIconChanged(f:(icon:QIcon) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectWindowIconChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectWindowIconChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWindowIconChanged"]);
	};

	public function WindowIconChanged(icon:QIcon_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WindowIconChanged", icon]);
	};

	public function WindowIconText():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowIconText"]);
	};

	public function WindowModality():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowModality"]);
	};

	public function WindowOpacity():Float {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowOpacity"]);
	};

	public function WindowRole():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowRole"]);
	};

	public function WindowState():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowState"]);
	};

	public function WindowTitle():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowTitle"]);
	};

	public function ConnectWindowTitleChanged(f:(title:String) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectWindowTitleChanged",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectWindowTitleChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectWindowTitleChanged"]);
	};

	public function WindowTitleChanged(title:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "WindowTitleChanged", title]);
	};

	public function WindowType():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WindowType"]);
	};

	public function X():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "X"]);
	};

	public function Y():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Y"]);
	};

	public function ConnectDestroyQWidget(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQWidget"]);
	};

	public function DestroyQWidget() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWidget"]);
	};

	public function DestroyQWidgetDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWidgetDefault"]);
	};

	public function ChildEvent(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEvent", event]);
	};

	public function ChildEventDefault(event:QChildEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ChildEventDefault", event]);
	};

	public function ConnectNotify(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotify", sign]);
	};

	public function ConnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ConnectNotifyDefault", sign]);
	};

	public function CustomEvent(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEvent", event]);
	};

	public function CustomEventDefault(event:QEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomEventDefault", event]);
	};

	public function DeleteLater() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLater"]);
	};

	public function DeleteLaterDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteLaterDefault"]);
	};

	public function DisconnectNotify(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotify", sign]);
	};

	public function DisconnectNotifyDefault(sign:QMetaMethod_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DisconnectNotifyDefault", sign]);
	};

	public function EventFilter(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilter", watched, event]);
	};

	public function EventFilterDefault(watched:QObject_ITF, event:QEvent_ITF):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "EventFilterDefault", watched, event]);
	};

	public function MetaObject():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObject"]);
	};

	public function MetaObjectDefault():QMetaObject {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MetaObjectDefault"]);
	};

	public function TimerEvent(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEvent", event]);
	};

	public function TimerEventDefault(event:QTimerEvent_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "TimerEventDefault", event]);
	};
}

function NewQWidgetFromPointer(ptr:String):QWidget {
	final r = new QWidget();
	r.initFrom(ptr, "widgets.QWidget");
	return r;
}

function NewQWidget(parent:QWidget_ITF, ff:Int):QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQWidget", "", parent, ff]);
}

function QWidget_CreateWindowContainer(window:QWindow_ITF, parent:QWidget_ITF, flags:Int):QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QWidget_CreateWindowContainer", "", window, parent, flags]);
}

function QWidget_Find(id:Int):QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QWidget_Find", "", id]);
}

function QWidget_KeyboardGrabber():QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QWidget_KeyboardGrabber", ""]);
}

function QWidget_MouseGrabber():QWidget {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.QWidget_MouseGrabber", ""]);
}

function QWidget_SetTabOrder(first:QWidget_ITF, second:QWidget_ITF) {
	Widgets.initModule();
	Internal.callLocalFunction(["", "", "widgets.QWidget_SetTabOrder", "", first, second]);
}

interface QWidgetAction_ITF extends QAction_ITF {
	public function QWidgetAction_PTR():QWidgetAction;
}

class QWidgetAction extends QAction implements QWidgetAction_ITF {
	public function new() {
		super();
	}

	public function QWidgetAction_PTR():QWidgetAction {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QWidgetAction_PTR"]);
	};

	public function ConnectCreateWidget(f:(parent:QWidget) -> QWidget) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCreateWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCreateWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCreateWidget"]);
	};

	public function CreateWidget(parent:QWidget_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateWidget", parent]);
	};

	public function CreateWidgetDefault(parent:QWidget_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreateWidgetDefault", parent]);
	};

	public function CreatedWidgets():Array<QWidget> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CreatedWidgets"]);
	};

	public function DefaultWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "DefaultWidget"]);
	};

	public function ConnectDeleteWidget(f:(widget:QWidget) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDeleteWidget", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDeleteWidget() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDeleteWidget"]);
	};

	public function DeleteWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteWidget", widget]);
	};

	public function DeleteWidgetDefault(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DeleteWidgetDefault", widget]);
	};

	public function ReleaseWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "ReleaseWidget", widget]);
	};

	public function RequestWidget(parent:QWidget_ITF):QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "RequestWidget", parent]);
	};

	public function SetDefaultWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetDefaultWidget", widget]);
	};

	public function ConnectDestroyQWidgetAction(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQWidgetAction",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQWidgetAction() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQWidgetAction"]);
	};

	public function DestroyQWidgetAction() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWidgetAction"]);
	};

	public function DestroyQWidgetActionDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWidgetActionDefault"]);
	};
}

function NewQWidgetActionFromPointer(ptr:String):QWidgetAction {
	final r = new QWidgetAction();
	r.initFrom(ptr, "widgets.QWidgetAction");
	return r;
}

function NewQWidgetAction(parent:QObject_ITF):QWidgetAction {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQWidgetAction", "", parent]);
}

interface QWidgetItem_ITF extends QLayoutItem_ITF {
	public function QWidgetItem_PTR():QWidgetItem;
}

class QWidgetItem extends QLayoutItem implements QWidgetItem_ITF {
	public function new() {
		super();
	}

	public function QWidgetItem_PTR():QWidgetItem {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QWidgetItem_PTR"]);
	};

	public override function ConnectExpandingDirections(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectExpandingDirections",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public override function DisconnectExpandingDirections() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectExpandingDirections"]);
	};

	public override function ExpandingDirections():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExpandingDirections"]);
	};

	public function ExpandingDirectionsDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ExpandingDirectionsDefault"]);
	};

	public override function ConnectGeometry(f:() -> QRect) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectGeometry", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectGeometry"]);
	};

	public override function Geometry():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Geometry"]);
	};

	public function GeometryDefault():QRect {
		return Internal.callLocalFunction(["", Pointer(), ___className, "GeometryDefault"]);
	};

	public override function ConnectIsEmpty(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsEmpty", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectIsEmpty() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsEmpty"]);
	};

	public override function IsEmpty():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEmpty"]);
	};

	public function IsEmptyDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsEmptyDefault"]);
	};

	public override function ConnectMaximumSize(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMaximumSize", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMaximumSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMaximumSize"]);
	};

	public override function MaximumSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSize"]);
	};

	public function MaximumSizeDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MaximumSizeDefault"]);
	};

	public override function ConnectMinimumSize(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectMinimumSize", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectMinimumSize() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectMinimumSize"]);
	};

	public override function MinimumSize():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSize"]);
	};

	public function MinimumSizeDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "MinimumSizeDefault"]);
	};

	public override function ConnectSetGeometry(f:(rect:QRect) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSetGeometry", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSetGeometry() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSetGeometry"]);
	};

	public override function SetGeometry(rect:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometry", rect]);
	};

	public function SetGeometryDefault(rect:QRect_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetGeometryDefault", rect]);
	};

	public override function ConnectSizeHint(f:() -> QSize) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectSizeHint", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectSizeHint() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectSizeHint"]);
	};

	public override function SizeHint():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHint"]);
	};

	public function SizeHintDefault():QSize {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SizeHintDefault"]);
	};

	public function ConnectDestroyQWidgetItem(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQWidgetItem",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQWidgetItem() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQWidgetItem"]);
	};

	public function DestroyQWidgetItem() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWidgetItem"]);
	};

	public function DestroyQWidgetItemDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWidgetItemDefault"]);
	};
}

function NewQWidgetItemFromPointer(ptr:String):QWidgetItem {
	final r = new QWidgetItem();
	r.initFrom(ptr, "widgets.QWidgetItem");
	return r;
}

function NewQWidgetItem2(widget:QWidget_ITF):QWidgetItem {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQWidgetItem2", "", widget]);
}

interface QWizard_ITF extends QDialog_ITF {
	public function QWizard_PTR():QWizard;
}

class QWizard extends QDialog implements QWizard_ITF {
	public function new() {
		super();
	}

	public function QWizard_PTR():QWizard {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QWizard_PTR"]);
	};

	public function AddPage(page:QWizardPage_ITF):Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "AddPage", page]);
	};

	public function ConnectBack(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectBack", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectBack() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectBack"]);
	};

	public function Back() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Back"]);
	};

	public function BackDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "BackDefault"]);
	};

	public function Button(which:Int):QAbstractButton {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Button", which]);
	};

	public function ButtonText(which:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ButtonText", which]);
	};

	public function ConnectCleanupPage(f:(id:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCleanupPage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCleanupPage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCleanupPage"]);
	};

	public function CleanupPage(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CleanupPage", id]);
	};

	public function CleanupPageDefault(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CleanupPageDefault", id]);
	};

	public function CurrentId():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentId"]);
	};

	public function ConnectCurrentIdChanged(f:(id:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCurrentIdChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCurrentIdChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCurrentIdChanged"]);
	};

	public function CurrentIdChanged(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CurrentIdChanged", id]);
	};

	public function CurrentPage():QWizardPage {
		return Internal.callLocalFunction(["", Pointer(), ___className, "CurrentPage"]);
	};

	public function ConnectCustomButtonClicked(f:(which:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectCustomButtonClicked",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectCustomButtonClicked() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCustomButtonClicked"]);
	};

	public function CustomButtonClicked(which:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "CustomButtonClicked", which]);
	};

	public override function ConnectDone(f:(result:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDone", "___REMOTE_CALLBACK___"], f);
	};

	public override function DisconnectDone() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDone"]);
	};

	public override function Done(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "Done", result]);
	};

	public override function DoneDefault(result:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "DoneDefault", result]);
	};

	public function Field(name:String):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Field", name]);
	};

	public function HasVisitedPage(id:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "HasVisitedPage", id]);
	};

	public function ConnectHelpRequested(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectHelpRequested", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectHelpRequested() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectHelpRequested"]);
	};

	public function HelpRequested() {
		Internal.callLocalFunction(["", Pointer(), ___className, "HelpRequested"]);
	};

	public function ConnectInitializePage(f:(id:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInitializePage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInitializePage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInitializePage"]);
	};

	public function InitializePage(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitializePage", id]);
	};

	public function InitializePageDefault(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitializePageDefault", id]);
	};

	public function ConnectNext(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectNext", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectNext() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectNext"]);
	};

	public function Next() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Next"]);
	};

	public function NextDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "NextDefault"]);
	};

	public function ConnectNextId(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectNextId", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectNextId() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectNextId"]);
	};

	public function NextId():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NextId"]);
	};

	public function NextIdDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NextIdDefault"]);
	};

	public function Options():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Options"]);
	};

	public function Page(id:Int):QWizardPage {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Page", id]);
	};

	public function ConnectPageAdded(f:(id:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPageAdded", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPageAdded() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPageAdded"]);
	};

	public function PageAdded(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PageAdded", id]);
	};

	public function PageIds():Array<Int> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "PageIds"]);
	};

	public function ConnectPageRemoved(f:(id:Int) -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectPageRemoved", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectPageRemoved() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectPageRemoved"]);
	};

	public function PageRemoved(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "PageRemoved", id]);
	};

	public function Pixmap(which:Int):QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pixmap", which]);
	};

	public function RemovePage(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "RemovePage", id]);
	};

	public function ConnectRestart(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectRestart", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectRestart() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectRestart"]);
	};

	public function Restart() {
		Internal.callLocalFunction(["", Pointer(), ___className, "Restart"]);
	};

	public function RestartDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "RestartDefault"]);
	};

	public function SetButton(which:Int, button:QAbstractButton_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetButton", which, button]);
	};

	public function SetButtonText(which:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetButtonText", which, text]);
	};

	public function SetDefaultProperty(className:String, property:String, changedSignal:String) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"SetDefaultProperty",
			className,
			property,
			changedSignal
		]);
	};

	public function SetField(name:String, value:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetField", name, value]);
	};

	public function SetOption(option:Int, on:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOption", option, on]);
	};

	public function SetOptions(options:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetOptions", options]);
	};

	public function SetPage(id:Int, page:QWizardPage_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPage", id, page]);
	};

	public function SetPixmap(which:Int, pixmap:QPixmap_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPixmap", which, pixmap]);
	};

	public function SetSideWidget(widget:QWidget_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSideWidget", widget]);
	};

	public function SetStartId(id:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetStartId", id]);
	};

	public function SetSubTitleFormat(format:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSubTitleFormat", format]);
	};

	public function SetTitleFormat(format:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTitleFormat", format]);
	};

	public function SetWizardStyle(style:Int) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetWizardStyle", style]);
	};

	public function SideWidget():QWidget {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SideWidget"]);
	};

	public function StartId():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "StartId"]);
	};

	public function SubTitleFormat():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubTitleFormat"]);
	};

	public function TestOption(option:Int):Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TestOption", option]);
	};

	public function TitleFormat():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "TitleFormat"]);
	};

	public function ConnectValidateCurrentPage(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectValidateCurrentPage",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectValidateCurrentPage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValidateCurrentPage"]);
	};

	public function ValidateCurrentPage():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValidateCurrentPage"]);
	};

	public function ValidateCurrentPageDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValidateCurrentPageDefault"]);
	};

	public function VisitedPages():Array<Int> {
		return Internal.callLocalFunction(["", Pointer(), ___className, "VisitedPages"]);
	};

	public function WizardStyle():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "WizardStyle"]);
	};

	public function ConnectDestroyQWizard(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectDestroyQWizard", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectDestroyQWizard() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQWizard"]);
	};

	public function DestroyQWizard() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWizard"]);
	};

	public function DestroyQWizardDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWizardDefault"]);
	};
}

function NewQWizardFromPointer(ptr:String):QWizard {
	final r = new QWizard();
	r.initFrom(ptr, "widgets.QWizard");
	return r;
}

function NewQWizard(parent:QWidget_ITF, flags:Int):QWizard {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQWizard", "", parent, flags]);
}

interface QWizardPage_ITF extends QWidget_ITF {
	public function QWizardPage_PTR():QWizardPage;
}

class QWizardPage extends QWidget implements QWizardPage_ITF {
	public function new() {
		super();
	}

	public function QWizardPage_PTR():QWizardPage {
		return Internal.callLocalFunction(["", Pointer(), ___className, "QWizardPage_PTR"]);
	};

	public function ButtonText(which:Int):String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ButtonText", which]);
	};

	public function ConnectCleanupPage(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCleanupPage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCleanupPage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCleanupPage"]);
	};

	public function CleanupPage() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CleanupPage"]);
	};

	public function CleanupPageDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CleanupPageDefault"]);
	};

	public function ConnectCompleteChanged(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectCompleteChanged", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectCompleteChanged() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectCompleteChanged"]);
	};

	public function CompleteChanged() {
		Internal.callLocalFunction(["", Pointer(), ___className, "CompleteChanged"]);
	};

	public function Field(name:String):QVariant {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Field", name]);
	};

	public function ConnectInitializePage(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectInitializePage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectInitializePage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectInitializePage"]);
	};

	public function InitializePage() {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitializePage"]);
	};

	public function InitializePageDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "InitializePageDefault"]);
	};

	public function IsCommitPage():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsCommitPage"]);
	};

	public function ConnectIsComplete(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectIsComplete", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectIsComplete() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectIsComplete"]);
	};

	public function IsComplete():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsComplete"]);
	};

	public function IsCompleteDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsCompleteDefault"]);
	};

	public function IsFinalPage():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "IsFinalPage"]);
	};

	public function ConnectNextId(f:() -> Int) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectNextId", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectNextId() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectNextId"]);
	};

	public function NextId():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NextId"]);
	};

	public function NextIdDefault():Int {
		return Internal.callLocalFunction(["", Pointer(), ___className, "NextIdDefault"]);
	};

	public function Pixmap(which:Int):QPixmap {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Pixmap", which]);
	};

	public function RegisterField(name:String, widget:QWidget_ITF, property:String, changedSignal:String) {
		Internal.callLocalFunction([
			"",
			Pointer(),
			___className,
			"RegisterField",
			name,
			widget,
			property,
			changedSignal
		]);
	};

	public function SetButtonText(which:Int, text:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetButtonText", which, text]);
	};

	public function SetCommitPage(commitPage:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetCommitPage", commitPage]);
	};

	public function SetField(name:String, value:QVariant_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetField", name, value]);
	};

	public function SetFinalPage(finalPage:Bool) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetFinalPage", finalPage]);
	};

	public function SetPixmap(which:Int, pixmap:QPixmap_ITF) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetPixmap", which, pixmap]);
	};

	public function SetSubTitle(subTitle:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetSubTitle", subTitle]);
	};

	public function SetTitle(title:String) {
		Internal.callLocalFunction(["", Pointer(), ___className, "SetTitle", title]);
	};

	public function SubTitle():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "SubTitle"]);
	};

	public function Title():String {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Title"]);
	};

	public function ConnectValidatePage(f:() -> Bool) {
		Internal.callLocalAndRegisterRemoteFunction(["", Pointer(), ___className, "ConnectValidatePage", "___REMOTE_CALLBACK___"], f);
	};

	public function DisconnectValidatePage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectValidatePage"]);
	};

	public function ValidatePage():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValidatePage"]);
	};

	public function ValidatePageDefault():Bool {
		return Internal.callLocalFunction(["", Pointer(), ___className, "ValidatePageDefault"]);
	};

	public function Wizard():QWizard {
		return Internal.callLocalFunction(["", Pointer(), ___className, "Wizard"]);
	};

	public function ConnectDestroyQWizardPage(f:() -> Void) {
		Internal.callLocalAndRegisterRemoteFunction([
			"",
			Pointer(),
			___className,
			"ConnectDestroyQWizardPage",
			"___REMOTE_CALLBACK___"
		], f);
	};

	public function DisconnectDestroyQWizardPage() {
		Internal.callLocalAndDeregisterRemoteFunction(["", Pointer(), ___className, "DisconnectDestroyQWizardPage"]);
	};

	public function DestroyQWizardPage() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWizardPage"]);
	};

	public function DestroyQWizardPageDefault() {
		Internal.callLocalFunction(["", Pointer(), ___className, "DestroyQWizardPageDefault"]);
	};
}

function NewQWizardPageFromPointer(ptr:String):QWizardPage {
	final r = new QWizardPage();
	r.initFrom(ptr, "widgets.QWizardPage");
	return r;
}

function NewQWizardPage(parent:QWidget_ITF):QWizardPage {
	Widgets.initModule();
	return Internal.callLocalFunction(["", "", "widgets.NewQWizardPage", "", parent]);
}
